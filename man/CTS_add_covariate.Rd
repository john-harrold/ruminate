% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CTS_Server.R
\name{CTS_add_covariate}
\alias{CTS_add_covariate}
\title{Add Covariate to Elemetnt}
\usage{
CTS_add_covariate(state, element)
}
\arguments{
\item{state}{CTS state from \code{CTS_fetch_state()}}

\item{element}{Element list from \code{CTS_fetch_current_element()}}
}
\value{
Element with the results of adding the covariate. The \code{cares} list
element can be used to determine the exit status of the function.
\itemize{
\item{COV_IS_GOOD}  If TRUE if the covariate was good and added, and FALSE if
there were any issues.
\item{msgs}     Vector of messages.
}
}
\description{
Takes the ui elements in the module state and processes the covariate elements for addition.
}
\details{
This depends on the following UI values in the state
\itemize{
\item{} \code{state[["CTS"]][["ui"]][["covariate_value"]]}
\item{} \code{state[["CTS"]][["ui"]][["covariate_type_selected"]]}
\item{} \code{state[["CTS"]][["ui"]][["selected_covariate"]]}
}
}
\examples{
# For more information see the Clinical Trial Simulation vignette:
# https://ruminate.ubiquity.tools/articles/clinical_trial_simulation.html

# None of this will work if rxode2 isn't installed:
library(formods)
if(is_installed("rxode2")){

sess_res = CTS_test_mksession(session=list(), full_session=FALSE)
state = sess_res$state
session = sess_res$session
input   = sess_res$input

# Fetch a list of the current element
element = CTS_fetch_current_element(state)

# You can modify the element
element[["element_name"]] = "A more descriptive name"

# Simulating the current element
element = CTS_simulate_element(state, element)

# You can now place element back in the state
state = CTS_set_current_element(state, element)

# This will extract the code for the current module
code = CTS_fetch_code(state)
code

# This will update the checksum of the module state
state = CTS_update_checksum(state)


# CTS_add_covariate
# CTS_add_rule
# CTS_change_source_model
# CTS_fetch_code
# CTS_plot_element


# Creates a new empty element
state = CTS_new_element(state)

# Delete the current element
state = CTS_del_current_element(state)
}
}
