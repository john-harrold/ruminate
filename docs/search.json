[{"path":"/articles/deployment.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Deployment and Customization","text":"Running ruminate simple straight forward using ruminate function: default presents modules standard format. However may wish deploy ruminate internal server customize .","code":"library(ruminate) ruminate()"},{"path":"/articles/deployment.html","id":"deployment","dir":"Articles","previous_headings":"","what":"Deployment","title":"Deployment and Customization","text":"deploy ruminate can create copy app based template package: Certain features app behave differently depending whether running locally deployed server. tell App deployed need create empty file named DEPLOYED directory deployed app file. two files (App.R DEPLOYED) placed direcory shiny server ruminate installed enough deploy basic app.","code":"file.copy(from = system.file(package=\"ruminate\",\"templates\", \"ruminate.R\"),            to   = \"App.R\") file.create(\"DEPLOYED\")"},{"path":"/articles/deployment.html","id":"customization","dir":"Articles","previous_headings":"","what":"Customization","title":"Deployment and Customization","text":"can open App.R file run app locally well. can also edit file customize app. includes default text presented, graphics might want, also color scheme. Beyond individual modules also customizable.","code":""},{"path":"/articles/deployment.html","id":"app-layout","dir":"Articles","previous_headings":"Customization","what":"App Layout","title":"Deployment and Customization","text":"app built around modules overall look introductory text controlled file. default app uses shinydashboard package. can look documentation package alter tabs, default skin color, module icons, etc. default package contains modules, can simply remove tabs modules want.","code":""},{"path":"/articles/deployment.html","id":"individual-modules","dir":"Articles","previous_headings":"Customization","what":"Individual Modules","title":"Deployment and Customization","text":"top App.R file locations module configuration files defined: controls different aspects module including text displayed, icons used, certain behaviors app, default values, etc. options described comments configuration files. use need first make copy specific configuration file. example, customize NCA module make copy NCA.yaml file: can make changes want myNCA.yaml file. need specify App.R file want use new configuration file. can thing modules well.","code":"formods.yaml  = system.file(package=\"formods\",  \"templates\",  \"formods.yaml\") ASM.yaml      = system.file(package=\"formods\",  \"templates\",  \"ASM.yaml\") UD.yaml       = system.file(package=\"formods\",  \"templates\",  \"UD.yaml\") DW.yaml       = system.file(package=\"formods\",  \"templates\",  \"DW.yaml\") FG.yaml       = system.file(package=\"formods\",  \"templates\",  \"FG.yaml\") NCA.yaml      = system.file(package=\"ruminate\", \"templates\",  \"NCA.yaml\") file.copy(from = system.file(package=\"ruminate\", \"templates\",  \"NCA.yaml\"),           to   = \"myNCA.yaml\") NCA.yaml      = \"myNCA.yaml\""},{"path":"/articles/model_builder.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Model Building","text":"model building module constructed around rxode2 package. allows load base model either model catalog user-create file. loaded user can modify model (change structure, parameter values, etc), make copy, etc. can upload model rxode2 format also NONMEM format. NONMEM file (control stream listing output) converted upload rxode2 using nonmem2rx package.","code":""},{"path":"/articles/model_builder.html","id":"model-catalog","dir":"Articles","previous_headings":"","what":"Model catalog","title":"Model Building","text":"model catalog built sources field configuration file. can include models nlmixr2lib model library. can also include user defined files. specified found, skipped. Edit MB yaml file alter .","code":""},{"path":"/articles/model_builder.html","id":"user-defined-models","dir":"Articles","previous_headings":"Model catalog","what":"User-defined models","title":"Model Building","text":"User-defined models can included catalog uploaded app. models can specified either NONMEM rxode2 formats. NONMEM models can control stream (good), listing output estimation (better), XML output estimation (best). use nlmixr2 model simply need function definition assigned object my_fcn. examples see: system.file(package=\"ruminate\", \"templates\", \"MB_model_rxode2.R\") system.file(package=\"ruminate\", \"templates\", \"MB_model_NONMEM.ctl\") Modules specified sources section configuration file. default configuration file look working directory App user_model.R user_model.ctl. rxode2 model can name user_model.R place app directory included catalog. Similarly NONMEM control stream can name user_model.ctl, included automatically. exist skipped. can create many entries want.","code":""},{"path":"/articles/model_builder.html","id":"configuration-file","dir":"Articles","previous_headings":"","what":"Configuration File","title":"Model Building","text":"","code":"# The MC field is a skeleton for constructing new modules MC:   # The prefix of object names created in the generated code   element_object_name: \"MB_obj\"   # This is a list of model sources. In the app the sources will be listed in   # the order shown here. This is also referred to as the model catalog. If   # the type is set to nlmixr2lib it will insert the models from nlmixr2lib.   # User defined models can be used as well. See the examples below for   # rxode2 and NONMEM models.   #    # - group: This is how models will be grouped in the selection pulldown.   # - name: Short name for the model: **NOTE that names need to be unique**.   # - description: Verbose description of the model.   # - type: Supported model types are \"nlmixr2lib\", \"rxode2\" or \"NONMEM\".   # - obj: For the rxode2 type you need to also specify the name of the object    #   that is created. This option is only used for the rxode2 type.   # - file: For both rxode2 and nlmixr2 you need to specify a character string    #   with a file path. This will be evaluated as an R command, so keep that    #   in mind. If the file is not found it will be skipped when the app loads.   sources:   - source:       group:       \"User-defined Models\"       name:        \"rxode2 User model\"       description: \"User-defined rxode2 model\"       type:        \"rxode2\"       obj:         \"my_fcn\"       file:        'file.path(getwd(),\"user_model.R\")'   - source:       group:       \"User-defined Models\"       name:        \"NONMEM User model\"       description: \"User-defined NONMEM model\"       type:        \"NONMEM\"       file:        'file.path(getwd(),\"user_model.ctl\")'   - source:       group:       \"Model Library\"       type:        \"nlmixr2lib\"       name:        \"nlmixr2 Model Library\" # The include section is optional. You can use this section to copy files  # from the directory where you are running the app to the user directory to be # used in the app and when saved. The source and dest options can be a path # command like below or a double # quoted string: '\"/path/to/file\"' # The dest should be relative to user directory (think the root of the zip # file that is exported). See formods.yaml for examples.  # # include: #   files: #   - file: #       source: 'file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\")' #       dest:   'file.path(\"config\",\"report.docx\")'   code: # module specific code options     packages: [ \"rxode2\", \"nonmem2rx\", \"nlmixr2lib\"]     readOnly: TRUE     mode:     r   # Controls what is shown in the compact ui mode:   compact:     code:    TRUE      clip:    TRUE    # This is where you put reporting options. The expected options are shown   # here, but module-specific options can also be added if needed:   reporting:     enabled: FALSE     # Priority of reporting relative to other modules      # (higher numbers are reported first)     priority: 1   # put different formatting options (widths, heights,   # shinyWidgets button sizes, etc) here.   formatting:     # Dimensions of code snippet box     code:       width:  800       height: 300     preview:       width:  \"800px\"       height: \"500px\"     input:     current_element:       width:  \"200px\"       tooltip: \"Change the current model.\"       tooltip_position: \"right\"     element_name:       width:  \"200px\"     button_clk_run:       size: \"sm\"       block: TRUE     button_clk_del:       size: \"sm\"       block: TRUE       tooltip: \"Delete the current model.\"       tooltip_position: \"right\"     button_clk_save:       size: \"sm\"       block: TRUE       tooltip: \"Save the name for the current model.\"       tooltip_position: \"right\"     button_clk_clip:       size: \"sm\"       block: TRUE       tooltip: \"Copy the code to generate the current model to the clipboard.\"       tooltip_position: \"right\"     button_clk_copy:       size: \"sm\"       block: TRUE       tooltip: \"Make a copy of the current model.\"       tooltip_position: \"right\"     button_clk_new:       size: \"sm\"       block: TRUE       tooltip: \"Create a new model.\"       tooltip_position: \"right\"       width: 100     catalog_selection:       width:   \"200px\"       truncate: 65       tooltip:  \"Select base model from the catalog.\"       tooltip_position: \"top\"         model_type_selection:       width: \"200px\"       tooltip: \"Select the type of the model being uploaded.\"       tooltip_position: \"right\"       choices:         rxode2: \"rxode2 function\"         NONMEM: \"NONMEM (XML, lst, or ctl)\"       default:   \"rxode2\"     upload_model_file:          width: \"400px\"     base_from:                   size:    \"normal\"       status:  \"primary\"       tooltip: \"You can select the base model from a catalog or upload your own\"       tooltip_position: \"bottom\"       choices:         catalog: \"Model Catalog\"         user:    \"User-defined model\"       default: \"catalog\"     # The timescales here can be altered manually. This is the general format:     #   short_name:     #     conv: \"10\"     #     verb: \"A more verbose name\"     # Generally you dont want to  change what is already here in terms of     # these short name used. You can remove timescales you don't want to use     # or add timescales that you need but are not present.     #   -verb  You can change the verb field (what the user sees).      #   The order of     # Appearance is the same order seen here. The default is the selected     # short name for the specified timescale     time_scales:       width: \"200px\"       default: \"weeks\"       tooltip: \"Choose the timescale of the model.\"       tooltip_position: \"top\"       choices:          months:           conv: \"60*60*24*4\"           verb: \"Months\"         weeks:           conv: \"60*60*24*7\"           verb: \"Weeks\"         days:           conv: \"60*60*24\"           verb: \"Days\"         hours:           conv: \"60*60\"           verb: \"Hours\"           min:             conv: \"60\"           verb: \"Minutes\"         sec:           conv: \"1\"           verb: \"Seconds\"   labels:     current_element: NULL # \"Select model\"     element_name :   NULL # \"model name\"     upload_model_file:    NULL     base_from:            NULL     catalog_selection:    NULL     model_type_selection: NULL     time_scale:           NULL     catalog_empty:        \"No models were found, the catalog is empty\"     save_btn:             \"Save\"     clip_btn:             \"Code\"      copy_btn:             \"Copy\"     del_btn:              \"Delete\"     new_btn:              \"New\"     building_model:       \"Building model, be patient.\"     element_name_diff:    \"The model name has changed.\"     model_code_diff:      \"Manual changes have been made to the model.\"     save_change_detected: \"You need to click on the save button for these changes to take effect.\"     head_base_model:      \"Starting model\"     head_model_code:      \"Model code\"     head_time_scale:      \"Model time-scale\"   errors:     no_model_found:             \"No model was found.\"     base_model_build_failed:    \"The base model build failed.\"     manual_model_update_failed: \"Manual model update failed.\"          user_file_upload_failed:    \"User-defined model failed.\"          nlmixr2lib_not_found:       \"The nlmixr2lib package was not found. This library will not be available.\"     selected_id_bad_list:       \"Unable to find a list for the selected component.\"     selected_id_bad_row:        \"Selected component should have 1 row.\"   tooltips:     # Set to FALSE to disable tool tips for this module     include: TRUE     elements: \"Show model components\"     show_code: \"Show model code\"      url_rxode: \"https://nlmixr2.github.io/rxode2/articles/rxode2-syntax.html\"      url_model_types: \"https://ruminate.ubiquity.tools/articles/model_builder.html#model-catalog\"     components:       input_tip: \"My tool tip\""},{"path":"/articles/noncompartmental_analysis.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Noncompartmental Analysis","text":"Non-compartmental analysis (NCA) simple quick method evaluating exposure drug. allows evaluate things like linearity vivo exposure. illustrate consider antibody given subcutaneous injection. actual exposure profile patient might experience given solid black line left panel. don’t yet ability sample continuous fashion. might observer given blue points.  Generally NCA determine following directly data: Cmax - Maximum observed concentration (units=concentration) Tmax - time maximum concentration observed (units=time) AUC - area curve (\\(units=time \\times concentration\\)) AUMC - area first moment curve (\\(units=time^2 \\times concentration\\)) properties based observational data. Cmax Tmax certainly actual maximum concentration long sample judiciously give us good approximation. Similarly, calculated AUC AUMC different actual values. calculate areas need dig back calculus text books trapezoid method. Basically sampling interval trapezoid area calculated added n samples: \\[ \\begin{eqnarray} AUC  &=& \\int_0^{t_f} Cdt &\\approx  \\sum_{=1}^{n-1}{\\frac{C_i+C_{+1}}{2}\\times (t_{+1}-t_{})}  \\\\ AUMC &=& \\int_0^{t_f} t\\times Cdt &\\approx  \\sum_{=1}^{n-1}{\\frac{t_iC_i+t_{+1}C_{+1}}{2}\\times (t_{+1}-t_{})} \\end{eqnarray} \\] can done Excel pretty easily. Depending data analysis properties can calculated. example can calculate clearance, mean residence time, steady-state volume distribution terminal half-life: Clearance: \\(CL = \\frac{Dose}{AUC}\\) Mean residence time: \\(MRT = \\frac{AUMC}{AUC}\\) Steady state volume distribution: \\(V_{ss} = MRT \\times CL\\) Half-life: Terminal slope natural log data Properties like AUC AUMC can also calculated using extrapolation last time point infinity account data beyond observations hand. subsequent values clearance, volumes distribution, etc can also change extrapolation. lot nuance associated calculations, good rely software focuses type analysis. PKNCA package developed mind. ruminate app provides interface functionality found PKNCA generate code can use get started PKNCA.","code":""},{"path":"/articles/noncompartmental_analysis.html","id":"data-format","dir":"Articles","previous_headings":"","what":"Data format","title":"Noncompartmental Analysis","text":"run NCA need data formatted specific way. names columns can defined user. columns required, others optional, others required depending user wants specify dosing. See general description columns followed information dosing inferred: Subject ID: Unique id subject dataset (required) Time: Observation time since first dose (required) Nominal Time: Time since recent dose (optional, needed determine dosing columns) Dose: Amount dose (required) Concentration: Observed concentration (NA missing values, required) Route: Dosing route (intravascular extravascular, required) Grouping: columns used grouping (optional) Dose Duration: Duration infusion (optional) Dosing Cycle Period: recent dose cycle period (optional, needed dosing columns) Event ID: EVID column NONMEM used distinguish dosing observation records (optional, needed dosing rows) Analyte: Used multiple analytes present dataset (optional) Note Dose Concentration need mass units.","code":""},{"path":"/articles/noncompartmental_analysis.html","id":"dosing-information","dir":"Articles","previous_headings":"Data format","what":"Dosing information","title":"Noncompartmental Analysis","text":"Dosing extracted datasets, can incorporated two ways. One dosing information stored columns dataset. simplest straight forward way storing dosing information. method dosing specified individual records (rows) dataset (data formatted NONMEM, can use ).","code":""},{"path":"/articles/noncompartmental_analysis.html","id":"determining-dosing-from-columns","dir":"Articles","previous_headings":"Data format > Dosing information","what":"Determining dosing from columns","title":"Noncompartmental Analysis","text":"Beyond required columns infer dosing columns must also following columns defined: Dose, Dosing Cycle Period, Nominal Time.","code":""},{"path":"/articles/noncompartmental_analysis.html","id":"determining-dosing-from-rows-nonmem-format","dir":"Articles","previous_headings":"Data format > Dosing information","what":"Determining dosing from rows (NONMEM format)","title":"Noncompartmental Analysis","text":"dataset formatted NONMEM can extract dosing rows contain dosing records. case expected following columns dataset: Dose (AMT NONMEM) Event ID (EVID NONMEM). notes dosing information. interval want calculate dose-dependent parameters, need provide information dosing intervals. multiple dose setting intervals enough PK data run NCA , necessary provide dosing information intervals. example four weekly doses intensive sampling weeks 1 4 peak trough weeks 2 3, provide dosing information weeks 2 3. However certain parameters PKNCA provide dosing intermediate sampling information provided (e.g. time steady-state). interested parameters intervals intensive sampling, don’t need worry dosing information intervals.","code":""},{"path":"/articles/noncompartmental_analysis.html","id":"nca-analysis-intervals","dir":"Articles","previous_headings":"Data format","what":"NCA analysis intervals","title":"Noncompartmental Analysis","text":"select interval analysis, necessary observations beginning end interval. observations dosing times (e.g. dose time zero first observation 15 minutes post-dose) want use dosing time beginning interval, can observation BQL missing (NA) dosing time (zero).","code":""},{"path":"/articles/noncompartmental_analysis.html","id":"nca-parameters","dir":"Articles","previous_headings":"Data format","what":"NCA parameters","title":"Noncompartmental Analysis","text":"following shows different NCA parameters can calculated. PKNCA parameter value used PKNCA, App Parameter Name value shown app.","code":""},{"path":"/articles/noncompartmental_analysis.html","id":"configuration-file","dir":"Articles","previous_headings":"","what":"Configuration File","title":"Noncompartmental Analysis","text":"","code":"MC:   code: # module specific code options     packages: [\"PKNCA\", \"dplyr\", \"stringr\", \"formods\", \"ruminate\", \"onbrand\"]     readOnly: TRUE     mode:     r     preamble: |-       # Non-compartmental analysis ----------------------------------------------   compact:     code:    TRUE     clip:    TRUE   reporting:     enabled: TRUE     # Text format determines how text will be rendered. It can be either \"md\"     # for Markdown or \"text\" for plain text. This will also control things     # like table headers.     text_format: \"md\"     # Priority of reporting relative to other modules (higher numbers are     # reported first)     priority: 10     # The order of the figure and table ids (e.g. fg_ind_obs) represents the     # order in which figures and tables will be reported. Each id should have     # the following optoins:     #     #   caption_single      Caption used when a table or figure needs only a     #                       single page.     #     #   caption_multiple    Caption used when a table or figure spans multiple     #                       pages.     #     #   title_single        Slide title used when a table or figure needs only a     #                       single page.     #     #   title_multiple      Slide title used when a table or figure spans multiple     #                       pages.     #     #   sub_title_single    Slide sub_title used when a table or figure needs only a     #                       single page.     #     #   sub_title_multiple  Slide sub_title used when a table or figure spans multiple     #                       pages.     #     # The following placeholders can be used bu surroudning them with ===. For     # example to include the total number of figures you would use     # ===FIGTOT===:     #     # NCADESC               Description of the NCA analysis provided by the     #                       user in the UI (tables and figures).     #     # FIGNUM                Number of the current figure for figures that span     #                       multiple pages (figures only).     #     # FIGTOT                Total number of figures for figures that span     #                       multiple pages (figures only).     #     # TABNUM                Number of the current table for tables that span     #                       multiple pages (tables only).     #     # TABTOT                Total number of tables for tables that span multiple     #                       pages (tables only).     #     #     figures:       fg_ind_obs:         caption_single:     \"===NCADESC=== (Individual Observations)\"         caption_multiple:   \"===NCADESC=== (Individual Observations,  ===FIGNUM=== of ===FIGTOT===)\"         title_single:       \" Individual Observations\"         title_multiple:     \" Individual Observations\"         sub_title_single:   \"===NCADESC===\"         sub_title_multiple: \"===NCADESC=== (===FIGNUM=== of ===FIGTOT===)\"     tables:       tb_ind_params:         caption_single:   \"===NCADESC=== (Individual Parameters)\"         caption_multiple: \"===NCADESC=== (Individual Parameters, ===TABNUM=== of ===TABTOT===)\"       tb_ind_obs:         caption_single:   \"===NCADESC===, Individual Data\"         caption_multiple: \"===NCADESC===, Individual Data (===TABNUM=== of ===TABTOT===)\"     # Default number of significant digits     digits: 3     # When reporting units the * will be replaced with this value:     mult_str: \"⋅\"     # You can use unicode here like this \"∞\"     # How infinity is represented in reports like table headers     # to change inf in parameters you need to change them for the individual     # parameters below.     infinity:    \"inf\"     not_calc:    \"NC\"     not_sampled: \"NS\"     blq:         \"BLQ\"     # Here we list all the notes that can be present in tables. You need an     # entry for whatever you put in not_calc and blq above here.     notes:       NC: \"not calculated\"       NS: \"not sampled\"       BLQ: \"below the level of quantification\"   notifications:     ana_add_int_success: \"Interval added: ===DETAILS===\"   # Put different formatting options (widths, heights,   # shinyWidgets button sizes, etc) here.   formatting:     # Dimensions of code snippet box     code:       width:  800       height: 300     # Dimensions of the notes text area     notes:       width:  \"520px\"       height: \"75px\"     # Width of textInput and selectInput UI elements in the     # nca configuration     nca_config_option:       width: 150     # Width of the figure preview (must be numeric)     # The options nrow and ncol refer to the default number of rows and     # columns when faceting. The options nrow_opt and nrow_col are values the     # user can select.     #     preview:       width:           \"100%\"       height:          \"600px\"       nrow:            4       ncol:            4       nrow_opt:        [ 1, 2, 3, 4, 5, 6, 7, 8 ]       ncol_opt:        [ 1, 2, 3, 4, 5, 6, 7, 8 ]       logy:            TRUE       fig_type:        \"report\"       tab_type:        \"report\"     # These apply to the intervals table     dose_from:       default:          \"cols\"       tooltip:          \"Dosing information can be found in either columns (column for dose, dose cycle, nominal time) or rows (one row for each dose event distinguished by an event ID (EVID) column).\"       tooltip_position: \"top\"     intervals:       width:  600       height: 175     intervals_start:       width:  50     intervals_stop:       width:  50     intervals_np_text:       width:  375     intervals_delete:       width:  75     button_ana_run:       size: \"sm\"       block: TRUE     button_ana_del:       size: \"sm\"       block: TRUE       tooltip: \"Delete the current analysis.\"       tooltip_position: \"right\"     button_ana_save:       size: \"sm\"       block: TRUE       tooltip: \"Save the caption and notes and apply the data view for the current analysis.\"       tooltip_position: \"right\"     button_ana_clip:       size: \"sm\"       block: TRUE       tooltip: \"Copy the code to generate the current analysis to the clipboard.\"       tooltip_position: \"right\"     button_fg_save:       size: \"sm\"       block: TRUE      #tooltip: \"tooltip\"      #tooltip_position: \"right\"     button_tb_save:       size: \"sm\"       block: TRUE      #tooltip: \"tooltip\"      #tooltip_position: \"right\"     button_ana_copy:       size: \"sm\"       block: TRUE       tooltip: \"Make a copy of the current analysis.\"       tooltip_position: \"right\"     button_ana_new:       size: \"sm\"       block: TRUE       tooltip: \"Create a new analysis.\"       tooltip_position: \"right\"     button_ana_add_int:       size: \"sm\"       block: TRUE     button_ana_use_scenario:       size: \"sm\"       block: TRUE     check_fg_ind_obs:       width: 75     select_ana_interval_range:       width:  200     text_ana_interval_start:       width: 75     text_ana_interval_stop:       width: 75     select_current_view:       width: 200     select_ana_fig_view:       width: 250     select_ana_tab_view:       width: 250     select_ana_source_sampling:       width: 150     select_ana_nca_parameters:       width: 150     select_ana_col_id:       width: 150       tooltip:  \"Unique id for each subject in the dataset (required)\"       tooltip_position: \"bottom\"     select_ana_col_dose:       width: 150       tooltip: \"Amount of dose (required)\"       tooltip_position: \"bottom\"     select_ana_col_dur:       width: 150       tooltip: \"Duration of infusion (optional)\"       tooltip_position: \"bottom\"     select_ana_col_conc:       width: 150       tooltip: \"Observed concentration (NA for missing values, required)\"       tooltip_position: \"bottom\"     select_ana_col_route:       width: 150       tooltip: \"Dosing route (intravascular  or extravascular, required)\"       tooltip_position: \"bottom\"     select_ana_col_time:       width: 150       tooltip: \"Observation time since the first dose (required)\"       tooltip_position: \"bottom\"     select_ana_col_ntime:       width: 150       tooltip: \"Time since the most recent dose (optional, needed to determine dosing from columns)\"       tooltip_position: \"bottom\"     select_ana_col_group:       width: 150       tooltip: \"Other columns used for grouping (optional)\"       tooltip_position: \"bottom\"     select_ana_col_analyte:       width: 150       tooltip: \"Used if multiple analytes are present in the dataset (optional)\"       tooltip_position: \"bottom\"     select_ana_col_evid:       width: 150       tooltip: \"EVID column from NONMEM used to distinguish dosing and observation records (optional, needed for dosing from rows)\"       tooltip_position: \"bottom\"     select_ana_col_cycle:       width: 150       tooltip: \"The most recent dose cycle or period (optional, needed for dosing from columns)\"       tooltip_position: \"bottom\"     select_ana_units_dose:       width: 150     select_ana_units_time:       width: 150     select_ana_units_conc:       width: 150     select_ana_units_amt:       width: 150     select_ana_scenario:       width: 150     select_fg_ind_obs_ncol:       width: 50     select_fg_ind_obs_nrow:       width: 50     select_fg_ind_obs_page:       width: 100     select_tb_page:       width: 100   errors:     nca_run_filed: \"Unable to run PKNCA. Please, see below for details.\"     bad_input: \"Input error message\"     nca_no_fig: \"There are no figures to display. You must run the analysis first\"     nca_no_tab: \"There are no tables to display. You must run the analysis first\"   tooltips:     # Set to FALSE to disable tool tips for this module     include: TRUE     notes:             \"Optional analysis notes that will be carried over and used in other elements (e.g. reporting).\"     ana_key:           \"Unique description used for referencing analysis and in other elements (e.g. reporting).\"     show_code:         \"Show analysis code\"     nca_intervals:     \"Current NCA intervals\"     # Set urls to NULL to disable     url_dosing:        \"https://ruminate.ubiquity.tools/articles/noncompartmental_analysis.html#dosing-information\"     url_data:          \"https://ruminate.ubiquity.tools/articles/noncompartmental_analysis.html#data-format\"     url_intervals:     \"https://ruminate.ubiquity.tools/articles/noncompartmental_analysis.html#nca-analysis-intervals\"     url_parameters:    \"https://ruminate.ubiquity.tools/articles/noncompartmental_analysis.html#nca-parameters\"     ph:       text_ana_interval_start: 0       text_ana_interval_stop:  \"number or Inf\"       notes:                   \"Optional NCA notes that will be carried over and used in other elements (e.g. reporting).\"   # This controls the figure and table selection for an analysis. The order of   # the keys (e.g., tb_ind_params, tb_sum_params, etc) controls the   # order they are dispalyed in the selector and the text controls what's show   # in the interface.   figures:     fg_ind_obs:       choice:  \"Individual Profiles\"       subtext: \"Faceted view of individual time-course\"   tables:     tb_ind_params:       choice:  \"Individual NCA Parameters\"       subtext: \"Listings of subject-level NCA parmaeters\"     tb_sum_params:       choice:  \"Summarized NCA Parameters\"       subtext: \"Listings of NCA parmaeters summarized by group/analyte\"     tb_ind_obs:       choice:  \"Individual Data\"       subtext: \"Listings of subject-level time-course data\"     tb_nca_raw:       choice:  \"Raw NCA Output\"       subtext: \"Output from PKNCA with requested and dependent parameters\"   labels:     ana_key:                         \"title/caption\"     new_ana:                         \"New\"     run_ana:                         \"Run NCA\"     save_ana:                        \"Save\"     del_ana:                         \"Delete\"     copy_ana:                        \"Copy\"     clip_ana:                        \"Code\"     fg_save:                         \"Apply changes\"     tb_save:                         \"Apply changes\"     curr_anas_none:                  \"No figures yet created\"     no_dataset:                      \"No datasets available to analyze. You need to load a dataset to use this module.\"     ana_use_scenario:                \"Analysis Template\"     ana_add_int:                     \"Add/Update Interval\"     no_intervals:                    \"No intervals added yet\"     panel_analysis_opts:             \"Analysis Details\"     panel_figures:                   \"Figures\"     panel_tables:                    \"Tables\"     panel_nca_config:                \"NCA Options\"     text_ana_interval_start:         \"Start\"     text_ana_interval_stop:          \"End\"     select_ana_interval_range:       \"Interval Range\"     # Headings used in the UI     head_intervals:                  \"Analysis Time Intervals\"     head_intervals_current:          \"Current Intervals\"     head_analysis_template:          \"Use Analysis Template\"     head_intervals_create:           \"Create an Interval\"     head_dose_from:                  \"Dosing Information\"     head_col_mapping:                \"Identify Columns\"     head_col_mapping_required:       \"Required\"     head_col_mapping_optional:       \"Optional\"     head_run_analysis:               \"Run Analysis\"     head_units:                      \"Units\"     select_current_view:             \"Data from\"     select_current_ana:              \"Current NCA\"     select_ana_scenario:             NULL  # \"Type of Analysis:\"     select_ana_col_id:               \"Subject ID\"     select_ana_col_time:             \"Time\"     select_ana_col_ntime:            \"Nominal Time\"     select_ana_col_dose:             \"Dose\"     select_ana_col_dur:              \"Dose Duration\"     select_ana_col_conc:             \"Concentration\"     select_ana_col_route:            \"Route\"     select_ana_col_group:            \"Other Grouping\"     select_ana_col_cycle:            \"Dosing Cycle or Period\"     select_ana_col_evid:             \"Event ID\"     select_ana_col_analyte:          \"Analyte\"     select_ana_units_time:           \"Time\"     select_ana_units_dose:           \"Dose\"     select_ana_units_conc:           \"Concentration\"     select_ana_units_amt:            \"Amount\"     select_ana_nca_parameters:       \"Parameters\"     select_fg_ind_obs_nrow:          \"Rows\"     select_fg_ind_obs_ncol:          \"Columns\"     select_fg_ind_obs_page:          \"Show Page\"     select_tb_page:                  \"Show Page\"     check_fg_ind_obs_logy:           \"Log 10 y-scale\"     switch_ana_include_units:        \"Include Units\"     switch_ana_fig:                  NULL     switch_ana_fig_interactive:      \"Interactive\"     switch_ana_fig_report:           \"Report Preview\"     switch_ana_dose_from:            \"Dosing Found In\"     switch_ana_dose_from_rows:       \"Rows\"     switch_ana_dose_from_cols:       \"Columns\"     switch_ana_tab:                  NULL     switch_ana_tab_interactive:      \"Interactive\"     switch_ana_tab_report:           \"Report Preview\"     select_ana_source_sampling:      \"Data Sampling\"     busy:       run_nca:                       \"Running NCA be patient.\"     PKNCA_raw:       ID:                            \"Subject ID\"       start:                         \"Initial time of the analysis interval.\"       end:                           \"Final time of the analysis interval.\"       PPTESTCD:                      \"Parameter name from PKNCA.\"       PPORRES:                       \"parameter value.\"       exclude:                       \"Reason for parameter exclusion (NA when parameter was calculated).\"       PPORRESU:                      \"Parameter units.\"   # For details on the PKNCA options see this vignette:   # https://billdenney.github.io/pknca/articles/v40-options-for-controlling-PKNCA.html   # This section contains information about different options, metadata about   # them, default values, etc. Using this, the options UI for an analysis is   # generated automatically. Each configuration option has the following:   #   # group        - This is how configuration options will be grouped in the app   # label        - Short textual description   # tooltip      - More detailed description of the option and what goes into it.   #                Set to NULL to not display a tool tip.   # type         - List of possible types. For example if you have \"numeric\" then   #                \"character\" the value will be evaluated as numeric, if this is   #                NA then it will be evaluated as character.   # value        - Default value in the UI   # options      - If set to NULL a text input box will be created for this option,   #                if there are options then a selection box will be created.   # pknca_option - The actual option set with PKNCA   nca_config:     adj_r_squared_factor:       group:         General       # BILL I need a better label for this       label:         \"r² (Adj) factor\"       tooltip:       \"The adjusted r² for the calculation of λz has this factor times the number of data points added to it. It allows for more data points to be preferred in the calculation of half-life.\"       type:          \"numeric\"       value:         0.0001       options:       NULL       pknca_option:  adj.r.squared.factor     max_missing:       group:         General       label:         \"Max missing (frac)\"       tooltip:       \"The maximum fraction of the data that may be missing (‘NA’) to calculate summary statistics.\"       type:          \"numeric\"       value:         0.5       options:       NULL       pknca_option:  max.missing     auc_method:       group:         AUC       label:         Method       tooltip:       \"The method used to calculate the AUC and related statistics.\"       type:          \"character\"       value:         \"lin up/log down\"       options:       [\"lin up/log down\", \"linear\"]       pknca_option:  auc.method     conc_na:       group:         Missing and BLQ Values       label:         Missing values       tooltip:       \"Determines how missing (NA) values are generally handled. Can be either drop or a numeric value to use. \"       type:          \"mixed\"       value:         \"drop\"       options:       NULL       pknca_option:  conc.na     conc_blq_first:       group:         Missing and BLQ Values       label:         First value BLQ       tooltip:       \"Indicates what to do if the first observation is BLQ. It can either be drop, keep, or a numeric value to use.\"       type:          \"mixed\"       value:         \"keep\"       options:       NULL       pknca_option:  conc.blq$first     conc_blq_middle:       group:         Missing and BLQ Values       label:         Middle values BLQ       tooltip:       \"Indicates what to do if a value between the first and last observations is BLQ. It can either be drop, keep, or a numeric value to use.\"       type:          \"mixed\"       value:         \"drop\"       options:       NULL       pknca_option:  conc.blq$middle     conc_blq_last:       group:         \"Missing and BLQ Values\"       label:         \"Last Value BLQ\"       tooltip:       \"Indicates what to do if the last observation is BLQ. It can either be drop, keep, or a numeric value to use.\"       type:          \"mixed\"       value:         \"keep\"       options:       NULL       pknca_option:  conc.blq$last     first_tmax:       group:         \"General\"       label:         \"Multiple tmax use first\"       tooltip:       \"If there is more than one concentration equal to Cmax, should the time selected for Tmax be the first value? If TRUE, the first will be selected. If FALSE, the last will be selected.\"       type:          \"logical\"       value:         TRUE       options:       [TRUE, FALSE]       pknca_option:  first.tmax     allow_tmax_in_half_life:       group:         \"Half-Life\"       label:         \"Allow tmax in half-life\"       tooltip:       \"Should the concentration and time at Tmax be allowed in the half-life calculation? TRUE is yes and FALSE is no.\"       type:          \"logical\"       value:         FALSE       options:       [TRUE, FALSE]       pknca_option:  allow.tmax.in.half.life     min_hl_points:       group:         \"Half-Life\"       label:         \"Min points\"       tooltip:       \"What is the minimum number of points required to calculate half-life?\"       type:          \"numeric\"       value:         3       options:       [ 2, 3, 4, 5 ]       pknca_option:  min.hl.points     min_span_ratio:       group:         \"Half-Life\"       label:         \"Min span ratio\"       # BILL this is a bit cryptic       tooltip:       \"What is the minimum span ratio required to consider a half-life valid?\"       type:          \"logical\"       value:         2       options:       NULL       pknca_option:  min.span.ratio     min_hl_r_squared:       group:         \"Half-Life\"       label:         \"Min r² value\"       tooltip:       \"What is the minimum r² value to consider a half-life calculation valid?\"       type:          \"numeric\"       value:         0.9       options:       NULL       pknca_option:  min.hl.r.squared     max_aucinf_pext:       group:         \"AUC\"       label:         \"Max allowed extrap (%)\"       tooltip:       \"What is the maximum percent extrapolation to consider an AUC∞ valid?\"       type:          \"numeric\"       value:         20       options:       NULL       pknca_option:  max.aucinf.pext   # Prefix used to create NCA analysis objects in generated code   nca_object_name: \"myANA_\"   # The following patterns are used when detecting columns in your dataset   # automatically. You can create a multiple patterns. They will be processed   # in order from left to right. The first pattern to match will return that   # column. For example if you set id to:   #   # id:   [\"^(?i)id$\",    \"(?i)subject\"]   #   # It will match any column that is id. The (?i) is case insensitive. But it   # wont match IDs for example because it looks for something that starts with   # i (^) and ends with d ($).   #   # If that fails it will look for any column with the text 'subject' in it   # regardless of case. So it would match SUBJECT, subject, Subjects,   # subject id, etc.   #   # If you set it to NULL no attempt will be made to detect the column.   detect_col:     id:      [\"^(?i)id$\",    \"(?i)subject\",    \"(?i)animal\"]     time:    [\"^(?i)time\",   \"(?i)ntime\"  ]     ntime:   [\"^(?i)ntime\",  \"(?i)time\"   ]     conc:    [\"^(?i)conc\",   \"^(?i)dv$\",      \"^(?i)pcstresn$\", \"^(?i)lbstresn$\", \"^(?i)AVAL(N|NUM)?$\"]     dose:    [\"(?i)dose\",    \"^(?i)ecdose?$\", \"^(?i)exdose?$\"]     evid:    [\"(?i)evid\"]     route:   [\"(?i)route\"]     cycle:   [\"(?i)cycle\",   \"(?i)dose_num\", \"(?i)period\"]     group:   NULL     analyte: NULL     dur:     NULL   # Routes may be specified in the dataset in a more detailed or convenient   # format than what is needed for analysis. Here you can specify patterns   # that can be used to detect routes. For details on the regular expressions   # that can be used see the detect_col section above. In general you can use   # the format of:   #   #   myroute: [\"regex1\", \"regex2\"]   #   # This will assign the route to 'myroute' in the ROUTE column if it matches   # regex1 or regex2.   #   detect_route:     intravascular: [\"^(?i)iv$\"]     extravascular: [\"^(?i)sc$\", \"^(?i)oral\"]   # These are default analysis scenarios that are shown in the App. They will   # be shown in the order defined. Each scenario has the following attributes:   #   - description: Free form textual description shown to the user   #   - nca_parameters: List of nca parameters to be calculated   #   - sampling: Can be either \"serial\" or \"sparse\"   #   BILL: Get relevant scenarios from bill here   ana_scenarios:     sd_iv:       description: \"Single Dose (IV)\"       nca_parameters: [\"cmax\", \"auclast\", \"aucinf.obs\"]       sampling:   \"serial\"       intervals:         - row:             start:         0             stop:          Inf             nca_parameters: [\"aucinf.obs\"]         - row:             start:         0             stop:          21             nca_parameters: [\"cmax\", \"auclast\"]     md_iv:       description: \"Multiple Dose IV\"       nca_parameters: [\"cmax\", \"auclast\", \"aucinf.obs\"]       sampling:   \"serial\"       intervals:         - row:             start:         0             stop:          Inf             nca_parameters: [\"cmax\", \"auclast\",\"aucinf.obs\"]     sd_iv_sparse:       description: \"Single Dose (IV) Sparse Sampling\"       nca_parameters: [\"cmax\", \"sparse_auclast\"]       sampling:   \"sparse\"       intervals:         - row:             start:          0             stop:           Inf             nca_parameters: [\"cmax\", \"sparse_auclast\"]     md_iv_sparse:       description: \"Multiple Dose IV Sparse Sampling\"       nca_parameters: [\"cmax\", \"sparse_auclast\"]       sampling:   \"sparse\"       intervals:         - row:             start:          0             stop:           Inf             nca_parameters: [\"cmax\", \"sparse_auclast\"]   # This is the default shown when the app loads or a new analysis is created   ana_scenario_def: \"sd_iv\"   # Here are all of the available NCA parameters. Each field is the name of   # the parameter used in PKNCA. See the table in this vignette for the   # available parameters:   #   # https://cran.r-project.org/web/packages/PKNCA/vignettes/v03-selection-of-calculation-intervals.html   #   # Each of parameter has the following   #   #  - description: This is a verbose description of the parameter. If set to NULL the   #                 description from PKNCA will be used. Set it to other text to   #                 overwrite it. This description will also be used in exports as   #                 well.   #   #  - text:        Textual description to show the user. If set to NULL it   #                 will use the text form PKCNA.   #   #  - md:          Markdown formatted value of text.   #   #  - group:       This is how the paramters will be grouped in the UI that   #                 is generated.   #   # To limit the options the user sees you simply need to comment out the   # parameters you do not want in the App. Alterantively you can use the   # grouping below to have the most common parameters together at the top and   # the remaining in case they are needed.   #   # BILL can you go through the text and md elements below and make any   # changes you think make sense. For example is there a better way to label   # the parameter aucint.inf.obs.dose :).   #   nca_parameters:     aucall:       description: NULL       text:        NULL       md:          \"AUC~all~\"       group:       \"Common Parameters\"     adj.r.squared:       description: NULL       text:        \"r² (Adj)\"       md:          \"Adj. R^2^\"       group:       \"Other\"     ae:       description: NULL       text:        NULL       md:          \"AE\"       group:       \"Other\"     aucall.dn:       description: NULL       text:        NULL       md:          \"AUC~all,dn~\"       group:       \"Other\"     aucinf.obs:       description: NULL       text:        NULL       md:          \"AUC~inf,obs~\"       group:       \"Other\"     aucinf.obs.dn:       description: NULL       text:        NULL       md:          \"AUC~inf,obs,dn~\"       group:       \"Other\"     aucinf.pred.dn:       description: NULL       text:        NULL       md:          \"AUC~inf,pred,dn~\"       group:       \"Other\"     aucint.all:       description: NULL       text:        NULL       md:          \"AUC~int,all~\"       group:       \"Other\"     aucint.all.dose:       description: NULL       text:        NULL       md:          \"AUC~int,all,dose~\"       group:       \"Other\"     aucint.inf.obs:       description: NULL       text:        NULL       md:          \"AUC~int,inf,obs~\"       group:       \"Other\"     aucint.inf.obs.dose:       description: NULL       text:        NULL       md:          \"AUC~int,inf,obs,dose~\"       group:       \"Other\"     aucint.inf.pred:       description: NULL       text:        NULL       md:          \"AUC~int,inf,pred~\"       group:       \"Other\"     aucint.inf.pred.dose:       description: NULL       text:        NULL       md:          \"AUC~int,inf,pred,dose~\"       group:       \"Other\"     aucint.last:       description: NULL       text:        NULL       md:          \"AUC~int,last~\"       group:       \"Other\"     aucint.last.dose:       description: NULL       text:        NULL       md:          \"AUC~int,last,dose~\"       group:       \"Other\"     aucivall:       description: NULL       text:        NULL       md:          \"AUC~iv,all~\"       group:       \"Other\"     aucivinf.obs:       description: NULL       text:        NULL       md:          \"AUC~iv,inf,obs~\"       group:       \"Other\"     aucivinf.pred:       description: NULL       text:        NULL       md:          \"AUC~iv,inf,pred~\"       group:       \"Other\"     aucivint.all:       description: NULL       text:        NULL       md:          \"AUC~iv,int,all~\"       group:       \"Other\"     aucivint.last:       description: NULL       text:        NULL       md:          \"AUC~iv,int,last~\"       group:       \"Other\"     aucivlast:       description: NULL       text:        NULL       md:          \"AUC~iv,last~\"       group:       \"Other\"     aucivpbextall:       description: NULL       text:        NULL       md:          \"AUC~iv,pbe,all~\"       group:       \"Other\"     aucivpbextinf.obs:       description: NULL       text:        NULL       md:          \"AUC~iv,pbe,inf,obs~\"       group:       \"Other\"     aucivpbextinf.pred:       description: NULL       text:        NULL       md:          \"AUC~iv,pbe,inf,pred~\"       group:       \"Other\"     aucivpbextint.all:       description: NULL       text:        NULL       md:          \"AUC~iv,pbe,inf,all~\"       group:       \"Other\"     aucivpbextint.last:       description: NULL       text:        NULL       md:          \"AUC~iv,pbe,inf,last~\"       group:       \"Other\"     aucivpbextlast:       description: NULL       text:        NULL       md:          \"AUC~iv,pbe,last~\"       group:       \"Other\"     auclast:       description: NULL       text:        NULL       md:          \"AUC~last~\"       group:       \"Other\"     auclast.dn:       description: NULL       text:        NULL       md:          \"AUC~last,dn~\"       group:       \"Other\"     aucpext.obs:       description: NULL       text:        NULL       md:          \"AUC~pext,obs~\"       group:       \"Other\"     aucpext.pred:       description: NULL       text:        NULL       md:          \"AUC~pext,pred~\"       group:       \"Other\"     aumcall:       description: NULL       text:        NULL       md:          \"AUMC~all~\"       group:       \"Other\"     aumcall.dn:       description: NULL       text:        NULL       md:          \"AUMC~all,dn~\"       group:       \"Other\"     aumcinf.obs:       description: NULL       text:        NULL       md:          \"AUMC~inf,obs~\"       group:       \"Other\"     aumcinf.obs.dn:       description: NULL       text:        NULL       md:          \"AUMC~inf,obs,dn~\"       group:       \"Other\"     aumcinf.pred.dn:       description: NULL       text:        NULL       md:          \"AUMC~inf,pred,dn~\"       group:       \"Other\"     aumclast:       description: NULL       text:        NULL       md:          \"AUMC~last~\"       group:       \"Other\"     aumclast.dn:       description: NULL       text:        NULL       md:          \"AUMC~last,dn~\"       group:       \"Other\"     c0:       description: NULL       text:        NULL       md:          \"C~0~\"       group:       \"Common Parameters\"     cav:       description: NULL       text:        NULL       md:          \"C~ave~\"       group:       \"Other\"     cav.dn:       description: NULL       text:        NULL       md:          \"C~ave,dn~\"       group:       \"Other\"     ceoi:       description: NULL       text:        NULL       md:          \"C~EOI~\"       group:       \"Other\"     cl.all:       description: NULL       text:        NULL       md:          \"CL\"       group:       \"Common Parameters\"     cl.last:       description: NULL       text:        NULL       md:          \"CL~last~\"       group:       \"Common Parameters\"     cl.obs:       description: NULL       text:        NULL       md:          \"CL~obs~\"       group:       \"Other\"     cl.pred:       description: NULL       text:        NULL       md:          \"CL~pred~\"       group:       \"Other\"     clast.obs:       description: NULL       text:        NULL       md:          \"CL~last,obs~\"       group:       \"Other\"     clast.pred:       description: NULL       text:        NULL       md:          \"CL~last,pred~\"       group:       \"Other\"     clast.pred.dn:       description: NULL       text:        NULL       md:          \"CL~last,pred,dn~\"       group:       \"Other\"     clr.last:       description: NULL       text:        NULL       md:          \"CL~R,last~\"       group:       \"Other\"     clr.obs:       description: NULL       text:        NULL       md:          \"CL~R,obs~\"       group:       \"Other\"     clr.pred:       description: NULL       text:        NULL       md:          \"CL~R,pred~\"       group:       \"Other\"     cmax:       description: NULL       text:        NULL       md:          \"C~max~\"       group:       \"Common Parameters\"     cmax.dn:       description: NULL       text:        NULL       md:          \"C~max,dn~\"       group:       \"Other\"     cmin:       description: NULL       text:        NULL       md:          \"C~min~\"       group:       \"Other\"     cmin.dn:       description: NULL       text:        NULL       md:          \"C~min,dn~\"       group:       \"Other\"     ctrough:       description: NULL       text:        NULL       md:          \"C~tr~\"       group:       \"Other\"     ctrough.dn:       description: NULL       text:        NULL       md:          \"C~tr,dn~\"       group:       \"Other\"     deg.fluc:       description: NULL       text:        NULL       md:          \"dgf\"       group:       \"Other\"     end:       description: NULL       text:        NULL       md:          \"t~end~\"       group:       \"Other\"     f:       description: NULL       text:        NULL       md:          \"f~b~\"       group:       \"Other\"     fe:       description: NULL       text:        NULL       md:          \"f~e~\"       group:       \"Other\"     half.life:       description: NULL       text:        NULL       md:          \"t~half~\"       group:       \"Common Parameters\"     kel.iv.last:       description: NULL       text:        NULL       md:          \"k~el,iv,last~\"       group:       \"Other\"     kel.iv.obs:       description: NULL       text:        NULL       md:          \"k~el,iv,obs~\"       group:       \"Other\"     kel.iv.pred:       description: NULL       text:        NULL       md:          \"k~el,iv,pred~\"       group:       \"Other\"     kel.last:       description: NULL       text:        NULL       md:          \"k~el,last~\"       group:       \"Other\"     kel.obs:       description: NULL       text:        NULL       md:          \"k~el,obs~\"       group:       \"Other\"     kel.pred:       description: NULL       text:        NULL       md:          \"k~el,pred~\"       group:       \"Other\"     lambda.z:       description: NULL       text:        \"λz\"       md:          \"<ff:symbol>l<\/ff>~z~\"       group:       \"Other\"     lambda.z.n.points:       description: NULL       text:        \"λz,n\"       md:          \"<ff:symbol>l<\/ff>~z,n~\"       group:       \"Other\"     lambda.z.time.first:       description: NULL       text:        \"λz (t 1ˢᵗ)\"       md:          \"<ff:symbol>l<\/ff>~z~ (t 1^st^)\"       group:       \"Other\"     mrt.iv.last:       description: NULL       text:        NULL       md:          \"MRT~iv,last~\"       group:       \"Other\"     mrt.iv.obs:       description: NULL       text:        NULL       md:          \"MRT~iv,obs~\"       group:       \"Other\"     mrt.iv.pred:       description: NULL       text:        NULL       md:          \"MRT~iv,pred~\"       group:       \"Other\"     mrt.last:       description: NULL       text:        NULL       md:          \"MRT~last~\"       group:       \"Other\"     mrt.md.obs:       description: NULL       text:        NULL       md:          \"MRT~md,obs~\"       group:       \"Other\"     mrt.md.pred:       description: NULL       text:        NULL       md:          \"MRT~md,pred~\"       group:       \"Other\"     mrt.obs:       description: NULL       text:        NULL       md:          \"MRT~obs~\"       group:       \"Other\"     mrt.pred:       description: NULL       text:        NULL       md:          \"MRT~pred~\"       group:       \"Other\"     ptr:       description: NULL       text:        NULL       md:          \"PTR\"       group:       \"Other\"     r.squared:       description: NULL       text:        \"r²\"       md:          \"R^2^\"       group:       \"Common Parameters\"     span.ratio:       description: NULL       text:        NULL       md:          \"SR\"       group:       \"Other\"     sparse_auclast:       description: NULL       text:        NULL       md:          \"AUC~last,sp~\"       group:       \"Common Parameters\"     start:       description: NULL       text:        NULL       md:          \"t~start~\"       group:       \"Other\"     swing:       description: NULL       text:        NULL       md:          \"SWING\"       group:       \"Other\"     tfirst:       description: NULL       text:        \"t 1ˢᵗ\"       md:          \"t~first~\"       group:       \"Other\"     thalf.eff.iv.last:       description: NULL       text:        NULL       md:          \"t~half,eff,iv,last~\"       group:       \"Other\"     thalf.eff.iv.obs:       description: NULL       text:        NULL       md:          \"t~half,eff,iv,obs~\"       group:       \"Other\"     thalf.eff.iv.pred:       description: NULL       text:        NULL       md:          \"t~half,eff,iv,pred~\"       group:       \"Other\"     thalf.eff.last:       description: NULL       text:        NULL       md:          \"t~half,eff,last~\"       group:       \"Other\"     thalf.eff.obs:       description: NULL       text:        NULL       md:          \"t~half,eff,obs~\"       group:       \"Other\"     thalf.eff.pred:       description: NULL       text:        NULL       md:          \"t~half,eff,pred~\"       group:       \"Other\"     time_above:       # JMH how is the conconcentration specified       description: NULL       text:        NULL       md:          \"t~ab~\"       group:       \"Other\"     tlag:       description: NULL       text:        NULL       md:          \"t~lag~\"       group:       \"Other\"     tlast:       description: NULL       text:        NULL       md:          \"t~last~\"       group:       \"Other\"     vd.obs:       description: NULL       text:        NULL       md:          \"V~d,obs~\"       group:       \"Other\"     vd.pred:       description: NULL       text:        NULL       md:          \"V~d,pred~\"       group:       \"Other\"     vss.iv.last:       description: NULL       text:        NULL       md:          \"V~ss,iv,last~\"       group:       \"Other\"     vss.iv.obs:       description: NULL       text:        NULL       md:          \"V~ss,iv,obs~\"       group:       \"Other\"     vss.iv.pred:       description: NULL       text:        NULL       md:          \"V~ss,iv,pred~\"       group:       \"Other\"     vss.last:       description: NULL       text:        NULL       md:          \"V~ss,iv,last~\"       group:       \"Other\"     vss.md.obs:       description: NULL       text:        NULL       md:          \"V~ss,md,obs~\"       group:       \"Other\"     vss.md.pred:       description: NULL       text:        NULL       md:          \"V~ss,md,pred~\"       group:       \"Other\"     vss.obs:       description: NULL       text:        NULL       md:          \"V~ss,obs~\"       group:       \"Other\"     vss.pred:       description: NULL       text:        NULL       md:          \"V~ss,pred~\"       group:       \"Other\"     vz.obs:       description: NULL       text:        NULL       md:          \"V~z,obs~\"       group:       \"Other\"     vz.pred:       description: NULL       text:        NULL       md:          \"V~z,pred~\"       group:       \"Other\"   units:     # For reference this is the units vignette from PKNCA     #     # http://billdenney.github.io/pknca/articles/v07-unit-conversion.html     #     # Default value for whether or not to include units. This can     # be overwritten in the app.     include_units: TRUE     # Add unit options here, they will appear in the order they are     # entered. The _def below is the default when a new analysis is     # initialize. It must be in the list.     # BILL how will PKNCA handle units like µg     conc:     [\"ng/mL\",   \"µg/mL\",  \"g/L\",    \"molar\",  \"nM\"]     conc_def:  \"ng/mL\"     dose:     [\"g\",  \"mg\",  \"mg/kg\",   \"µg\", \"µg/kg\",   \"ng\",   \"ng/kg\"]     dose_def:  \"mg\"     amt:      [\"g\",  \"mg\", \"µg\",  \"ng\", \"g\", \"moles\", \"µmoles\", \"nmoles\"]     amt_def:   \"mg\"     time:     [\"day\",     \"hr\",      \"min\",    \"sec\"         ]     time_def:  \"day\"     vol:      [\"mL\",     \"L\"]   # This is used to generate documentation about required columns in datasets.   # Yous hould only change the Column and Description elements. The others are   # used internally.   data_format:     columns:      - entry:         sname:       \"id\"         Column:      \"Subject ID\"         Required:    \"yes\"         Description: \"Unique subject identifier.\"      - entry:         sname:       \"time\"         Column:      \"Time\"         Required:    \"yes\"         Description: \"Time since the first dose. Must be numeric.\"      - entry:         sname:       \"ntime\"         Column:      \"Nominal Time\"         Required:    \"yes\"         Description: \"Time since the last dose in the cycle (same units as Time). Must be numeric.\"      - entry:         sname:       \"conc\"         Column:      \"Concentration\"         Required:    \"yes\"         Description: \"Observed concentration. Must be numeric, no NA values. Missing values should be set to 0.\"      # BILL should this be the dose given at time zero or total dose given over a cycle      - entry:         sname:       \"dose\"         Column:      \"Dose\"         Required:    \"yes\"         Description: \"Value of dose given (must be numeric).\"      - entry:         sname:       \"route\"         Column:      \"Route\"         Required:    \"yes\"         Description: \"Doseing route. It should be either 'extravascular' or 'intravascular' but ruminate will make an effort to figure out other values.\"      - entry:         sname:       \"dur\"         Column:      \"Duration (optional)\"         Required:    \"no\"         Description: \"Doseing duration (same units as Time). If set to N/A a value of 0 will be assumed.\"      - entry:         sname:       \"cycle\"         Column:      \"Dose cycle\"         Required:    \"yes\"         Description: \"Current dose cycle\""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"John Harrold. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Harrold J (2023). ruminate: Pharmacometrics Data Transformation Analysis Tool. R package version 0.2.1, https://ruminate.ubiquity.tools/.","code":"@Manual{,   title = {ruminate: A Pharmacometrics Data Transformation and Analysis Tool},   author = {John Harrold},   year = {2023},   note = {R package version 0.2.1},   url = {https://ruminate.ubiquity.tools/}, }"},{"path":"/index.html","id":"ruminate-","dir":"","previous_headings":"","what":"A Pharmacometrics Data Transformation and Analysis Tool","title":"A Pharmacometrics Data Transformation and Analysis Tool","text":"goal ruminate facilitate exploration pharmacometrics data. done creating Shiny interface different tools data transformation (dplyr tidyr), plotting (ggplot2), noncompartmental analysis (PKNCA). results can reported Excel, Word PowerPoint. state app can saved loaded later date. saved, script generated reproduce different actions Shiny interface.","code":""},{"path":"/index.html","id":"deployed-example-in-the-cloud","dir":"","previous_headings":"","what":"Deployed example in the cloud","title":"A Pharmacometrics Data Transformation and Analysis Tool","text":"can point web browser runrumiate.ubiquity.tools try development version ruminate. Keep mind public server. data tracked kept, open public. careful uploading confidential data. Also know single instance many people using can slow.","code":""},{"path":[]},{"path":"/index.html","id":"from-cran","dir":"","previous_headings":"","what":"From CRAN","title":"A Pharmacometrics Data Transformation and Analysis Tool","text":"can install released version rumiante CRAN :","code":"# Dependencies: install.packages(\"clipr\") install.packages(\"gridExtra\") install.packages(\"prompter\") install.packages(\"readxl\") install.packages(\"shinydashboard\") install.packages(\"ubiquity\")  # Actual package install.packages(\"ruminate\")"},{"path":"/index.html","id":"development-version","dir":"","previous_headings":"","what":"Development version","title":"A Pharmacometrics Data Transformation and Analysis Tool","text":"can install development version GitHub following: Note ruminate depends formods onbrand need first install development versions onbrand formods.","code":"# Installing devtools if it's not already installed if(system.file(package=\"devtools\") == \"\"){   install.packages(\"devtools\")  }  # Dependencies: install.packages(\"clipr\") install.packages(\"gridExtra\") install.packages(\"prompter\") install.packages(\"readxl\") install.packages(\"shinydashboard\") install.packages(\"ubiquity\")  devtools::install_github(\"john-harrold/onbrand\",  dependencies=TRUE) devtools::install_github(\"john-harrold/formods\",  dependencies=TRUE) devtools::install_github(\"john-harrold/ruminate\")"},{"path":[]},{"path":"/index.html","id":"in-rstudio","dir":"","previous_headings":"","what":"In RStudio","title":"A Pharmacometrics Data Transformation and Analysis Tool","text":"","code":"library(ruminate) ruminate()"},{"path":"/index.html","id":"in-a-docker-container","dir":"","previous_headings":"","what":"In a Docker container","title":"A Pharmacometrics Data Transformation and Analysis Tool","text":"Note uses x86 image. work Intel AMD cpus. means wont get far M1 mac. want, can download Docker file . build docker image repository GitHub. run Docker image locally: everything worked can point web browser : push image DockerHub: can use pull image DockerHub:","code":"docker build -t ruminate --no-cache  https://raw.githubusercontent.com/john-harrold/ruminate/main/inst/docker/local_container docker run --name ruminate --rm -p 3838:3838 ruminate http://127.0.0.1:3838/ docker tag ruminate <username>/ruminate:latest docker push <username>/ruminate:latest docker pull <username>/ruminate:latest"},{"path":"/reference/MB_Server.html","id":null,"dir":"Reference","previous_headings":"","what":"Model Builder State Server — MB_Server","title":"Model Builder State Server — MB_Server","text":"Server function Model Builder  Shiny Module","code":""},{"path":"/reference/MB_Server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Model Builder State Server — MB_Server","text":"","code":"MB_Server(   id,   id_ASM = \"ASM\",   FM_yaml_file = system.file(package = \"formods\", \"templates\", \"formods.yaml\"),   MOD_yaml_file = system.file(package = \"ruminate\", \"templates\", \"MB.yaml\"),   deployed = FALSE,   react_state = NULL )"},{"path":"/reference/MB_Server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Model Builder State Server — MB_Server","text":"id ID string corresponds ID used call modules UI elements id_ASM ID string app state managment module used save load app states FM_yaml_file App configuration file FM main section. MOD_yaml_file Module configuration file MC main section. deployed Boolean variable indicating whether app deployed . react_state Variable passed server allow reaction outside module (NULL)","code":""},{"path":"/reference/MB_Server.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Model Builder State Server — MB_Server","text":"MB Server object","code":""},{"path":"/reference/MB_append_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Append Report Elements — MB_append_report","title":"Append Report Elements — MB_append_report","text":"Appends report elements formods report.","code":""},{"path":"/reference/MB_append_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Append Report Elements — MB_append_report","text":"","code":"MB_append_report(state, rpt, rpttype, gen_code_only = FALSE)"},{"path":"/reference/MB_append_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Append Report Elements — MB_append_report","text":"state MB state MB_fetch_state() rpt Report current content report appended function. details structure see documentation FM_generate_report rpttype Type report generate (supported \"xlsx\", \"pptx\", \"docx\"). gen_code_only Boolean value indicating code generated (FALSE).","code":""},{"path":"/reference/MB_append_report.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Append Report Elements — MB_append_report","text":"list containing following elements isgood:    Return status function. hasrptele: Boolean indicator module reportable elements. code:      Code generate reporting elements. msgs:      Messages passed back user. rpt:       Report additions passed back user.","code":""},{"path":[]},{"path":"/reference/MB_build_code.html","id":null,"dir":"Reference","previous_headings":"","what":"Build Code to Generate Model — MB_build_code","title":"Build Code to Generate Model — MB_build_code","text":"Takes function definition rxode object, function object name rxode object name creates code build objects.","code":""},{"path":"/reference/MB_build_code.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build Code to Generate Model — MB_build_code","text":"","code":"MB_build_code(state, session, fcn_def, fcn_obj_name, rx_obj_name)"},{"path":"/reference/MB_build_code.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build Code to Generate Model — MB_build_code","text":"state MB state MB_fetch_state() session Shiny session variable fcn_def Character string containing function definition model fcn_obj_name Object name function create. rx_obj_name Object name rxode2 object create.","code":""},{"path":"/reference/MB_build_code.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build Code to Generate Model — MB_build_code","text":"List following elements model_code Block code create model context larger script. model_code_sa model_code element meant stand alone.","code":""},{"path":"/reference/MB_build_code.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Build Code to Generate Model — MB_build_code","text":"","code":"#library(ruminate) # This will get the full session: sess_res = MB_test_mksession(session=list(), full_session=TRUE) #> → MB: including file #> → MB:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → MB:   dest:   file.path(\"config\",\"report.docx\") #> → MB: including file #> → MB:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → MB:   dest:   file.path(\"config\",\"report.pptx\") #> → MB: including file #> → MB:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → MB:   dest:   file.path(\"config\",\"report.yaml\") #> ! The package rxode2 is not installed #> ! The package nonmem2rx is not installed #> ! The package nlmixr2lib is not installed #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.R not found (skipping) #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.ctl not found (skipping) #> → MB: module checksum updated:8ac755447dc73c185137d18702a2cdb6 #> → MB: State initialized #> → MB: module checksum updated:8ac755447dc73c185137d18702a2cdb6 # This is just for CRAN #sess_res = MB_test_mksession(session=list()) session = sess_res$session input   = sess_res$input  # Configuration files FM_yaml_file  = system.file(package = \"formods\", \"templates\", \"formods.yaml\") MOD_yaml_file = system.file(package = \"ruminate\", \"templates\", \"MB.yaml\")  # Creating an empty state object state = MB_fetch_state(id              = \"MB\",                        input           = input,                        session         = session,                        FM_yaml_file    = FM_yaml_file,                        MOD_yaml_file   = MOD_yaml_file,                        react_state     = NULL) #> → MB: including file #> → MB:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → MB:   dest:   file.path(\"config\",\"report.docx\") #> → MB: including file #> → MB:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → MB:   dest:   file.path(\"config\",\"report.pptx\") #> → MB: including file #> → MB:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → MB:   dest:   file.path(\"config\",\"report.yaml\") #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.R not found (skipping) #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.ctl not found (skipping) #> → MB: module checksum updated:8ac755447dc73c185137d18702a2cdb6 #> → MB: State initialized #> → MB: module checksum updated:8ac755447dc73c185137d18702a2cdb6  # This will provide a list of the available models models = MB_fetch_catalog(state) #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.R not found (skipping) #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.ctl not found (skipping) # This is a summary of the tables in the model: models$summary #> NULL  # This will test the models in the catalog, set as_cran # to FALSE to test all the models. mtres = MB_test_catalog(state, as_cran=TRUE) #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.R not found (skipping) #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.ctl not found (skipping) mtres$isgood #> [1] FALSE   # Creates a new empty element state = MB_new_element(state)  # Delete the current element state = MB_del_current_element(state)  # Fetch a list of the current element element = MB_fetch_current_element(state)  # This will attach a model to it: # Pulling the first model from the catalog fcn_def  = models[[\"summary\"]][1, ][[\"Model\"]] fcn_obj  = models[[\"summary\"]][1, ][[\"Object\"]] mdl_type = models[[\"summary\"]][1, ][[\"Type\"]] fcn_desc = models[[\"summary\"]][1, ][[\"Description\"]]  # This will build the rxode2 object from the model mk_rx_res = mk_rx_obj(   type  = mdl_type,   model = list(fcn_def = fcn_def,                fcn_obj = fcn_obj))  # This will attach the model to the current element element = MB_update_model(   state       = state,   session     = session,   current_ele = element,   rx_obj      = mk_rx_res[[\"capture\"]][[\"rx_obj\"]],   note        = fcn_desc,   reset       = TRUE)  # You can now place element back in the state state = MB_set_current_element(state, element) #> → MB: module checksum updated:e5352fb5e1e48e8e151dcd9d80cfbfa1  # This will fetch the current component component = MB_fetch_component(state, element)  # You can use the component to build the code to generate the model: gen_code =   MB_build_code(state        = state, session = session,               fcn_def      = component[[\"fcn_def\"]],               fcn_obj_name = \"my_fcn_obj\",               rx_obj_name  = \"my_obj_name\")  # Model code to be included in a larger script cat(paste0(gen_code$model_code, collapse=\"\\n\")) #> # rxode2 package was not found.  # Stand-alone model code cat(paste0(gen_code$model_code_sa, collapse=\"\\n\")) #>  #> # rxode2 package was not found.  # JMH to add: # MB_fetch_code"},{"path":"/reference/MB_del_current_element.html","id":null,"dir":"Reference","previous_headings":"","what":"Deletes Current model — MB_del_current_element","title":"Deletes Current model — MB_del_current_element","text":"Takes MB state deletes current model. last element, new default added.","code":""},{"path":"/reference/MB_del_current_element.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deletes Current model — MB_del_current_element","text":"","code":"MB_del_current_element(state)"},{"path":"/reference/MB_del_current_element.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deletes Current model — MB_del_current_element","text":"state MB state MB_fetch_state()","code":""},{"path":"/reference/MB_del_current_element.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Deletes Current model — MB_del_current_element","text":"MB state object current model deleted.","code":""},{"path":"/reference/MB_del_current_element.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Deletes Current model — MB_del_current_element","text":"","code":"#library(ruminate) # This will get the full session: sess_res = MB_test_mksession(session=list(), full_session=TRUE) #> → MB: including file #> → MB:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → MB:   dest:   file.path(\"config\",\"report.docx\") #> → MB: including file #> → MB:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → MB:   dest:   file.path(\"config\",\"report.pptx\") #> → MB: including file #> → MB:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → MB:   dest:   file.path(\"config\",\"report.yaml\") #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.R not found (skipping) #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.ctl not found (skipping) #> → MB: module checksum updated:8ac755447dc73c185137d18702a2cdb6 #> → MB: State initialized #> → MB: module checksum updated:8ac755447dc73c185137d18702a2cdb6 # This is just for CRAN #sess_res = MB_test_mksession(session=list()) session = sess_res$session input   = sess_res$input  # Configuration files FM_yaml_file  = system.file(package = \"formods\", \"templates\", \"formods.yaml\") MOD_yaml_file = system.file(package = \"ruminate\", \"templates\", \"MB.yaml\")  # Creating an empty state object state = MB_fetch_state(id              = \"MB\",                        input           = input,                        session         = session,                        FM_yaml_file    = FM_yaml_file,                        MOD_yaml_file   = MOD_yaml_file,                        react_state     = NULL) #> → MB: including file #> → MB:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → MB:   dest:   file.path(\"config\",\"report.docx\") #> → MB: including file #> → MB:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → MB:   dest:   file.path(\"config\",\"report.pptx\") #> → MB: including file #> → MB:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → MB:   dest:   file.path(\"config\",\"report.yaml\") #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.R not found (skipping) #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.ctl not found (skipping) #> → MB: module checksum updated:8ac755447dc73c185137d18702a2cdb6 #> → MB: State initialized #> → MB: module checksum updated:8ac755447dc73c185137d18702a2cdb6  # This will provide a list of the available models models = MB_fetch_catalog(state) #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.R not found (skipping) #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.ctl not found (skipping) # This is a summary of the tables in the model: models$summary #> NULL  # This will test the models in the catalog, set as_cran # to FALSE to test all the models. mtres = MB_test_catalog(state, as_cran=TRUE) #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.R not found (skipping) #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.ctl not found (skipping) mtres$isgood #> [1] FALSE   # Creates a new empty element state = MB_new_element(state)  # Delete the current element state = MB_del_current_element(state)  # Fetch a list of the current element element = MB_fetch_current_element(state)  # This will attach a model to it: # Pulling the first model from the catalog fcn_def  = models[[\"summary\"]][1, ][[\"Model\"]] fcn_obj  = models[[\"summary\"]][1, ][[\"Object\"]] mdl_type = models[[\"summary\"]][1, ][[\"Type\"]] fcn_desc = models[[\"summary\"]][1, ][[\"Description\"]]  # This will build the rxode2 object from the model mk_rx_res = mk_rx_obj(   type  = mdl_type,   model = list(fcn_def = fcn_def,                fcn_obj = fcn_obj))  # This will attach the model to the current element element = MB_update_model(   state       = state,   session     = session,   current_ele = element,   rx_obj      = mk_rx_res[[\"capture\"]][[\"rx_obj\"]],   note        = fcn_desc,   reset       = TRUE)  # You can now place element back in the state state = MB_set_current_element(state, element) #> → MB: module checksum updated:e5352fb5e1e48e8e151dcd9d80cfbfa1  # This will fetch the current component component = MB_fetch_component(state, element)  # You can use the component to build the code to generate the model: gen_code =   MB_build_code(state        = state, session = session,               fcn_def      = component[[\"fcn_def\"]],               fcn_obj_name = \"my_fcn_obj\",               rx_obj_name  = \"my_obj_name\")  # Model code to be included in a larger script cat(paste0(gen_code$model_code, collapse=\"\\n\")) #> # rxode2 package was not found.  # Stand-alone model code cat(paste0(gen_code$model_code_sa, collapse=\"\\n\")) #>  #> # rxode2 package was not found.  # JMH to add: # MB_fetch_code"},{"path":"/reference/MB_fetch_catalog.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetches List of Available Models — MB_fetch_catalog","title":"Fetches List of Available Models — MB_fetch_catalog","text":"Creates catalog models available system file.","code":""},{"path":"/reference/MB_fetch_catalog.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetches List of Available Models — MB_fetch_catalog","text":"","code":"MB_fetch_catalog(state)"},{"path":"/reference/MB_fetch_catalog.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetches List of Available Models — MB_fetch_catalog","text":"state MB state MB_fetch_state()","code":""},{"path":"/reference/MB_fetch_catalog.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetches List of Available Models — MB_fetch_catalog","text":"List following attributes: summary: Dataframe summary models catlog sources: information found summary table list form. select_group: List models grouped source. select_plain: Flat list models (ungrouped). select_subtext: Subtext pulldown menus. msgs: Messages passed back user. hasmdl: Boolean value indicating models found. isgood: Boolean variable indicating success failure.","code":""},{"path":"/reference/MB_fetch_catalog.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fetches List of Available Models — MB_fetch_catalog","text":"","code":"#library(ruminate) # This will get the full session: sess_res = MB_test_mksession(session=list(), full_session=TRUE) #> → MB: including file #> → MB:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → MB:   dest:   file.path(\"config\",\"report.docx\") #> → MB: including file #> → MB:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → MB:   dest:   file.path(\"config\",\"report.pptx\") #> → MB: including file #> → MB:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → MB:   dest:   file.path(\"config\",\"report.yaml\") #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.R not found (skipping) #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.ctl not found (skipping) #> → MB: module checksum updated:8ac755447dc73c185137d18702a2cdb6 #> → MB: State initialized #> → MB: module checksum updated:8ac755447dc73c185137d18702a2cdb6 # This is just for CRAN #sess_res = MB_test_mksession(session=list()) session = sess_res$session input   = sess_res$input  # Configuration files FM_yaml_file  = system.file(package = \"formods\", \"templates\", \"formods.yaml\") MOD_yaml_file = system.file(package = \"ruminate\", \"templates\", \"MB.yaml\")  # Creating an empty state object state = MB_fetch_state(id              = \"MB\",                        input           = input,                        session         = session,                        FM_yaml_file    = FM_yaml_file,                        MOD_yaml_file   = MOD_yaml_file,                        react_state     = NULL) #> → MB: including file #> → MB:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → MB:   dest:   file.path(\"config\",\"report.docx\") #> → MB: including file #> → MB:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → MB:   dest:   file.path(\"config\",\"report.pptx\") #> → MB: including file #> → MB:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → MB:   dest:   file.path(\"config\",\"report.yaml\") #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.R not found (skipping) #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.ctl not found (skipping) #> → MB: module checksum updated:8ac755447dc73c185137d18702a2cdb6 #> → MB: State initialized #> → MB: module checksum updated:8ac755447dc73c185137d18702a2cdb6  # This will provide a list of the available models models = MB_fetch_catalog(state) #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.R not found (skipping) #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.ctl not found (skipping) # This is a summary of the tables in the model: models$summary #> NULL  # This will test the models in the catalog, set as_cran # to FALSE to test all the models. mtres = MB_test_catalog(state, as_cran=TRUE) #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.R not found (skipping) #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.ctl not found (skipping) mtres$isgood #> [1] FALSE   # Creates a new empty element state = MB_new_element(state)  # Delete the current element state = MB_del_current_element(state)  # Fetch a list of the current element element = MB_fetch_current_element(state)  # This will attach a model to it: # Pulling the first model from the catalog fcn_def  = models[[\"summary\"]][1, ][[\"Model\"]] fcn_obj  = models[[\"summary\"]][1, ][[\"Object\"]] mdl_type = models[[\"summary\"]][1, ][[\"Type\"]] fcn_desc = models[[\"summary\"]][1, ][[\"Description\"]]  # This will build the rxode2 object from the model mk_rx_res = mk_rx_obj(   type  = mdl_type,   model = list(fcn_def = fcn_def,                fcn_obj = fcn_obj))  # This will attach the model to the current element element = MB_update_model(   state       = state,   session     = session,   current_ele = element,   rx_obj      = mk_rx_res[[\"capture\"]][[\"rx_obj\"]],   note        = fcn_desc,   reset       = TRUE)  # You can now place element back in the state state = MB_set_current_element(state, element) #> → MB: module checksum updated:e5352fb5e1e48e8e151dcd9d80cfbfa1  # This will fetch the current component component = MB_fetch_component(state, element)  # You can use the component to build the code to generate the model: gen_code =   MB_build_code(state        = state, session = session,               fcn_def      = component[[\"fcn_def\"]],               fcn_obj_name = \"my_fcn_obj\",               rx_obj_name  = \"my_obj_name\")  # Model code to be included in a larger script cat(paste0(gen_code$model_code, collapse=\"\\n\")) #> # rxode2 package was not found.  # Stand-alone model code cat(paste0(gen_code$model_code_sa, collapse=\"\\n\")) #>  #> # rxode2 package was not found.  # JMH to add: # MB_fetch_code"},{"path":"/reference/MB_fetch_code.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetch Module Code — MB_fetch_code","title":"Fetch Module Code — MB_fetch_code","text":"Fetches code generate results seen app","code":""},{"path":"/reference/MB_fetch_code.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetch Module Code — MB_fetch_code","text":"","code":"MB_fetch_code(state)"},{"path":"/reference/MB_fetch_code.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetch Module Code — MB_fetch_code","text":"state MB state MB_fetch_state()","code":""},{"path":"/reference/MB_fetch_code.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetch Module Code — MB_fetch_code","text":"Character object vector lines code","code":""},{"path":"/reference/MB_fetch_code.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fetch Module Code — MB_fetch_code","text":"","code":"# We need a module state: sess_res = MB_test_mksession(session=list(), full_session=FALSE) #> → MB: including file #> → MB:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → MB:   dest:   file.path(\"config\",\"report.docx\") #> → MB: including file #> → MB:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → MB:   dest:   file.path(\"config\",\"report.pptx\") #> → MB: including file #> → MB:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → MB:   dest:   file.path(\"config\",\"report.yaml\") #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.R not found (skipping) #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.ctl not found (skipping) #> → MB: module checksum updated:8ac755447dc73c185137d18702a2cdb6 #> → MB: State initialized #> → MB: module checksum updated:8ac755447dc73c185137d18702a2cdb6 state = sess_res$state  code = MB_fetch_code(state)  cat(code)"},{"path":"/reference/MB_fetch_component.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetch Selected Current Model Component — MB_fetch_component","title":"Fetch Selected Current Model Component — MB_fetch_component","text":"Fetches selected component provided model.","code":""},{"path":"/reference/MB_fetch_component.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetch Selected Current Model Component — MB_fetch_component","text":"","code":"MB_fetch_component(state, current_ele, component_id = NULL)"},{"path":"/reference/MB_fetch_component.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetch Selected Current Model Component — MB_fetch_component","text":"state MB state MB_fetch_state() current_ele MB model element MB_fetch_current_element() component_id numeric component id select (default NULL) return selected ID.","code":""},{"path":"/reference/MB_fetch_component.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetch Selected Current Model Component — MB_fetch_component","text":"list current component following attributes isgood: Boolean object indicating success. rx_obj: rxode2 object model. fcn_def: Just model function definition. note: Note field components_table model_code: Code generate model. model_code_sa: Stand-alone code generate model msgs:      Messages passed back user.","code":""},{"path":"/reference/MB_fetch_component.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fetch Selected Current Model Component — MB_fetch_component","text":"","code":"#library(ruminate) # This will get the full session: sess_res = MB_test_mksession(session=list(), full_session=TRUE) #> → MB: including file #> → MB:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → MB:   dest:   file.path(\"config\",\"report.docx\") #> → MB: including file #> → MB:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → MB:   dest:   file.path(\"config\",\"report.pptx\") #> → MB: including file #> → MB:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → MB:   dest:   file.path(\"config\",\"report.yaml\") #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.R not found (skipping) #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.ctl not found (skipping) #> → MB: module checksum updated:8ac755447dc73c185137d18702a2cdb6 #> → MB: State initialized #> → MB: module checksum updated:8ac755447dc73c185137d18702a2cdb6 # This is just for CRAN #sess_res = MB_test_mksession(session=list()) session = sess_res$session input   = sess_res$input  # Configuration files FM_yaml_file  = system.file(package = \"formods\", \"templates\", \"formods.yaml\") MOD_yaml_file = system.file(package = \"ruminate\", \"templates\", \"MB.yaml\")  # Creating an empty state object state = MB_fetch_state(id              = \"MB\",                        input           = input,                        session         = session,                        FM_yaml_file    = FM_yaml_file,                        MOD_yaml_file   = MOD_yaml_file,                        react_state     = NULL) #> → MB: including file #> → MB:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → MB:   dest:   file.path(\"config\",\"report.docx\") #> → MB: including file #> → MB:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → MB:   dest:   file.path(\"config\",\"report.pptx\") #> → MB: including file #> → MB:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → MB:   dest:   file.path(\"config\",\"report.yaml\") #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.R not found (skipping) #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.ctl not found (skipping) #> → MB: module checksum updated:8ac755447dc73c185137d18702a2cdb6 #> → MB: State initialized #> → MB: module checksum updated:8ac755447dc73c185137d18702a2cdb6  # This will provide a list of the available models models = MB_fetch_catalog(state) #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.R not found (skipping) #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.ctl not found (skipping) # This is a summary of the tables in the model: models$summary #> NULL  # This will test the models in the catalog, set as_cran # to FALSE to test all the models. mtres = MB_test_catalog(state, as_cran=TRUE) #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.R not found (skipping) #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.ctl not found (skipping) mtres$isgood #> [1] FALSE   # Creates a new empty element state = MB_new_element(state)  # Delete the current element state = MB_del_current_element(state)  # Fetch a list of the current element element = MB_fetch_current_element(state)  # This will attach a model to it: # Pulling the first model from the catalog fcn_def  = models[[\"summary\"]][1, ][[\"Model\"]] fcn_obj  = models[[\"summary\"]][1, ][[\"Object\"]] mdl_type = models[[\"summary\"]][1, ][[\"Type\"]] fcn_desc = models[[\"summary\"]][1, ][[\"Description\"]]  # This will build the rxode2 object from the model mk_rx_res = mk_rx_obj(   type  = mdl_type,   model = list(fcn_def = fcn_def,                fcn_obj = fcn_obj))  # This will attach the model to the current element element = MB_update_model(   state       = state,   session     = session,   current_ele = element,   rx_obj      = mk_rx_res[[\"capture\"]][[\"rx_obj\"]],   note        = fcn_desc,   reset       = TRUE)  # You can now place element back in the state state = MB_set_current_element(state, element) #> → MB: module checksum updated:e5352fb5e1e48e8e151dcd9d80cfbfa1  # This will fetch the current component component = MB_fetch_component(state, element)  # You can use the component to build the code to generate the model: gen_code =   MB_build_code(state        = state, session = session,               fcn_def      = component[[\"fcn_def\"]],               fcn_obj_name = \"my_fcn_obj\",               rx_obj_name  = \"my_obj_name\")  # Model code to be included in a larger script cat(paste0(gen_code$model_code, collapse=\"\\n\")) #> # rxode2 package was not found.  # Stand-alone model code cat(paste0(gen_code$model_code_sa, collapse=\"\\n\")) #>  #> # rxode2 package was not found.  # JMH to add: # MB_fetch_code"},{"path":"/reference/MB_fetch_current_element.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetches Current model — MB_fetch_current_element","title":"Fetches Current model — MB_fetch_current_element","text":"Takes MB state returns current active model object.","code":""},{"path":"/reference/MB_fetch_current_element.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetches Current model — MB_fetch_current_element","text":"","code":"MB_fetch_current_element(state)"},{"path":"/reference/MB_fetch_current_element.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetches Current model — MB_fetch_current_element","text":"state MB state MB_fetch_state()","code":""},{"path":"/reference/MB_fetch_current_element.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetches Current model — MB_fetch_current_element","text":"List containing details active data view. structure list structure state$MB$elements output MB_fetch_state().","code":""},{"path":"/reference/MB_fetch_current_element.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fetches Current model — MB_fetch_current_element","text":"","code":"#library(ruminate) # This will get the full session: sess_res = MB_test_mksession(session=list(), full_session=TRUE) #> → MB: including file #> → MB:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → MB:   dest:   file.path(\"config\",\"report.docx\") #> → MB: including file #> → MB:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → MB:   dest:   file.path(\"config\",\"report.pptx\") #> → MB: including file #> → MB:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → MB:   dest:   file.path(\"config\",\"report.yaml\") #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.R not found (skipping) #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.ctl not found (skipping) #> → MB: module checksum updated:8ac755447dc73c185137d18702a2cdb6 #> → MB: State initialized #> → MB: module checksum updated:8ac755447dc73c185137d18702a2cdb6 # This is just for CRAN #sess_res = MB_test_mksession(session=list()) session = sess_res$session input   = sess_res$input  # Configuration files FM_yaml_file  = system.file(package = \"formods\", \"templates\", \"formods.yaml\") MOD_yaml_file = system.file(package = \"ruminate\", \"templates\", \"MB.yaml\")  # Creating an empty state object state = MB_fetch_state(id              = \"MB\",                        input           = input,                        session         = session,                        FM_yaml_file    = FM_yaml_file,                        MOD_yaml_file   = MOD_yaml_file,                        react_state     = NULL) #> → MB: including file #> → MB:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → MB:   dest:   file.path(\"config\",\"report.docx\") #> → MB: including file #> → MB:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → MB:   dest:   file.path(\"config\",\"report.pptx\") #> → MB: including file #> → MB:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → MB:   dest:   file.path(\"config\",\"report.yaml\") #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.R not found (skipping) #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.ctl not found (skipping) #> → MB: module checksum updated:8ac755447dc73c185137d18702a2cdb6 #> → MB: State initialized #> → MB: module checksum updated:8ac755447dc73c185137d18702a2cdb6  # This will provide a list of the available models models = MB_fetch_catalog(state) #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.R not found (skipping) #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.ctl not found (skipping) # This is a summary of the tables in the model: models$summary #> NULL  # This will test the models in the catalog, set as_cran # to FALSE to test all the models. mtres = MB_test_catalog(state, as_cran=TRUE) #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.R not found (skipping) #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.ctl not found (skipping) mtres$isgood #> [1] FALSE   # Creates a new empty element state = MB_new_element(state)  # Delete the current element state = MB_del_current_element(state)  # Fetch a list of the current element element = MB_fetch_current_element(state)  # This will attach a model to it: # Pulling the first model from the catalog fcn_def  = models[[\"summary\"]][1, ][[\"Model\"]] fcn_obj  = models[[\"summary\"]][1, ][[\"Object\"]] mdl_type = models[[\"summary\"]][1, ][[\"Type\"]] fcn_desc = models[[\"summary\"]][1, ][[\"Description\"]]  # This will build the rxode2 object from the model mk_rx_res = mk_rx_obj(   type  = mdl_type,   model = list(fcn_def = fcn_def,                fcn_obj = fcn_obj))  # This will attach the model to the current element element = MB_update_model(   state       = state,   session     = session,   current_ele = element,   rx_obj      = mk_rx_res[[\"capture\"]][[\"rx_obj\"]],   note        = fcn_desc,   reset       = TRUE)  # You can now place element back in the state state = MB_set_current_element(state, element) #> → MB: module checksum updated:e5352fb5e1e48e8e151dcd9d80cfbfa1  # This will fetch the current component component = MB_fetch_component(state, element)  # You can use the component to build the code to generate the model: gen_code =   MB_build_code(state        = state, session = session,               fcn_def      = component[[\"fcn_def\"]],               fcn_obj_name = \"my_fcn_obj\",               rx_obj_name  = \"my_obj_name\")  # Model code to be included in a larger script cat(paste0(gen_code$model_code, collapse=\"\\n\")) #> # rxode2 package was not found.  # Stand-alone model code cat(paste0(gen_code$model_code_sa, collapse=\"\\n\")) #>  #> # rxode2 package was not found.  # JMH to add: # MB_fetch_code"},{"path":"/reference/MB_fetch_ds.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetch Model Builder Module Datasets — MB_fetch_ds","title":"Fetch Model Builder Module Datasets — MB_fetch_ds","text":"Fetches datasets contained module.","code":""},{"path":"/reference/MB_fetch_ds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetch Model Builder Module Datasets — MB_fetch_ds","text":"","code":"MB_fetch_ds(state)"},{"path":"/reference/MB_fetch_ds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetch Model Builder Module Datasets — MB_fetch_ds","text":"state MB state MB_fetch_state()","code":""},{"path":"/reference/MB_fetch_ds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetch Model Builder Module Datasets — MB_fetch_ds","text":"Character object vector lines code list containing following elements isgood:    Return status function. hasds:     Boolean indicator module datasets msgs:      Messages passed back user. ds:        List datasets. list element name R-object dataset. element following structure: label: Text label dataset MOD_TYPE: Short name type module. id: module ID DS: Dataframe containing actual dataset. DSMETA: Metadata describing DS code: Complete code build dataset. checksum: Module checksum. DSchecksum: Dataset checksum.","code":""},{"path":"/reference/MB_fetch_ds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fetch Model Builder Module Datasets — MB_fetch_ds","text":"","code":"# We need a module state: sess_res = MB_test_mksession(session=list()) #> → MB: including file #> → MB:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → MB:   dest:   file.path(\"config\",\"report.docx\") #> → MB: including file #> → MB:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → MB:   dest:   file.path(\"config\",\"report.pptx\") #> → MB: including file #> → MB:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → MB:   dest:   file.path(\"config\",\"report.yaml\") #> → MB: State initialized state = sess_res$state  ds = MB_fetch_ds(state) #> Error in MB_fetch_ds(state): object 'object_name' not found  ds #> Error in eval(expr, envir, enclos): object 'ds' not found"},{"path":"/reference/MB_fetch_mdl.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetch Model Builder Module Models — MB_fetch_mdl","title":"Fetch Model Builder Module Models — MB_fetch_mdl","text":"Fetches models contained module.","code":""},{"path":"/reference/MB_fetch_mdl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetch Model Builder Module Models — MB_fetch_mdl","text":"","code":"MB_fetch_mdl(state)"},{"path":"/reference/MB_fetch_mdl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetch Model Builder Module Models — MB_fetch_mdl","text":"state MB state MB_fetch_state()","code":""},{"path":"/reference/MB_fetch_mdl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetch Model Builder Module Models — MB_fetch_mdl","text":"list containing following elements isgood:    Return status function. hasmdl:    Boolean indicator module models msgs:      Messages passed back user. mdl:       List models. list element name R-object dataset. element following structure: label:      Text label model (e.g. one-compartment model). MOD_TYPE:   Type module. id:         Module ID. rx_obj:     rxode2 object name holds model. fcn_def:    Text define model MDLMETA:    Notes model. code:       Code generate model. checksum:   Module checksum. MDLchecksum: Model checksum.","code":""},{"path":"/reference/MB_fetch_mdl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fetch Model Builder Module Models — MB_fetch_mdl","text":"","code":"# We need a module state: sess_res = MB_test_mksession(session=list(), full_session=FALSE) #> → MB: including file #> → MB:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → MB:   dest:   file.path(\"config\",\"report.docx\") #> → MB: including file #> → MB:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → MB:   dest:   file.path(\"config\",\"report.pptx\") #> → MB: including file #> → MB:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → MB:   dest:   file.path(\"config\",\"report.yaml\") #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.R not found (skipping) #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.ctl not found (skipping) #> → MB: module checksum updated:8ac755447dc73c185137d18702a2cdb6 #> → MB: State initialized #> → MB: module checksum updated:8ac755447dc73c185137d18702a2cdb6 state = sess_res$state  mdls = MB_fetch_mdl(state)  names(mdls) #> [1] \"hasmdl\" \"isgood\" \"msgs\"   \"mdl\""},{"path":"/reference/MB_fetch_state.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetch Model Builder State — MB_fetch_state","title":"Fetch Model Builder State — MB_fetch_state","text":"Merges default app options changes made UI","code":""},{"path":"/reference/MB_fetch_state.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetch Model Builder State — MB_fetch_state","text":"","code":"MB_fetch_state(   id,   id_ASM,   input,   session,   FM_yaml_file,   MOD_yaml_file,   react_state )"},{"path":"/reference/MB_fetch_state.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetch Model Builder State — MB_fetch_state","text":"id Shiny module ID id_ASM ID string app state management module used save load app states input Shiny input variable session Shiny session variable FM_yaml_file App configuration file FM main section. MOD_yaml_file Module configuration file MC main section. react_state Variable passed server allow reaction outside module (NULL)","code":""},{"path":"/reference/MB_fetch_state.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetch Model Builder State — MB_fetch_state","text":"list containing current state app including default values yaml file well changes made user. list following structure: yaml: Full contents supplied yaml file. MC: Module components yaml file. MB: isgood: Boolean object indicating file successfully loaded. checksum: MD5 sum contents element can used detect changes state. MOD_TYPE: Character data containing type module \"MB\" id: Character data containing module id module session variable. FM_yaml_file: App configuration file FM main section. MOD_yaml_file:  Module configuration file MC main section.","code":""},{"path":"/reference/MB_fetch_state.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fetch Model Builder State — MB_fetch_state","text":"","code":"# Within shiny both session and input variables will exist, # this creates examples here for testing purposes: sess_res = MB_test_mksession(session=list(), full_session=FALSE) #> → MB: including file #> → MB:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → MB:   dest:   file.path(\"config\",\"report.docx\") #> → MB: including file #> → MB:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → MB:   dest:   file.path(\"config\",\"report.pptx\") #> → MB: including file #> → MB:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → MB:   dest:   file.path(\"config\",\"report.yaml\") #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.R not found (skipping) #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.ctl not found (skipping) #> → MB: module checksum updated:8ac755447dc73c185137d18702a2cdb6 #> → MB: State initialized #> → MB: module checksum updated:8ac755447dc73c185137d18702a2cdb6 session = sess_res$session input   = sess_res$input  # Configuration files FM_yaml_file  = system.file(package = \"formods\", \"templates\", \"formods.yaml\") MOD_yaml_file = system.file(package = \"ruminate\", \"templates\", \"MB.yaml\")  # Creating an empty state object state = MB_fetch_state(id              = \"MB\",                        id_ASM          = \"ASM\",                        input           = input,                        session         = session,                        FM_yaml_file    = FM_yaml_file,                        MOD_yaml_file   = MOD_yaml_file,                        react_state     = NULL) #> → MB: including file #> → MB:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → MB:   dest:   file.path(\"config\",\"report.docx\") #> → MB: including file #> → MB:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → MB:   dest:   file.path(\"config\",\"report.pptx\") #> → MB: including file #> → MB:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → MB:   dest:   file.path(\"config\",\"report.yaml\") #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.R not found (skipping) #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.ctl not found (skipping) #> → MB: module checksum updated:8ac755447dc73c185137d18702a2cdb6 #> → MB: State initialized #> → MB: module checksum updated:8ac755447dc73c185137d18702a2cdb6"},{"path":"/reference/MB_init_state.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize MB Module State — MB_init_state","title":"Initialize MB Module State — MB_init_state","text":"Creates list initialized module state","code":""},{"path":"/reference/MB_init_state.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize MB Module State — MB_init_state","text":"","code":"MB_init_state(FM_yaml_file, MOD_yaml_file, id, session)"},{"path":"/reference/MB_init_state.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize MB Module State — MB_init_state","text":"FM_yaml_file App configuration file FM main section. MOD_yaml_file Module configuration file MC main section. id ID string module. session Shiny session variable","code":""},{"path":"/reference/MB_init_state.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize MB Module State — MB_init_state","text":"list containing empty MB state","code":""},{"path":"/reference/MB_init_state.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Initialize MB Module State — MB_init_state","text":"","code":"# Within shiny both session and input variables will exist, # this creates examples here for testing purposes: sess_res = MB_test_mksession(session=list(), full_session=FALSE) #> → MB: including file #> → MB:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → MB:   dest:   file.path(\"config\",\"report.docx\") #> → MB: including file #> → MB:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → MB:   dest:   file.path(\"config\",\"report.pptx\") #> → MB: including file #> → MB:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → MB:   dest:   file.path(\"config\",\"report.yaml\") #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.R not found (skipping) #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.ctl not found (skipping) #> → MB: module checksum updated:8ac755447dc73c185137d18702a2cdb6 #> → MB: State initialized #> → MB: module checksum updated:8ac755447dc73c185137d18702a2cdb6 session = sess_res$session input   = sess_res$input  state = MB_init_state(    FM_yaml_file  = system.file(package = \"formods\",                                \"templates\",                                \"formods.yaml\"),    MOD_yaml_file = system.file(package = \"ruminate\",                                \"templates\",                                \"MB.yaml\"),    id              = \"MB\",    session         = session) #> → MB: including file #> → MB:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → MB:   dest:   file.path(\"config\",\"report.docx\") #> → MB: including file #> → MB:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → MB:   dest:   file.path(\"config\",\"report.pptx\") #> → MB: including file #> → MB:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → MB:   dest:   file.path(\"config\",\"report.yaml\") #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.R not found (skipping) #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.ctl not found (skipping) #> → MB: module checksum updated:8ac755447dc73c185137d18702a2cdb6 #> → MB: State initialized  state #> $yaml #> $yaml$FM #> $yaml$FM$include #> $yaml$FM$include$files #> $yaml$FM$include$files[[1]] #> $yaml$FM$include$files[[1]]$file #> $yaml$FM$include$files[[1]]$file$source #> [1] \"file.path(system.file(package=\\\"onbrand\\\"), \\\"templates\\\", \\\"report.docx\\\")\" #>  #> $yaml$FM$include$files[[1]]$file$dest #> [1] \"file.path(\\\"config\\\",\\\"report.docx\\\")\" #>  #>  #>  #> $yaml$FM$include$files[[2]] #> $yaml$FM$include$files[[2]]$file #> $yaml$FM$include$files[[2]]$file$source #> [1] \"file.path(system.file(package=\\\"onbrand\\\"), \\\"templates\\\", \\\"report.pptx\\\")\" #>  #> $yaml$FM$include$files[[2]]$file$dest #> [1] \"file.path(\\\"config\\\",\\\"report.pptx\\\")\" #>  #>  #>  #> $yaml$FM$include$files[[3]] #> $yaml$FM$include$files[[3]]$file #> $yaml$FM$include$files[[3]]$file$source #> [1] \"file.path(system.file(package=\\\"onbrand\\\"), \\\"templates\\\", \\\"report.yaml\\\")\" #>  #> $yaml$FM$include$files[[3]]$file$dest #> [1] \"file.path(\\\"config\\\",\\\"report.yaml\\\")\" #>  #>  #>  #>  #>  #> $yaml$FM$deployed #> [1] FALSE #>  #> $yaml$FM$code #> $yaml$FM$code$theme #> [1] \"vibrant_ink\" #>  #> $yaml$FM$code$showLineNumbers #> [1] TRUE #>  #> $yaml$FM$code$gen_file #> [1] \"run_analysis.R\" #>  #> $yaml$FM$code$gen_preamble #> [1] \"# formods automated output ------------------------------------------------\\n# https://formods.ubiquity.tools/\\nrm(list=ls())\" #>  #> $yaml$FM$code$packages #> [1] \"onbrand\" \"writexl\" #>  #>  #> $yaml$FM$notifications #> $yaml$FM$notifications$config #> $yaml$FM$notifications$config$success #> $yaml$FM$notifications$config$success$useFontAwesome #> [1] FALSE #>  #> $yaml$FM$notifications$config$success$useIcon #> [1] FALSE #>  #> $yaml$FM$notifications$config$success$background #> [1] \"#5bb85b\" #>  #>  #> $yaml$FM$notifications$config$failure #> $yaml$FM$notifications$config$failure$useFontAwesome #> [1] FALSE #>  #> $yaml$FM$notifications$config$failure$useIcon #> [1] FALSE #>  #> $yaml$FM$notifications$config$failure$background #> [1] \"#d9534f\" #>  #>  #> $yaml$FM$notifications$config$info #> $yaml$FM$notifications$config$info$useFontAwesome #> [1] FALSE #>  #> $yaml$FM$notifications$config$info$useIcon #> [1] FALSE #>  #> $yaml$FM$notifications$config$info$background #> [1] \"#5bc0de\" #>  #>  #> $yaml$FM$notifications$config$warning #> $yaml$FM$notifications$config$warning$useFontAwesome #> [1] FALSE #>  #> $yaml$FM$notifications$config$warning$useIcon #> [1] FALSE #>  #> $yaml$FM$notifications$config$warning$background #> [1] \"#f0ac4d\" #>  #>  #>  #>  #> $yaml$FM$reporting #> $yaml$FM$reporting$enabled #> [1] TRUE #>  #> $yaml$FM$reporting$content_init #> $yaml$FM$reporting$content_init$xlsx #> [1] \"rpt = list(summary = NULL,\\n           sheets  = list())\" #>  #> $yaml$FM$reporting$content_init$docx #> [1] \"rpt  = onbrand::read_template(\\n  template = file.path(\\\"config\\\", \\\"report.docx\\\"),\\n  mapping  = file.path(\\\"config\\\", \\\"report.yaml\\\"))\" #>  #> $yaml$FM$reporting$content_init$pptx #> [1] \"rpt  = onbrand::read_template(\\n  template = file.path(\\\"config\\\", \\\"report.pptx\\\"),\\n  mapping  = file.path(\\\"config\\\", \\\"report.yaml\\\"))\" #>  #>  #>  #> $yaml$FM$ui #> $yaml$FM$ui$button_style #> [1] \"fill\" #>  #> $yaml$FM$ui$select_size #> [1] 10 #>  #> $yaml$FM$ui$color_green #> [1] \"#00BB8A\" #>  #> $yaml$FM$ui$color_red #> [1] \"#FF475E\" #>  #> $yaml$FM$ui$color_blue #> [1] \"#0088FF\" #>  #> $yaml$FM$ui$color_purple #> [1] \"#bd2cf4\" #>  #>  #> $yaml$FM$data_meta #> $yaml$FM$data_meta$data_header #> [1] \"<span style='color:===COLOR==='><b>===NAME===<\/b><br/><font size='-3'>===LABEL===<\/font><\/span>\" #>  #> $yaml$FM$data_meta$subtext #> [1] \"===LABEL===: ===RANGE===\" #>  #> $yaml$FM$data_meta$many_sep #> [1] \",⋅⋅⋅,\" #>  #> $yaml$FM$data_meta$data_types #> $yaml$FM$data_meta$data_types$character #> $yaml$FM$data_meta$data_types$character$color #> [1] \"#DD4B39\" #>  #> $yaml$FM$data_meta$data_types$character$label #> [1] \"text\" #>  #>  #> $yaml$FM$data_meta$data_types$double #> $yaml$FM$data_meta$data_types$double$color #> [1] \"#3C8DBC\" #>  #> $yaml$FM$data_meta$data_types$double$label #> [1] \"num\" #>  #>  #> $yaml$FM$data_meta$data_types$integer #> $yaml$FM$data_meta$data_types$integer$color #> [1] \"#3C8DBC\" #>  #> $yaml$FM$data_meta$data_types$integer$label #> [1] \"num\" #>  #>  #> $yaml$FM$data_meta$data_types$other #> $yaml$FM$data_meta$data_types$other$color #> [1] \"black\" #>  #> $yaml$FM$data_meta$data_types$other$label #> [1] \"other\" #>  #>  #>  #>  #> $yaml$FM$labels #> $yaml$FM$labels$default_ds #> [1] \"Original data set\" #>  #>  #> $yaml$FM$user_files #> $yaml$FM$user_files$use_tmpdir #> [1] TRUE #>  #>  #> $yaml$FM$logging #> $yaml$FM$logging$enabled #> [1] TRUE #>  #> $yaml$FM$logging$timestamp #> [1] TRUE #>  #> $yaml$FM$logging$timestamp_fmt #> [1] \"%Y-%m-%d %H:%M:%S\" #>  #> $yaml$FM$logging$log_file #> [1] \"formods_log.txt\" #>  #> $yaml$FM$logging$console #> [1] TRUE #>  #>  #>  #>  #> $MC #> $MC$element_object_name #> [1] \"MB_obj\" #>  #> $MC$sources #> $MC$sources[[1]] #> $MC$sources[[1]]$source #> $MC$sources[[1]]$source$group #> [1] \"User-defined Models\" #>  #> $MC$sources[[1]]$source$name #> [1] \"rxode2 User model\" #>  #> $MC$sources[[1]]$source$description #> [1] \"User-defined rxode2 model\" #>  #> $MC$sources[[1]]$source$type #> [1] \"rxode2\" #>  #> $MC$sources[[1]]$source$obj #> [1] \"my_fcn\" #>  #> $MC$sources[[1]]$source$file #> [1] \"file.path(getwd(),\\\"user_model.R\\\")\" #>  #>  #>  #> $MC$sources[[2]] #> $MC$sources[[2]]$source #> $MC$sources[[2]]$source$group #> [1] \"User-defined Models\" #>  #> $MC$sources[[2]]$source$name #> [1] \"NONMEM User model\" #>  #> $MC$sources[[2]]$source$description #> [1] \"User-defined NONMEM model\" #>  #> $MC$sources[[2]]$source$type #> [1] \"NONMEM\" #>  #> $MC$sources[[2]]$source$file #> [1] \"file.path(getwd(),\\\"user_model.ctl\\\")\" #>  #>  #>  #> $MC$sources[[3]] #> $MC$sources[[3]]$source #> $MC$sources[[3]]$source$group #> [1] \"Model Library\" #>  #> $MC$sources[[3]]$source$type #> [1] \"nlmixr2lib\" #>  #> $MC$sources[[3]]$source$name #> [1] \"nlmixr2 Model Library\" #>  #>  #>  #>  #> $MC$code #> $MC$code$packages #> [1] \"rxode2\"     \"nonmem2rx\"  \"nlmixr2lib\" #>  #> $MC$code$readOnly #> [1] TRUE #>  #> $MC$code$mode #> [1] \"r\" #>  #>  #> $MC$compact #> $MC$compact$code #> [1] TRUE #>  #> $MC$compact$clip #> [1] TRUE #>  #>  #> $MC$reporting #> $MC$reporting$enabled #> [1] FALSE #>  #> $MC$reporting$priority #> [1] 1 #>  #>  #> $MC$formatting #> $MC$formatting$code #> $MC$formatting$code$width #> [1] 800 #>  #> $MC$formatting$code$height #> [1] 300 #>  #>  #> $MC$formatting$preview #> $MC$formatting$preview$width #> [1] \"800px\" #>  #> $MC$formatting$preview$height #> [1] \"500px\" #>  #>  #> $MC$formatting$input #> NULL #>  #> $MC$formatting$current_element #> $MC$formatting$current_element$width #> [1] \"200px\" #>  #> $MC$formatting$current_element$tooltip #> [1] \"Change the current model.\" #>  #> $MC$formatting$current_element$tooltip_position #> [1] \"right\" #>  #>  #> $MC$formatting$element_name #> $MC$formatting$element_name$width #> [1] \"200px\" #>  #>  #> $MC$formatting$button_clk_run #> $MC$formatting$button_clk_run$size #> [1] \"sm\" #>  #> $MC$formatting$button_clk_run$block #> [1] TRUE #>  #>  #> $MC$formatting$button_clk_del #> $MC$formatting$button_clk_del$size #> [1] \"sm\" #>  #> $MC$formatting$button_clk_del$block #> [1] TRUE #>  #> $MC$formatting$button_clk_del$tooltip #> [1] \"Delete the current model.\" #>  #> $MC$formatting$button_clk_del$tooltip_position #> [1] \"right\" #>  #>  #> $MC$formatting$button_clk_save #> $MC$formatting$button_clk_save$size #> [1] \"sm\" #>  #> $MC$formatting$button_clk_save$block #> [1] TRUE #>  #> $MC$formatting$button_clk_save$tooltip #> [1] \"Save the name for the current model.\" #>  #> $MC$formatting$button_clk_save$tooltip_position #> [1] \"right\" #>  #>  #> $MC$formatting$button_clk_clip #> $MC$formatting$button_clk_clip$size #> [1] \"sm\" #>  #> $MC$formatting$button_clk_clip$block #> [1] TRUE #>  #> $MC$formatting$button_clk_clip$tooltip #> [1] \"Copy the code to generate the current model to the clipboard.\" #>  #> $MC$formatting$button_clk_clip$tooltip_position #> [1] \"right\" #>  #>  #> $MC$formatting$button_clk_copy #> $MC$formatting$button_clk_copy$size #> [1] \"sm\" #>  #> $MC$formatting$button_clk_copy$block #> [1] TRUE #>  #> $MC$formatting$button_clk_copy$tooltip #> [1] \"Make a copy of the current model.\" #>  #> $MC$formatting$button_clk_copy$tooltip_position #> [1] \"right\" #>  #>  #> $MC$formatting$button_clk_new #> $MC$formatting$button_clk_new$size #> [1] \"sm\" #>  #> $MC$formatting$button_clk_new$block #> [1] TRUE #>  #> $MC$formatting$button_clk_new$tooltip #> [1] \"Create a new model.\" #>  #> $MC$formatting$button_clk_new$tooltip_position #> [1] \"right\" #>  #> $MC$formatting$button_clk_new$width #> [1] 100 #>  #>  #> $MC$formatting$catalog_selection #> $MC$formatting$catalog_selection$width #> [1] \"200px\" #>  #> $MC$formatting$catalog_selection$truncate #> [1] 65 #>  #> $MC$formatting$catalog_selection$tooltip #> [1] \"Select base model from the catalog.\" #>  #> $MC$formatting$catalog_selection$tooltip_position #> [1] \"top\" #>  #>  #> $MC$formatting$model_type_selection #> $MC$formatting$model_type_selection$width #> [1] \"200px\" #>  #> $MC$formatting$model_type_selection$tooltip #> [1] \"Select the type of the model being uploaded.\" #>  #> $MC$formatting$model_type_selection$tooltip_position #> [1] \"right\" #>  #> $MC$formatting$model_type_selection$choices #> $MC$formatting$model_type_selection$choices$rxode2 #> [1] \"rxode2 function\" #>  #> $MC$formatting$model_type_selection$choices$NONMEM #> [1] \"NONMEM (XML, lst, or ctl)\" #>  #>  #> $MC$formatting$model_type_selection$default #> [1] \"rxode2\" #>  #>  #> $MC$formatting$upload_model_file #> $MC$formatting$upload_model_file$width #> [1] \"400px\" #>  #>  #> $MC$formatting$base_from #> $MC$formatting$base_from$size #> [1] \"normal\" #>  #> $MC$formatting$base_from$status #> [1] \"primary\" #>  #> $MC$formatting$base_from$tooltip #> [1] \"You can select the base model from a catalog or upload your own\" #>  #> $MC$formatting$base_from$tooltip_position #> [1] \"bottom\" #>  #> $MC$formatting$base_from$choices #> $MC$formatting$base_from$choices$catalog #> [1] \"Model Catalog\" #>  #> $MC$formatting$base_from$choices$user #> [1] \"User-defined model\" #>  #>  #> $MC$formatting$base_from$default #> [1] \"catalog\" #>  #>  #> $MC$formatting$time_scales #> $MC$formatting$time_scales$width #> [1] \"200px\" #>  #> $MC$formatting$time_scales$default #> [1] \"weeks\" #>  #> $MC$formatting$time_scales$tooltip #> [1] \"Choose the timescale of the model.\" #>  #> $MC$formatting$time_scales$tooltip_position #> [1] \"top\" #>  #> $MC$formatting$time_scales$choices #> $MC$formatting$time_scales$choices$months #> $MC$formatting$time_scales$choices$months$conv #> [1] \"60*60*24*4\" #>  #> $MC$formatting$time_scales$choices$months$verb #> [1] \"Months\" #>  #>  #> $MC$formatting$time_scales$choices$weeks #> $MC$formatting$time_scales$choices$weeks$conv #> [1] \"60*60*24*7\" #>  #> $MC$formatting$time_scales$choices$weeks$verb #> [1] \"Weeks\" #>  #>  #> $MC$formatting$time_scales$choices$days #> $MC$formatting$time_scales$choices$days$conv #> [1] \"60*60*24\" #>  #> $MC$formatting$time_scales$choices$days$verb #> [1] \"Days\" #>  #>  #> $MC$formatting$time_scales$choices$hours #> $MC$formatting$time_scales$choices$hours$conv #> [1] \"60*60\" #>  #> $MC$formatting$time_scales$choices$hours$verb #> [1] \"Hours\" #>  #>  #> $MC$formatting$time_scales$choices$min #> $MC$formatting$time_scales$choices$min$conv #> [1] \"60\" #>  #> $MC$formatting$time_scales$choices$min$verb #> [1] \"Minutes\" #>  #>  #> $MC$formatting$time_scales$choices$sec #> $MC$formatting$time_scales$choices$sec$conv #> [1] \"1\" #>  #> $MC$formatting$time_scales$choices$sec$verb #> [1] \"Seconds\" #>  #>  #>  #>  #>  #> $MC$labels #> $MC$labels$current_element #> NULL #>  #> $MC$labels$element_name #> NULL #>  #> $MC$labels$upload_model_file #> NULL #>  #> $MC$labels$base_from #> NULL #>  #> $MC$labels$catalog_selection #> NULL #>  #> $MC$labels$model_type_selection #> NULL #>  #> $MC$labels$time_scale #> NULL #>  #> $MC$labels$catalog_empty #> [1] \"No models were found, the catalog is empty\" #>  #> $MC$labels$save_btn #> [1] \"Save\" #>  #> $MC$labels$clip_btn #> [1] \"Code\" #>  #> $MC$labels$copy_btn #> [1] \"Copy\" #>  #> $MC$labels$del_btn #> [1] \"Delete\" #>  #> $MC$labels$new_btn #> [1] \"New\" #>  #> $MC$labels$building_model #> [1] \"Building model, be patient.\" #>  #> $MC$labels$element_name_diff #> [1] \"The model name has changed.\" #>  #> $MC$labels$model_code_diff #> [1] \"Manual changes have been made to the model.\" #>  #> $MC$labels$save_change_detected #> [1] \"You need to click on the save button for these changes to take effect.\" #>  #> $MC$labels$head_base_model #> [1] \"Starting model\" #>  #> $MC$labels$head_model_code #> [1] \"Model code\" #>  #> $MC$labels$head_time_scale #> [1] \"Model time-scale\" #>  #>  #> $MC$errors #> $MC$errors$no_model_found #> [1] \"No model was found.\" #>  #> $MC$errors$base_model_build_failed #> [1] \"The base model build failed.\" #>  #> $MC$errors$manual_model_update_failed #> [1] \"Manual model update failed.\" #>  #> $MC$errors$user_file_upload_failed #> [1] \"User-defined model failed.\" #>  #> $MC$errors$nlmixr2lib_not_found #> [1] \"The nlmixr2lib package was not found. This library will not be available.\" #>  #> $MC$errors$selected_id_bad_list #> [1] \"Unable to find a list for the selected component.\" #>  #> $MC$errors$selected_id_bad_row #> [1] \"Selected component should have 1 row.\" #>  #>  #> $MC$tooltips #> $MC$tooltips$include #> [1] TRUE #>  #> $MC$tooltips$elements #> [1] \"Show model components\" #>  #> $MC$tooltips$show_code #> [1] \"Show model code\" #>  #> $MC$tooltips$url_rxode #> [1] \"https://nlmixr2.github.io/rxode2/articles/rxode2-syntax.html\" #>  #> $MC$tooltips$url_model_types #> [1] \"https://ruminate.ubiquity.tools/articles/model_builder.html#model-catalog\" #>  #> $MC$tooltips$components #> $MC$tooltips$components$input_tip #> [1] \"My tool tip\" #>  #>  #>  #>  #> $MB #> $MB$button_counters #> $MB$button_counters$button_clk_save #> [1] 0 #>  #> $MB$button_counters$button_clk_clip #> [1] 0 #>  #> $MB$button_counters$button_clk_del #> [1] 0 #>  #> $MB$button_counters$button_clk_copy #> [1] 0 #>  #> $MB$button_counters$button_clk_new #> [1] 0 #>  #>  #> $MB$ui_hold #> $MB$ui_hold$button_clk_save #> [1] FALSE #>  #> $MB$ui_hold$button_clk_clip #> [1] FALSE #>  #> $MB$ui_hold$button_clk_del #> [1] FALSE #>  #> $MB$ui_hold$button_clk_copy #> [1] FALSE #>  #> $MB$ui_hold$button_clk_new #> [1] FALSE #>  #> $MB$ui_hold$model_type_selection #> [1] FALSE #>  #> $MB$ui_hold$ui_select_element #> [1] FALSE #>  #> $MB$ui_hold$ui_mb_model #> [1] FALSE #>  #> $MB$ui_hold$time_scale #> [1] FALSE #>  #> $MB$ui_hold$uploaded_model #> [1] FALSE #>  #> $MB$ui_hold$base_from #> [1] FALSE #>  #> $MB$ui_hold$element_selection #> [1] FALSE #>  #> $MB$ui_hold$catalog_selection #> [1] FALSE #>  #> $MB$ui_hold$element_name #> [1] FALSE #>  #>  #> $MB$ui_ids #>  [1] \"button_clk_save\"      \"button_clk_clip\"      \"button_clk_del\"       #>  [4] \"button_clk_copy\"      \"button_clk_new\"       \"model_type_selection\" #>  [7] \"ui_select_element\"    \"ui_mb_model\"          \"time_scale\"           #> [10] \"model_type_selection\" \"uploaded_model\"       \"base_from\"            #> [13] \"element_selection\"    \"catalog_selection\"    \"element_name\"         #>  #> $MB$isgood #> [1] TRUE #>  #> $MB$ui_ele #> [1] \"catalog_selection\" \"element_name\"      \"time_scale\"        #>  #> $MB$element_cntr #> [1] 1 #>  #> $MB$model_type_selection #> [1] \"rxode2\" #>  #> $MB$base_from #> [1] \"catalog\" #>  #> $MB$suggested #> $MB$suggested$found #> [1] FALSE #>  #> $MB$suggested$pkgs #> $MB$suggested$pkgs$rxode2 #> $MB$suggested$pkgs$rxode2$found #> [1] FALSE #>  #> $MB$suggested$pkgs$rxode2$msg #> [1] \"rxode2 package was not found.\" #>  #>  #> $MB$suggested$pkgs$nonmem2rx #> $MB$suggested$pkgs$nonmem2rx$found #> [1] FALSE #>  #> $MB$suggested$pkgs$nonmem2rx$msg #> [1] \"nonmem2rx package was not found.\" #>  #>  #> $MB$suggested$pkgs$nlmixr2lib #> $MB$suggested$pkgs$nlmixr2lib$found #> [1] FALSE #>  #> $MB$suggested$pkgs$nlmixr2lib$msg #> [1] \"nlmixr2lib package was not found.\" #>  #>  #>  #>  #> $MB$model_catalog #> $MB$model_catalog$sources #> $MB$model_catalog$sources[[1]] #> $MB$model_catalog$sources[[1]]$source #> $MB$model_catalog$sources[[1]]$source$group #> [1] \"User-defined Models\" #>  #> $MB$model_catalog$sources[[1]]$source$name #> [1] \"rxode2 User model\" #>  #> $MB$model_catalog$sources[[1]]$source$description #> [1] \"User-defined rxode2 model\" #>  #> $MB$model_catalog$sources[[1]]$source$type #> [1] \"rxode2\" #>  #> $MB$model_catalog$sources[[1]]$source$obj #> [1] \"my_fcn\" #>  #> $MB$model_catalog$sources[[1]]$source$file #> [1] \"file.path(getwd(),\\\"user_model.R\\\")\" #>  #>  #>  #> $MB$model_catalog$sources[[2]] #> $MB$model_catalog$sources[[2]]$source #> $MB$model_catalog$sources[[2]]$source$group #> [1] \"User-defined Models\" #>  #> $MB$model_catalog$sources[[2]]$source$name #> [1] \"NONMEM User model\" #>  #> $MB$model_catalog$sources[[2]]$source$description #> [1] \"User-defined NONMEM model\" #>  #> $MB$model_catalog$sources[[2]]$source$type #> [1] \"NONMEM\" #>  #> $MB$model_catalog$sources[[2]]$source$file #> [1] \"file.path(getwd(),\\\"user_model.ctl\\\")\" #>  #>  #>  #> $MB$model_catalog$sources[[3]] #> $MB$model_catalog$sources[[3]]$source #> $MB$model_catalog$sources[[3]]$source$group #> [1] \"Model Library\" #>  #> $MB$model_catalog$sources[[3]]$source$type #> [1] \"nlmixr2lib\" #>  #> $MB$model_catalog$sources[[3]]$source$name #> [1] \"nlmixr2 Model Library\" #>  #>  #>  #>  #> $MB$model_catalog$summary #> NULL #>  #> $MB$model_catalog$select_group #> list() #>  #> $MB$model_catalog$select_plain #> list() #>  #> $MB$model_catalog$select_subtext #> NULL #>  #> $MB$model_catalog$msgs #> NULL #>  #> $MB$model_catalog$hasmdl #> [1] TRUE #>  #> $MB$model_catalog$isgood #> [1] TRUE #>  #>  #> $MB$elements #> $MB$elements$element_1 #> $MB$elements$element_1$isgood #> [1] TRUE #>  #> $MB$elements$element_1$ui #> $MB$elements$element_1$ui$ui_mb_model #> [1] \"\" #>  #> $MB$elements$element_1$ui$time_scale #> [1] \"weeks\" #>  #> $MB$elements$element_1$ui$element_name #> [1] \"Model 1\" #>  #> $MB$elements$element_1$ui$catalog_selection #> NULL #>  #>  #> $MB$elements$element_1$id #> [1] \"element_1\" #>  #> $MB$elements$element_1$idx #> [1] 1 #>  #> $MB$elements$element_1$fcn_obj_name #> [1] \"MB_obj_1_fcn\" #>  #> $MB$elements$element_1$rx_obj_name #> [1] \"MB_obj_1_rx\" #>  #> $MB$elements$element_1$msgs #> NULL #>  #> $MB$elements$element_1$code_previous #> [1] \"\" #>  #> $MB$elements$element_1$update_model_code #> [1] FALSE #>  #> $MB$elements$element_1$components_table #> data frame with 0 columns and 0 rows #>  #> $MB$elements$element_1$selected_component_id #> NULL #>  #> $MB$elements$element_1$components_list #> list() #>  #> $MB$elements$element_1$checksum #> [1] \"b2e8fd34d20c49c229c7bf3b796157d2\" #>  #> $MB$elements$element_1$base_model_name #> [1] \"\" #>  #> $MB$elements$element_1$base_model #> [1] \"\" #>  #>  #>  #> $MB$current_element #> [1] \"element_1\" #>  #> $MB$checksum #> [1] \"8ac755447dc73c185137d18702a2cdb6\" #>  #>  #> $MOD_TYPE #> [1] \"MB\" #>  #> $id #> [1] \"MB\" #>  #> $FM_yaml_file #> [1] \"/Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/formods/templates/formods.yaml\" #>  #> $MOD_yaml_file #> [1] \"/private/var/folders/l9/6pm7xq5j1hn6l00zrs22j6mc0000gn/T/Rtmp3mXuRf/temp_libpathd3297b8d3bb9/ruminate/templates/MB.yaml\" #>  #> $shiny_token #> [1] \"non_shiny\" #>"},{"path":"/reference/MB_mod_ok.html","id":null,"dir":"Reference","previous_headings":"","what":"Makes Sure Suggests are Installed — MB_mod_ok","title":"Makes Sure Suggests are Installed — MB_mod_ok","text":"Simple check make sure suggested packages installed.","code":""},{"path":"/reference/MB_mod_ok.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Makes Sure Suggests are Installed — MB_mod_ok","text":"","code":"MB_mod_ok(pkgs = c(\"rxode2\", \"nonmem2rx\", \"nlmixr2lib\"))"},{"path":"/reference/MB_mod_ok.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Makes Sure Suggests are Installed — MB_mod_ok","text":"pkgs List suggested packages (default \"rxode2\", \"nonmem2rx\" \"nlmixr2lib\")","code":""},{"path":"/reference/MB_mod_ok.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Makes Sure Suggests are Installed — MB_mod_ok","text":"Boolean value indicating module OK","code":""},{"path":"/reference/MB_mod_ok.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Makes Sure Suggests are Installed — MB_mod_ok","text":"","code":"MB_mod_ok() #> [1] FALSE"},{"path":"/reference/MB_new_element.html","id":null,"dir":"Reference","previous_headings":"","what":"New Model Building Model — MB_new_element","title":"New Model Building Model — MB_new_element","text":"Appends new empty model MB state object makes new model active model.","code":""},{"path":"/reference/MB_new_element.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"New Model Building Model — MB_new_element","text":"","code":"MB_new_element(state)"},{"path":"/reference/MB_new_element.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"New Model Building Model — MB_new_element","text":"state MB state MB_fetch_state()","code":""},{"path":"/reference/MB_new_element.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"New Model Building Model — MB_new_element","text":"MB state object containing new model model set current active model. See help MB_fetch_state() model format.","code":""},{"path":"/reference/MB_new_element.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"New Model Building Model — MB_new_element","text":"","code":"#library(ruminate) # This will get the full session: sess_res = MB_test_mksession(session=list(), full_session=TRUE) #> → MB: including file #> → MB:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → MB:   dest:   file.path(\"config\",\"report.docx\") #> → MB: including file #> → MB:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → MB:   dest:   file.path(\"config\",\"report.pptx\") #> → MB: including file #> → MB:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → MB:   dest:   file.path(\"config\",\"report.yaml\") #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.R not found (skipping) #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.ctl not found (skipping) #> → MB: module checksum updated:8ac755447dc73c185137d18702a2cdb6 #> → MB: State initialized #> → MB: module checksum updated:8ac755447dc73c185137d18702a2cdb6 # This is just for CRAN #sess_res = MB_test_mksession(session=list()) session = sess_res$session input   = sess_res$input  # Configuration files FM_yaml_file  = system.file(package = \"formods\", \"templates\", \"formods.yaml\") MOD_yaml_file = system.file(package = \"ruminate\", \"templates\", \"MB.yaml\")  # Creating an empty state object state = MB_fetch_state(id              = \"MB\",                        input           = input,                        session         = session,                        FM_yaml_file    = FM_yaml_file,                        MOD_yaml_file   = MOD_yaml_file,                        react_state     = NULL) #> → MB: including file #> → MB:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → MB:   dest:   file.path(\"config\",\"report.docx\") #> → MB: including file #> → MB:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → MB:   dest:   file.path(\"config\",\"report.pptx\") #> → MB: including file #> → MB:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → MB:   dest:   file.path(\"config\",\"report.yaml\") #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.R not found (skipping) #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.ctl not found (skipping) #> → MB: module checksum updated:8ac755447dc73c185137d18702a2cdb6 #> → MB: State initialized #> → MB: module checksum updated:8ac755447dc73c185137d18702a2cdb6  # This will provide a list of the available models models = MB_fetch_catalog(state) #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.R not found (skipping) #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.ctl not found (skipping) # This is a summary of the tables in the model: models$summary #> NULL  # This will test the models in the catalog, set as_cran # to FALSE to test all the models. mtres = MB_test_catalog(state, as_cran=TRUE) #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.R not found (skipping) #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.ctl not found (skipping) mtres$isgood #> [1] FALSE   # Creates a new empty element state = MB_new_element(state)  # Delete the current element state = MB_del_current_element(state)  # Fetch a list of the current element element = MB_fetch_current_element(state)  # This will attach a model to it: # Pulling the first model from the catalog fcn_def  = models[[\"summary\"]][1, ][[\"Model\"]] fcn_obj  = models[[\"summary\"]][1, ][[\"Object\"]] mdl_type = models[[\"summary\"]][1, ][[\"Type\"]] fcn_desc = models[[\"summary\"]][1, ][[\"Description\"]]  # This will build the rxode2 object from the model mk_rx_res = mk_rx_obj(   type  = mdl_type,   model = list(fcn_def = fcn_def,                fcn_obj = fcn_obj))  # This will attach the model to the current element element = MB_update_model(   state       = state,   session     = session,   current_ele = element,   rx_obj      = mk_rx_res[[\"capture\"]][[\"rx_obj\"]],   note        = fcn_desc,   reset       = TRUE)  # You can now place element back in the state state = MB_set_current_element(state, element) #> → MB: module checksum updated:e5352fb5e1e48e8e151dcd9d80cfbfa1  # This will fetch the current component component = MB_fetch_component(state, element)  # You can use the component to build the code to generate the model: gen_code =   MB_build_code(state        = state, session = session,               fcn_def      = component[[\"fcn_def\"]],               fcn_obj_name = \"my_fcn_obj\",               rx_obj_name  = \"my_obj_name\")  # Model code to be included in a larger script cat(paste0(gen_code$model_code, collapse=\"\\n\")) #> # rxode2 package was not found.  # Stand-alone model code cat(paste0(gen_code$model_code_sa, collapse=\"\\n\")) #>  #> # rxode2 package was not found.  # JMH to add: # MB_fetch_code"},{"path":"/reference/MB_set_current_element.html","id":null,"dir":"Reference","previous_headings":"","what":"Sets the Value for the  Current model — MB_set_current_element","title":"Sets the Value for the  Current model — MB_set_current_element","text":"Takes MB state returns current active model","code":""},{"path":"/reference/MB_set_current_element.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sets the Value for the  Current model — MB_set_current_element","text":"","code":"MB_set_current_element(state, element)"},{"path":"/reference/MB_set_current_element.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sets the Value for the  Current model — MB_set_current_element","text":"state MB state MB_fetch_state() element Element list MB_fetch_current_element()","code":""},{"path":"/reference/MB_set_current_element.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sets the Value for the  Current model — MB_set_current_element","text":"MB state object current model set using supplied value.","code":""},{"path":"/reference/MB_set_current_element.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sets the Value for the  Current model — MB_set_current_element","text":"","code":"#library(ruminate) # This will get the full session: sess_res = MB_test_mksession(session=list(), full_session=TRUE) #> → MB: including file #> → MB:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → MB:   dest:   file.path(\"config\",\"report.docx\") #> → MB: including file #> → MB:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → MB:   dest:   file.path(\"config\",\"report.pptx\") #> → MB: including file #> → MB:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → MB:   dest:   file.path(\"config\",\"report.yaml\") #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.R not found (skipping) #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.ctl not found (skipping) #> → MB: module checksum updated:8ac755447dc73c185137d18702a2cdb6 #> → MB: State initialized #> → MB: module checksum updated:8ac755447dc73c185137d18702a2cdb6 # This is just for CRAN #sess_res = MB_test_mksession(session=list()) session = sess_res$session input   = sess_res$input  # Configuration files FM_yaml_file  = system.file(package = \"formods\", \"templates\", \"formods.yaml\") MOD_yaml_file = system.file(package = \"ruminate\", \"templates\", \"MB.yaml\")  # Creating an empty state object state = MB_fetch_state(id              = \"MB\",                        input           = input,                        session         = session,                        FM_yaml_file    = FM_yaml_file,                        MOD_yaml_file   = MOD_yaml_file,                        react_state     = NULL) #> → MB: including file #> → MB:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → MB:   dest:   file.path(\"config\",\"report.docx\") #> → MB: including file #> → MB:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → MB:   dest:   file.path(\"config\",\"report.pptx\") #> → MB: including file #> → MB:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → MB:   dest:   file.path(\"config\",\"report.yaml\") #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.R not found (skipping) #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.ctl not found (skipping) #> → MB: module checksum updated:8ac755447dc73c185137d18702a2cdb6 #> → MB: State initialized #> → MB: module checksum updated:8ac755447dc73c185137d18702a2cdb6  # This will provide a list of the available models models = MB_fetch_catalog(state) #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.R not found (skipping) #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.ctl not found (skipping) # This is a summary of the tables in the model: models$summary #> NULL  # This will test the models in the catalog, set as_cran # to FALSE to test all the models. mtres = MB_test_catalog(state, as_cran=TRUE) #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.R not found (skipping) #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.ctl not found (skipping) mtres$isgood #> [1] FALSE   # Creates a new empty element state = MB_new_element(state)  # Delete the current element state = MB_del_current_element(state)  # Fetch a list of the current element element = MB_fetch_current_element(state)  # This will attach a model to it: # Pulling the first model from the catalog fcn_def  = models[[\"summary\"]][1, ][[\"Model\"]] fcn_obj  = models[[\"summary\"]][1, ][[\"Object\"]] mdl_type = models[[\"summary\"]][1, ][[\"Type\"]] fcn_desc = models[[\"summary\"]][1, ][[\"Description\"]]  # This will build the rxode2 object from the model mk_rx_res = mk_rx_obj(   type  = mdl_type,   model = list(fcn_def = fcn_def,                fcn_obj = fcn_obj))  # This will attach the model to the current element element = MB_update_model(   state       = state,   session     = session,   current_ele = element,   rx_obj      = mk_rx_res[[\"capture\"]][[\"rx_obj\"]],   note        = fcn_desc,   reset       = TRUE)  # You can now place element back in the state state = MB_set_current_element(state, element) #> → MB: module checksum updated:e5352fb5e1e48e8e151dcd9d80cfbfa1  # This will fetch the current component component = MB_fetch_component(state, element)  # You can use the component to build the code to generate the model: gen_code =   MB_build_code(state        = state, session = session,               fcn_def      = component[[\"fcn_def\"]],               fcn_obj_name = \"my_fcn_obj\",               rx_obj_name  = \"my_obj_name\")  # Model code to be included in a larger script cat(paste0(gen_code$model_code, collapse=\"\\n\")) #> # rxode2 package was not found.  # Stand-alone model code cat(paste0(gen_code$model_code_sa, collapse=\"\\n\")) #>  #> # rxode2 package was not found.  # JMH to add: # MB_fetch_code"},{"path":"/reference/MB_test_catalog.html","id":null,"dir":"Reference","previous_headings":"","what":"Tests the Model Catalog — MB_test_catalog","title":"Tests the Model Catalog — MB_test_catalog","text":"Reads models catalog attempts build .","code":""},{"path":"/reference/MB_test_catalog.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tests the Model Catalog — MB_test_catalog","text":"","code":"MB_test_catalog(state, as_cran = FALSE, verbose = TRUE)"},{"path":"/reference/MB_test_catalog.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tests the Model Catalog — MB_test_catalog","text":"state MB state MB_fetch_state() as_cran Boolean indicate running CRAN verbose Boolean indicate messages displayed.","code":""},{"path":"/reference/MB_test_catalog.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tests the Model Catalog — MB_test_catalog","text":"List following attributes: isgood: Boolean varaible indicating models catalog passed test. msgs: Messages indicating test successful .","code":""},{"path":"/reference/MB_test_catalog.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tests the Model Catalog — MB_test_catalog","text":"","code":"#library(ruminate) # This will get the full session: sess_res = MB_test_mksession(session=list(), full_session=TRUE) #> → MB: including file #> → MB:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → MB:   dest:   file.path(\"config\",\"report.docx\") #> → MB: including file #> → MB:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → MB:   dest:   file.path(\"config\",\"report.pptx\") #> → MB: including file #> → MB:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → MB:   dest:   file.path(\"config\",\"report.yaml\") #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.R not found (skipping) #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.ctl not found (skipping) #> → MB: module checksum updated:8ac755447dc73c185137d18702a2cdb6 #> → MB: State initialized #> → MB: module checksum updated:8ac755447dc73c185137d18702a2cdb6 # This is just for CRAN #sess_res = MB_test_mksession(session=list()) session = sess_res$session input   = sess_res$input  # Configuration files FM_yaml_file  = system.file(package = \"formods\", \"templates\", \"formods.yaml\") MOD_yaml_file = system.file(package = \"ruminate\", \"templates\", \"MB.yaml\")  # Creating an empty state object state = MB_fetch_state(id              = \"MB\",                        input           = input,                        session         = session,                        FM_yaml_file    = FM_yaml_file,                        MOD_yaml_file   = MOD_yaml_file,                        react_state     = NULL) #> → MB: including file #> → MB:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → MB:   dest:   file.path(\"config\",\"report.docx\") #> → MB: including file #> → MB:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → MB:   dest:   file.path(\"config\",\"report.pptx\") #> → MB: including file #> → MB:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → MB:   dest:   file.path(\"config\",\"report.yaml\") #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.R not found (skipping) #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.ctl not found (skipping) #> → MB: module checksum updated:8ac755447dc73c185137d18702a2cdb6 #> → MB: State initialized #> → MB: module checksum updated:8ac755447dc73c185137d18702a2cdb6  # This will provide a list of the available models models = MB_fetch_catalog(state) #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.R not found (skipping) #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.ctl not found (skipping) # This is a summary of the tables in the model: models$summary #> NULL  # This will test the models in the catalog, set as_cran # to FALSE to test all the models. mtres = MB_test_catalog(state, as_cran=TRUE) #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.R not found (skipping) #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.ctl not found (skipping) mtres$isgood #> [1] FALSE   # Creates a new empty element state = MB_new_element(state)  # Delete the current element state = MB_del_current_element(state)  # Fetch a list of the current element element = MB_fetch_current_element(state)  # This will attach a model to it: # Pulling the first model from the catalog fcn_def  = models[[\"summary\"]][1, ][[\"Model\"]] fcn_obj  = models[[\"summary\"]][1, ][[\"Object\"]] mdl_type = models[[\"summary\"]][1, ][[\"Type\"]] fcn_desc = models[[\"summary\"]][1, ][[\"Description\"]]  # This will build the rxode2 object from the model mk_rx_res = mk_rx_obj(   type  = mdl_type,   model = list(fcn_def = fcn_def,                fcn_obj = fcn_obj))  # This will attach the model to the current element element = MB_update_model(   state       = state,   session     = session,   current_ele = element,   rx_obj      = mk_rx_res[[\"capture\"]][[\"rx_obj\"]],   note        = fcn_desc,   reset       = TRUE)  # You can now place element back in the state state = MB_set_current_element(state, element) #> → MB: module checksum updated:e5352fb5e1e48e8e151dcd9d80cfbfa1  # This will fetch the current component component = MB_fetch_component(state, element)  # You can use the component to build the code to generate the model: gen_code =   MB_build_code(state        = state, session = session,               fcn_def      = component[[\"fcn_def\"]],               fcn_obj_name = \"my_fcn_obj\",               rx_obj_name  = \"my_obj_name\")  # Model code to be included in a larger script cat(paste0(gen_code$model_code, collapse=\"\\n\")) #> # rxode2 package was not found.  # Stand-alone model code cat(paste0(gen_code$model_code_sa, collapse=\"\\n\")) #>  #> # rxode2 package was not found.  # JMH to add: # MB_fetch_code"},{"path":"/reference/MB_test_mksession.html","id":null,"dir":"Reference","previous_headings":"","what":"Populate Session Data for Module Testing — MB_test_mksession","title":"Populate Session Data for Module Testing — MB_test_mksession","text":"Populates supplied session variable testing.","code":""},{"path":"/reference/MB_test_mksession.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Populate Session Data for Module Testing — MB_test_mksession","text":"","code":"MB_test_mksession(session, id = \"MB\", full_session = TRUE)"},{"path":"/reference/MB_test_mksession.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Populate Session Data for Module Testing — MB_test_mksession","text":"session Shiny session variable (app) list (outside app) id ID string corresponds ID used call modules UI elements full_session Boolean indicate full test session created (default TRUE).","code":""},{"path":"/reference/MB_test_mksession.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Populate Session Data for Module Testing — MB_test_mksession","text":"list following elements isgood: Boolean indicating exit status function. session: value Shiny session variable (app) list (outside app) initialization. input: value shiny input end session initialization. state: App state. rsc: react_state components.","code":""},{"path":"/reference/MB_test_mksession.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Populate Session Data for Module Testing — MB_test_mksession","text":"","code":"sess_res = MB_test_mksession(session=list(), full_session=FALSE) #> → MB: including file #> → MB:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → MB:   dest:   file.path(\"config\",\"report.docx\") #> → MB: including file #> → MB:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → MB:   dest:   file.path(\"config\",\"report.pptx\") #> → MB: including file #> → MB:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → MB:   dest:   file.path(\"config\",\"report.yaml\") #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.R not found (skipping) #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.ctl not found (skipping) #> → MB: module checksum updated:8ac755447dc73c185137d18702a2cdb6 #> → MB: State initialized #> → MB: module checksum updated:8ac755447dc73c185137d18702a2cdb6"},{"path":"/reference/MB_update_checksum.html","id":null,"dir":"Reference","previous_headings":"","what":"Update MB Module Checksum — MB_update_checksum","title":"Update MB Module Checksum — MB_update_checksum","text":"Takes MB state updates checksum used trigger downstream updates","code":""},{"path":"/reference/MB_update_checksum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update MB Module Checksum — MB_update_checksum","text":"","code":"MB_update_checksum(state)"},{"path":"/reference/MB_update_checksum.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update MB Module Checksum — MB_update_checksum","text":"state MB state MB_fetch_state()","code":""},{"path":"/reference/MB_update_checksum.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update MB Module Checksum — MB_update_checksum","text":"MB state object checksum updated","code":""},{"path":"/reference/MB_update_checksum.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update MB Module Checksum — MB_update_checksum","text":"","code":"# Within shiny both session and input variables will exist, # this creates examples here for testing purposes: sess_res = MB_test_mksession(session=list()) #> → MB: including file #> → MB:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → MB:   dest:   file.path(\"config\",\"report.docx\") #> → MB: including file #> → MB:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → MB:   dest:   file.path(\"config\",\"report.pptx\") #> → MB: including file #> → MB:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → MB:   dest:   file.path(\"config\",\"report.yaml\") #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.R not found (skipping) #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.ctl not found (skipping) #> → MB: module checksum updated:8ac755447dc73c185137d18702a2cdb6 #> → MB: State initialized #> → MB: module checksum updated:8ac755447dc73c185137d18702a2cdb6 session = sess_res$session input   = sess_res$input  # We also need a state variable state = sess_res$state  state = MB_update_checksum(state) #> → MB: module checksum updated:8ac755447dc73c185137d18702a2cdb6"},{"path":"/reference/MB_update_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Updates Current Element with rxode2 Model — MB_update_model","title":"Updates Current Element with rxode2 Model — MB_update_model","text":"Takes rxode2 object updates model components current element.","code":""},{"path":"/reference/MB_update_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Updates Current Element with rxode2 Model — MB_update_model","text":"","code":"MB_update_model(state, session, current_ele, rx_obj, note, reset = FALSE)"},{"path":"/reference/MB_update_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Updates Current Element with rxode2 Model — MB_update_model","text":"state MB state MB_fetch_state() session Shiny session variable current_ele MB model element MB_fetch_current_element() rx_obj rxode2 model rxode2::rxode2() note text indicating update (e.g. \"added parameter\") reset boolean indicating element needs reset (.e. change base model) default: FALSE.","code":""},{"path":"/reference/MB_update_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Updates Current Element with rxode2 Model — MB_update_model","text":"current_element model attached","code":""},{"path":"/reference/MB_update_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Updates Current Element with rxode2 Model — MB_update_model","text":"","code":"#library(ruminate) # This will get the full session: sess_res = MB_test_mksession(session=list(), full_session=TRUE) #> → MB: including file #> → MB:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → MB:   dest:   file.path(\"config\",\"report.docx\") #> → MB: including file #> → MB:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → MB:   dest:   file.path(\"config\",\"report.pptx\") #> → MB: including file #> → MB:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → MB:   dest:   file.path(\"config\",\"report.yaml\") #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.R not found (skipping) #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.ctl not found (skipping) #> → MB: module checksum updated:8ac755447dc73c185137d18702a2cdb6 #> → MB: State initialized #> → MB: module checksum updated:8ac755447dc73c185137d18702a2cdb6 # This is just for CRAN #sess_res = MB_test_mksession(session=list()) session = sess_res$session input   = sess_res$input  # Configuration files FM_yaml_file  = system.file(package = \"formods\", \"templates\", \"formods.yaml\") MOD_yaml_file = system.file(package = \"ruminate\", \"templates\", \"MB.yaml\")  # Creating an empty state object state = MB_fetch_state(id              = \"MB\",                        input           = input,                        session         = session,                        FM_yaml_file    = FM_yaml_file,                        MOD_yaml_file   = MOD_yaml_file,                        react_state     = NULL) #> → MB: including file #> → MB:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → MB:   dest:   file.path(\"config\",\"report.docx\") #> → MB: including file #> → MB:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → MB:   dest:   file.path(\"config\",\"report.pptx\") #> → MB: including file #> → MB:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → MB:   dest:   file.path(\"config\",\"report.yaml\") #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.R not found (skipping) #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.ctl not found (skipping) #> → MB: module checksum updated:8ac755447dc73c185137d18702a2cdb6 #> → MB: State initialized #> → MB: module checksum updated:8ac755447dc73c185137d18702a2cdb6  # This will provide a list of the available models models = MB_fetch_catalog(state) #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.R not found (skipping) #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.ctl not found (skipping) # This is a summary of the tables in the model: models$summary #> NULL  # This will test the models in the catalog, set as_cran # to FALSE to test all the models. mtres = MB_test_catalog(state, as_cran=TRUE) #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.R not found (skipping) #> ! MB: User-defined model: /Users/jmh/My Drive/projects/ruminate/github/ruminate/docs/reference/user_model.ctl not found (skipping) mtres$isgood #> [1] FALSE   # Creates a new empty element state = MB_new_element(state)  # Delete the current element state = MB_del_current_element(state)  # Fetch a list of the current element element = MB_fetch_current_element(state)  # This will attach a model to it: # Pulling the first model from the catalog fcn_def  = models[[\"summary\"]][1, ][[\"Model\"]] fcn_obj  = models[[\"summary\"]][1, ][[\"Object\"]] mdl_type = models[[\"summary\"]][1, ][[\"Type\"]] fcn_desc = models[[\"summary\"]][1, ][[\"Description\"]]  # This will build the rxode2 object from the model mk_rx_res = mk_rx_obj(   type  = mdl_type,   model = list(fcn_def = fcn_def,                fcn_obj = fcn_obj))  # This will attach the model to the current element element = MB_update_model(   state       = state,   session     = session,   current_ele = element,   rx_obj      = mk_rx_res[[\"capture\"]][[\"rx_obj\"]],   note        = fcn_desc,   reset       = TRUE)  # You can now place element back in the state state = MB_set_current_element(state, element) #> → MB: module checksum updated:e5352fb5e1e48e8e151dcd9d80cfbfa1  # This will fetch the current component component = MB_fetch_component(state, element)  # You can use the component to build the code to generate the model: gen_code =   MB_build_code(state        = state, session = session,               fcn_def      = component[[\"fcn_def\"]],               fcn_obj_name = \"my_fcn_obj\",               rx_obj_name  = \"my_obj_name\")  # Model code to be included in a larger script cat(paste0(gen_code$model_code, collapse=\"\\n\")) #> # rxode2 package was not found.  # Stand-alone model code cat(paste0(gen_code$model_code_sa, collapse=\"\\n\")) #>  #> # rxode2 package was not found.  # JMH to add: # MB_fetch_code"},{"path":"/reference/NCA_Server.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetch Non-Compartmental Analysis State — NCA_Server","title":"Fetch Non-Compartmental Analysis State — NCA_Server","text":"Merges default app options changes made UI","code":""},{"path":"/reference/NCA_Server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetch Non-Compartmental Analysis State — NCA_Server","text":"","code":"NCA_Server(   id,   FM_yaml_file = system.file(package = \"formods\", \"templates\", \"formods.yaml\"),   MOD_yaml_file = system.file(package = \"ruminate\", \"templates\", \"NCA.yaml\"),   id_ASM = \"ASM\",   id_UD = \"UD\",   id_DW = \"DW\",   deployed = FALSE,   react_state = NULL )"},{"path":"/reference/NCA_Server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetch Non-Compartmental Analysis State — NCA_Server","text":"id ID string corresponds ID used call modules UI elements FM_yaml_file App configuration file FM main section. MOD_yaml_file Module configuration file MC main section. id_ASM ID string app state management module used save load app states id_UD ID string upload data module used save load app states id_DW ID string data wrangling module used save load app states deployed Boolean variable indicating whether app deployed . react_state Variable passed server allow reaction outside module (NULL)","code":""},{"path":"/reference/NCA_Server.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetch Non-Compartmental Analysis State — NCA_Server","text":"list containing current state app including default values yaml file well changes made user. list following structure: yaml: Full contents supplied yaml file. MC: Module components yaml file. NCA: isgood: Boolean object indicating file successfully loaded. checksum: MD5 sum contents element can used detect changes state. MOD_TYPE: Character data containing type module \"NCA\" id: Character data containing module id module session variable. FM_yaml_file: App configuration file FM main section. MOD_yaml_file:  Module configuration file MC main section.","code":""},{"path":"/reference/NCA_Server.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fetch Non-Compartmental Analysis State — NCA_Server","text":"","code":"if(interactive()){ # original file: inst/templates/ruminate.R library(formods) library(ruminate)  # These are suggested packages library(shinydashboard) #library(ggpubr) #library(plotly) #library(shinybusy) library(prompter) #library(utils)  tags$style(\"@import url(https://use.fontawesome.com/releases/v6.4.0/css/all.css);\")  # You can copy these locally and customize them for your own needs. Simply # change the assignment to the local copy you've modified. formods.yaml  = system.file(package=\"formods\",  \"templates\",  \"formods.yaml\") ASM.yaml      = system.file(package=\"formods\",  \"templates\",  \"ASM.yaml\") UD.yaml       = system.file(package=\"formods\",  \"templates\",  \"UD.yaml\") DW.yaml       = system.file(package=\"formods\",  \"templates\",  \"DW.yaml\") FG.yaml       = system.file(package=\"formods\",  \"templates\",  \"FG.yaml\") MB.yaml       = system.file(package=\"ruminate\", \"templates\",  \"MB.yaml\") NCA.yaml      = system.file(package=\"ruminate\", \"templates\",  \"NCA.yaml\")  # Making sure that the deployed object is created if(!exists(\"deployed\")){   deployed = FALSE }  # Making sure that the run_dev object is created if(file.exists(file.path(tempdir(), \"RUMINTE_DEVELOPMENT\"))){   run_dev  = TRUE }else{   run_dev  = FALSE }  # If the SETUP.R file exists we source it  if(file.exists(\"SETUP.R\")){   source(\"SETUP.R\") }   # If the DEPLOYED file marker existrs we set deployed to TRUE if(file.exists(\"DEPLOYED\")){   deployed = TRUE }  CSS <- \" .wrapfig {   float: right;   shape-margin: 20px;   margin-right: 20px;   margin-bottom: 20px; } \"  #https://fontawesome.com/icons?from=io logo_url =   \"https://raw.githubusercontent.com/john-harrold/ruminate/main/man/figures/logo.png\" data_url =   \"https://github.com/john-harrold/formods/raw/master/inst/test_data/TEST_DATA.xlsx\" run_url  =   \"https://runruminate.ubiquity.tools/\" use_url  =   \"https://useruminate.ubiquity.tools/\" main_url =   \"https://ruminate.ubiquity.tools/\" issue_url =   \"https://github.com/john-harrold/ruminate/issues\"  intro_text = tags$p( \"Ruminate is a shiny module for pharmacometric data processing, visualization, and analysis. It consists of separate shiny modules that provide interfaces into common R packages and provides the underlying code. This is done to facilitate usage of those packages and to provide reproducible analyses.\" , tags$li( \"To find out more visit  \",         tags$a(\"ruminate.ubiquity.tools\", href=main_url),\"\"), tags$li( \"To give it a try you can download a test dataset \",         tags$a(\"here\", href=data_url),\"\"), tags$li( \"Go to  \",         tags$a(\"useruminate.ubiquity.tools\", href=use_url),\" for a video         demonstrating how to use ruminate\"), tags$li( \"If you run into any problems, have questions, or want a feature please         visit the \",         tags$a(\"issues\", href=issue_url),\" page\") )  ftmptest = file.path(tempdir(), \"ruminate.test\")  # If the ftmptest file is present we load the development modules if(run_dev){   dev_modules = shinydashboard::menuItem(\"Models\",                                                    tabName = \"model\",                                                 icon    = icon(\"trowel-bricks\")) }else {   dev_modules = NULL }  ui <- shinydashboard::dashboardPage(   skin=\"black\",   shinydashboard::dashboardHeader(title=\"ruminate\"),   shinydashboard::dashboardSidebar(      shinydashboard::sidebarMenu(        shinydashboard::menuItem(\"Load/Save\",                                 tabName=\"loadsave\",                                 icon=icon(\"arrow-down-up-across-line\")) ,        shinydashboard::menuItem(\"Transform Data\", tabName=\"wrangle\", icon=icon(\"shuffle\")),        shinydashboard::menuItem(\"Visualize\",      tabName=\"plot\",    icon=icon(\"chart-line\")),        shinydashboard::menuItem(\"NCA\",            tabName=\"nca\",     icon=icon(\"chart-area\")),        dev_modules,       #shinydashboard::menuItem(\"Models\",         tabName=\"model\",   icon=icon(\"trowel-bricks\")),        shinydashboard::menuItem(\"App Info\",       tabName=\"sysinfo\", icon=icon(\"book-medical\"))      )   ),   shinydashboard::dashboardBody(   tags$head(     tags$style(HTML(CSS))   ),     shinydashboard::tabItems(        shinydashboard::tabItem(tabName=\"nca\",                shinydashboard::box(title=\"Run Non-Compartmental Analysis\", width=12,                fluidRow( prompter::use_prompt(),                column(width=12,                htmlOutput(NS(\"NCA\",  \"NCA_ui_compact\")))))                ),        shinydashboard::tabItem(tabName=\"model\",                shinydashboard::box(title=\"Build PK/PD Models\", width=12,                fluidRow(                 column(width=12,                htmlOutput(NS(\"MB\",  \"MB_ui_compact\")))))                ),        shinydashboard::tabItem(tabName=\"loadsave\",          #     shinydashboard::box(title=NULL, width=12,                shinydashboard::tabBox(                  width = 12,                  title = NULL,                  shiny::tabPanel(id=\"load_data\",                           title=tagList(shiny::icon(\"file-arrow-up\"),                                         \"Load Data\"),                    fluidRow(                      column(width=6,                        div(style=\"display:inline-block;width:100%\",                        htmlOutput(NS(\"UD\", \"ui_ud_load_data\"))),                        htmlOutput(NS(\"UD\", \"ui_ud_clean\")),                        htmlOutput(NS(\"UD\", \"ui_ud_select_sheets\")),                        htmlOutput(NS(\"UD\", \"ui_ud_text_load_result\"))),                      column(width=6,                          tags$p(                              tags$img(                              class = \"wrapfig\",                              src   = logo_url,                              width = 150,                              alt = \"formods logo\" ),                          intro_text                          ))                    ),                  fluidRow(                    column(width=12,                           div(style=\"display:inline-block;vertical-align:top\",                                     htmlOutput(NS(\"UD\", \"ui_ud_data_preview\")))                           ))                  ),                  shiny::tabPanel(id=\"save_state\",                           title=tagList(shiny::icon(\"arrow-down-up-across-line\"),                                         \"Save or Load Analysis\"),                  fluidRow(                    column(width=5,                           div(style=\"display:inline-block;vertical-align:top\",                    htmlOutput(NS(\"ASM\", \"ui_asm_compact\"))                    ))                    )                  )                )          #     ),                ),        shinydashboard::tabItem(tabName=\"wrangle\",                shinydashboard::box(title=\"Transform and Create Views of Your Data\", width=12,                fluidRow(                column(width=12,                htmlOutput(NS(\"DW\",  \"DW_ui_compact\")))))                ),        shinydashboard::tabItem(tabName=\"plot\",                shinydashboard::box(title=\"Visualize Data\", width=12,                htmlOutput(NS(\"FG\",  \"FG_ui_compact\")))),        shinydashboard::tabItem(tabName=\"sysinfo\",          #     box(title=\"System Details\", width=12,                shinydashboard::tabBox(                  width = 12,                  title = NULL,                  shiny::tabPanel(id=\"sys_packages\",                           title=tagList(shiny::icon(\"box-open\"),                                         \"Installed Packages\"),                  htmlOutput(NS(\"ASM\", \"ui_asm_sys_packages\"))                  ),                  shiny::tabPanel(id=\"sys_modules\",                           title=tagList(shiny::icon(\"cubes\"),                                         \"Loaded Modules\"),                  htmlOutput(NS(\"ASM\", \"ui_asm_sys_modules\"))                  ),                  shiny::tabPanel(id=\"sys_log\",                           title=tagList(shiny::icon(\"clipboard-list\"),                                         \"Log\"),                  verbatimTextOutput(NS(\"ASM\", \"ui_asm_sys_log\"))                  ),                  shiny::tabPanel(id=\"sys_options\",                           title=tagList(shiny::icon(\"sliders\"),                                         \"R Options\"),                  htmlOutput(NS(\"ASM\", \"ui_asm_sys_options\"))                  )          #       )                ))       )     )   )  # Main app server server <- function(input, output, session) {    # Empty reactive object to track and react to   # changes in the module state outside of the module   react_FM = reactiveValues()    # Module IDs and the order they are needed for code generation   mod_ids = c(\"UD\", \"DW\", \"FG\", \"NCA\", \"MB\")    # If the ftmptest file is present we load test data   if(file.exists(ftmptest)){     NCA_test_mksession(       session,       id     = \"NCA\",       id_UD  = \"UD\",       id_DW  = \"DW\",       id_ASM = \"ASM\"     )     MB_test_mksession(       session,       full_session=TRUE     )   }    # Module servers   formods::ASM_Server( id=\"ASM\",                        deployed      = deployed,                        react_state   = react_FM,                        FM_yaml_file  = formods.yaml,                        MOD_yaml_file = ASM.yaml,                        mod_ids       = mod_ids)   formods::UD_Server(  id =\"UD\", id_ASM = \"ASM\",                        deployed         = deployed,                        react_state      = react_FM,                        MOD_yaml_file    = UD.yaml,                        FM_yaml_file     = formods.yaml)   formods::DW_Server(  id=\"DW\",       id_ASM = \"ASM\",                        id_UD = \"UD\",                        deployed         = deployed,                        react_state      = react_FM,                        MOD_yaml_file    = DW.yaml,                        FM_yaml_file     = formods.yaml)   formods::FG_Server(  id=\"FG\",     id_ASM = \"ASM\",                        id_UD = \"UD\", id_DW = \"DW\",                        deployed         = deployed,                        react_state      = react_FM,                        MOD_yaml_file    = FG.yaml,                        FM_yaml_file     = formods.yaml)   ruminate::NCA_Server(id    =\"NCA\", id_ASM = \"ASM\",                        id_UD = \"UD\", id_DW  = \"DW\",                        deployed         = deployed,                        react_state      = react_FM,                        MOD_yaml_file    = NCA.yaml,                        FM_yaml_file     = formods.yaml)    ruminate::MB_Server(id=\"MB\", id_ASM = \"ASM\",                        deployed         = deployed,                       react_state      = react_FM,                       MOD_yaml_file    = MB.yaml,                       FM_yaml_file     = formods.yaml)  }  shinyApp(ui, server) }"},{"path":"/reference/NCA_add_int.html","id":null,"dir":"Reference","previous_headings":"","what":"Adds Analysis Interval to Current Analysis — NCA_add_int","title":"Adds Analysis Interval to Current Analysis — NCA_add_int","text":"Takes start time, stop time, NCA parameters adds intervals table","code":""},{"path":"/reference/NCA_add_int.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adds Analysis Interval to Current Analysis — NCA_add_int","text":"","code":"NCA_add_int(state, interval_start, interval_stop, nca_parameters)"},{"path":"/reference/NCA_add_int.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adds Analysis Interval to Current Analysis — NCA_add_int","text":"state NCA state NCA_fetch_state() interval_start Interval start time (numeric). interval_stop Interval stop time (numeric). nca_parameters list NCA parameters interval","code":""},{"path":"/reference/NCA_add_int.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adds Analysis Interval to Current Analysis — NCA_add_int","text":"State interval added current analysis.","code":""},{"path":"/reference/NCA_append_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Append Report Elements — NCA_append_report","title":"Append Report Elements — NCA_append_report","text":"Takes NCA state object appends reportable elements specified report type. NCA analyses \"good\" state reported. good state ignored.","code":""},{"path":"/reference/NCA_append_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Append Report Elements — NCA_append_report","text":"","code":"NCA_append_report(state, rpt, rpttype, gen_code_only = FALSE)"},{"path":"/reference/NCA_append_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Append Report Elements — NCA_append_report","text":"state NCA state NCA_fetch_state() rpt Report current content report appended function. details structure see documentation FM_generate_report. rpttype Type report generate (supported \"xlsx\", \"pptx\", \"docx\"). gen_code_only Boolean value indicating code generated (FALSE).","code":""},{"path":"/reference/NCA_append_report.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Append Report Elements — NCA_append_report","text":"list containing following elements isgood:    Return status function. hasrptele: Boolean indicator module reportable elements. code:      Code create report elements. msgs:      Messages passed back user. rpt:       Report additions passed back user.","code":""},{"path":[]},{"path":"/reference/NCA_append_report.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Append Report Elements — NCA_append_report","text":"","code":"# We need a state object to use below sess_res = NCA_test_mksession(session=list(), full_session=FALSE) #> → UD: including file #> → UD:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → UD:   dest:   file.path(\"config\",\"report.docx\") #> → UD: including file #> → UD:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → UD:   dest:   file.path(\"config\",\"report.pptx\") #> → UD: including file #> → UD:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → UD:   dest:   file.path(\"config\",\"report.yaml\") #> → UD: State initialized #> → UD: module checksum updated:897d952fecbc804999396a96f9df4b20 #> → DW: including file #> → DW:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → DW:   dest:   file.path(\"config\",\"report.docx\") #> → DW: including file #> → DW:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → DW:   dest:   file.path(\"config\",\"report.pptx\") #> → DW: including file #> → DW:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → DW:   dest:   file.path(\"config\",\"report.yaml\") #> → DW: State initialized #> → DW: module checksum updated:5b0f0b05ee3ac7336a74c564bb6efdad #> → DW: module checksum updated:65801ab4b3c645aabf7edf91fc2f0d2c #> → DW: module checksum updated:7fb2dd3b16b1780c4c24f64d658dd7c7 #> → DW: module checksum updated:5ab04ea00be44c0040695a4ed6243c90 #> → DW: module checksum updated:960db107cfe9db93578f79f0ae6283e2 #> → DW: module checksum updated:f0b5d122dcb04f207cba233253b61c4b #> → DW: module checksum updated:189ed77a84bd9fcdd7b26abff8bea34a #> → DW: module checksum updated:669ec77d50652669cd3fcfd949469b37 #> → DW: module checksum updated:dd6cafa0be3b6b195d230a11e9f07f9f #> → DW: module checksum updated:5c2022c376ca8f56b839347156559890 #> → DW: module checksum updated:43640500a04674debd8e2399056c384a #> → DW: module checksum updated:f81c45ac1ef4e7b43153d8c8eaf7aed6 #> → DW: module checksum updated:207cde891d98e20c4afbb7fb5fb0aba2 #> → DW: module checksum updated:0a673e81c01cbbf33533dd65d6baf9e3 #> → DW: module checksum updated:af3f3aefd0115ed9dfdd4d6ef9d5182f #> → DW: module checksum updated:b0ccaee21e859322df0bf79d00c4b347 #> → DW: module checksum updated:2d3d6e9e38be6dea813b2d4d679e34b5 #> → DW: module checksum updated:2b60dd49b48a4e65200dc7241ad270e3 #> → DW: module checksum updated:3c92f397181a4fcdbdf2bd7dd7425e77 #> → DW: module checksum updated:92b81d7573def603649370b87c123b55 #> → DW: module checksum updated:9210264aabc0339e832b0c6bcfda32af #> → DW: module checksum updated:fe62fde1e7e738a1a35c479de9d5007b #> → DW: module checksum updated:ff3edcd4c1e58c96ea2707361916ffbc #> → DW: module checksum updated:b6cdfcef0432c5d9b1fa2bd46122ffa2 #> → DW: module checksum updated:4fa4283f1fd8fd6cf6e6e7df0669723a #> → DW: module checksum updated:cf3e139cef554b2d09dca619ee6aff41 #> → DW: module checksum updated:a9154d91a9e4b5d21f9585a6f68dd083 #> → DW: module checksum updated:4b5c6ad66658ddfa92d10ae1b0b7afa8 #> → DW: module checksum updated:591ac875a490b66a1fa7f4e7d4ba1c62 #> → DW: module checksum updated:afa3ca309cc3e6a48f542f4e8eadd54a #> → DW: module checksum updated:5c918dd4f53a4f1e56115abb09c4f332 #> → DW: module checksum updated:159ddf8c8cd26b178dfda5434bbecfa1 #> → DW: module checksum updated:8bb3c97e700998f2f73353189bd07831 #> → DW: module checksum updated:a1eceffec3ff7d9f9961683b3d07088b #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → NCA:   dest:   file.path(\"config\",\"report.docx\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → NCA:   dest:   file.path(\"config\",\"report.pptx\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → NCA:   dest:   file.path(\"config\",\"report.yaml\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → NCA:   dest:   file.path(\"config\",\"report.docx\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → NCA:   dest:   file.path(\"config\",\"report.pptx\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → NCA:   dest:   file.path(\"config\",\"report.yaml\") #> → NCA: State initialized #> → NCA: State initialized #> → NCA: loading analysis scenario: sd_iv #> → NCA: NCA_add_int: append #> → NCA: NCA_add_int: append #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> → NCA: module checksum updated:00f10b25e440abee801528c92b74be6a state = sess_res$state  # here we need an empty report object for tabular data rpt = list(summary = list(), sheets=list())  # Now we append the report indicating we want # Excel output: rpt_res = NCA_append_report(state,  rpt           = rpt,  rpttype       = \"xlsx\",  gen_code_only = TRUE)  # Shows if report elements are present rpt_res$hasrptele #> [1] TRUE  # Code chunk to generate report element cat(paste(rpt_res$code, collapse=\"\\n\")) #> rpt[[\"sheets\"]][[\"NCA_1_RES\"]]=NCA_1_table_ind_params[[\"one_table\"]] #> rpt[[\"summary\"]] = rbind(rpt[[\"summary\"]], #>   data.frame( #>     Sheet_Name=\"NCA_1_RES\", #>     Description=\"PK NCA Analysis Example (indiviudal results)\" #>   ) #> ) #> rpt[[\"sheets\"]][[\"NCA_1_RAW\"]]=as.data.frame(NCA_1_res) #> rpt[[\"summary\"]] = rbind(rpt[[\"summary\"]], #>   data.frame( #>     Sheet_Name=\"NCA_1_RAW\", #>     Description=\"PK NCA Analysis Example (raw NCA results)\" #>   ) #> )"},{"path":"/reference/NCA_fetch_PKNCA_meta.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetches PKNCA Metadata — NCA_fetch_PKNCA_meta","title":"Fetches PKNCA Metadata — NCA_fetch_PKNCA_meta","text":"Compiles Metadata PKNCA","code":""},{"path":"/reference/NCA_fetch_PKNCA_meta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetches PKNCA Metadata — NCA_fetch_PKNCA_meta","text":"","code":"NCA_fetch_PKNCA_meta()"},{"path":"/reference/NCA_fetch_PKNCA_meta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetches PKNCA Metadata — NCA_fetch_PKNCA_meta","text":"Dataframe containing PKCNA metadata NCA parameters.","code":""},{"path":"/reference/NCA_fetch_PKNCA_meta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fetches PKNCA Metadata — NCA_fetch_PKNCA_meta","text":"","code":"PKNCA_meta = NCA_fetch_PKNCA_meta() utils::head(PKNCA_meta) #> $parameters #>                parameter       unit_type #> 1                  start            time #> 2                    end            time #> 3                auclast             auc #> 4                 aucall             auc #> 5               aumclast            aumc #> 6                aumcall            aumc #> 7            aucint.last             auc #> 8       aucint.last.dose             auc #> 9             aucint.all             auc #> 10       aucint.all.dose             auc #> 11                    c0            conc #> 12                  cmax            conc #> 13                  cmin            conc #> 14                  tmax            time #> 15                 tlast            time #> 16                tfirst            time #> 17             clast.obs            conc #> 18               cl.last       clearance #> 19                cl.all       clearance #> 20                     f        fraction #> 21              mrt.last            time #> 22           mrt.iv.last            time #> 23              vss.last          volume #> 24           vss.iv.last          volume #> 25                   cav            conc #> 26               ctrough            conc #> 27                cstart            conc #> 28                   ptr        fraction #> 29                  tlag            time #> 30              deg.fluc               % #> 31                 swing               % #> 32                  ceoi            conc #> 33  aucabove.predose.all             auc #> 34   aucabove.trough.all             auc #> 35                    ae          amount #> 36              clr.last renal_clearance #> 37               clr.obs renal_clearance #> 38              clr.pred renal_clearance #> 39                    fe        fraction #> 40        sparse_auclast             auc #> 41            time_above            time #> 42             aucivlast             auc #> 43              aucivall             auc #> 44         aucivint.last             auc #> 45          aucivint.all             auc #> 46        aucivpbextlast               % #> 47         aucivpbextall               % #> 48    aucivpbextint.last               % #> 49     aucivpbextint.all               % #> 50             half.life            time #> 51             r.squared        unitless #> 52         adj.r.squared        unitless #> 53              lambda.z    inverse_time #> 54   lambda.z.time.first            time #> 55     lambda.z.n.points           count #> 56            clast.pred            conc #> 57            span.ratio        fraction #> 58        thalf.eff.last            time #> 59     thalf.eff.iv.last            time #> 60              kel.last    inverse_time #> 61           kel.iv.last    inverse_time #> 62            aucinf.obs             auc #> 63           aucinf.pred             auc #> 64           aumcinf.obs            aumc #> 65          aumcinf.pred            aumc #> 66        aucint.inf.obs             auc #> 67   aucint.inf.obs.dose             auc #> 68       aucint.inf.pred             auc #> 69  aucint.inf.pred.dose             auc #> 70          aucivinf.obs             auc #> 71         aucivinf.pred             auc #> 72     aucivpbextinf.obs               % #> 73    aucivpbextinf.pred               % #> 74           aucpext.obs               % #> 75          aucpext.pred               % #> 76                cl.obs       clearance #> 77               cl.pred       clearance #> 78               mrt.obs            time #> 79              mrt.pred            time #> 80            mrt.iv.obs            time #> 81           mrt.iv.pred            time #> 82            mrt.md.obs            time #> 83           mrt.md.pred            time #> 84                vz.obs          volume #> 85               vz.pred          volume #> 86               vss.obs          volume #> 87              vss.pred          volume #> 88            vss.iv.obs          volume #> 89           vss.iv.pred          volume #> 90            vss.md.obs          volume #> 91           vss.md.pred          volume #> 92                vd.obs          volume #> 93               vd.pred          volume #> 94         thalf.eff.obs            time #> 95        thalf.eff.pred            time #> 96      thalf.eff.iv.obs            time #> 97     thalf.eff.iv.pred            time #> 98               kel.obs    inverse_time #> 99              kel.pred    inverse_time #> 100           kel.iv.obs    inverse_time #> 101          kel.iv.pred    inverse_time #> 102           auclast.dn    auc_dosenorm #> 103            aucall.dn    auc_dosenorm #> 104        aucinf.obs.dn    auc_dosenorm #> 105       aucinf.pred.dn    auc_dosenorm #> 106          aumclast.dn   aumc_dosenorm #> 107           aumcall.dn   aumc_dosenorm #> 108       aumcinf.obs.dn   aumc_dosenorm #> 109      aumcinf.pred.dn   aumc_dosenorm #> 110              cmax.dn   conc_dosenorm #> 111              cmin.dn   conc_dosenorm #> 112         clast.obs.dn   conc_dosenorm #> 113        clast.pred.dn   conc_dosenorm #> 114               cav.dn   conc_dosenorm #> 115           ctrough.dn   conc_dosenorm #>                                                 pretty_name data_type #> 1                                            Interval Start  interval #> 2                                              Interval End  interval #> 3                                                   AUClast  interval #> 4                                                    AUCall  interval #> 5                                                 AUMC,last  interval #> 6                                                  AUMC,all  interval #> 7                   AUCint (based on AUClast extrapolation)  interval #> 8       AUCint (based on AUClast extrapolation, dose-aware)  interval #> 9                    AUCint (based on AUCall extrapolation)  interval #> 10       AUCint (based on AUCall extrapolation, dose-aware)  interval #> 11                                                       C0  interval #> 12                                                     Cmax  interval #> 13                                                     Cmin  interval #> 14                                                     Tmax  interval #> 15                                                    Tlast  interval #> 16                                                   Tfirst  interval #> 17                                                    Clast  interval #> 18                                    CL (based on AUClast)  interval #> 19                                     CL (based on AUCall)  interval #> 20                                          Bioavailability  interval #> 21                                   MRT (based on AUClast)  interval #> 22                    MRT (for IV dosing, based on AUClast)  interval #> 23                                   Vss (based on AUClast)  interval #> 24                    Vss (for IV dosing, based on AUClast)  interval #> 25                                                      Cav  interval #> 26                                                  Ctrough  interval #> 27                                                   Cstart  interval #> 28                                     Peak-to-trough ratio  interval #> 29                                                     Tlag  interval #> 30                                    Degree of fluctuation  interval #> 31                                                    Swing  interval #> 32                                                     Ceoi  interval #> 33                                                AUC,above  interval #> 34                                                AUC,above  interval #> 35                                          Amount excreted  interval #> 36                           Renal clearance (from AUClast)  interval #> 37                        Renal clearance (from AUCinf,obs)  interval #> 38                       Renal clearance (from AUCinf,pred)  interval #> 39                                        Fraction excreted  interval #> 40                                           Sparse AUClast  interval #> 41                                 Time above Concentration  interval #> 42                                      AUClast (IV dosing)  interval #> 43                                       AUCall (IV dosing)  interval #> 44                                  AUCint,last (IV dosing)  interval #> 45                                   AUCint,all (IV dosing)  interval #> 46                               AUCbext (based on AUClast)  interval #> 47                                AUCbext (based on AUCall)  interval #> 48                           AUCbext (based on AUCint,last)  interval #> 49                            AUCbext (based on AUCint,all)  interval #> 50                                                Half-life  interval #> 51                                                    $r^2$  interval #> 52                                              $r^2_{adj}$  interval #> 53                                             $\\\\lambda_z$  interval #> 54                              First time for $\\\\lambda_z$  interval #> 55                       Number of points used for lambda_z  interval #> 56                                               Clast,pred  interval #> 57                                               Span ratio  interval #> 58                  Effective half-life (based on MRT,last)  interval #> 59    Effective half-life (for IV dosing, based on MRTlast)  interval #> 60                                   Kel (based on AUClast)  interval #> 61                    Kel (for IV dosing, based on AUClast)  interval #> 62                                               AUCinf,obs  interval #> 63                                              AUCinf,pred  interval #> 64                                             AUMC,inf,obs  interval #> 65                                            AUMC,inf,pred  interval #> 66               AUCint (based on AUCinf,obs extrapolation)  interval #> 67   AUCint (based on AUCinf,obs extrapolation, dose-aware)  interval #> 68              AUCint (based on AUCinf,pred extrapolation)  interval #> 69  AUCint (based on AUCinf,pred extrapolation, dose-aware)  interval #> 70                                   AUCinf,obs (IV dosing)  interval #> 71                                  AUCinf,pred (IV dosing)  interval #> 72                            AUCbext (based on AUCinf,obs)  interval #> 73                           AUCbext (based on AUCinf,pred)  interval #> 74                            AUCpext (based on AUCinf,obs)  interval #> 75                           AUCpext (based on AUCinf,pred)  interval #> 76                                 CL (based on AUCinf,obs)  interval #> 77                                CL (based on AUCinf,pred)  interval #> 78                                MRT (based on AUCinf,obs)  interval #> 79                               MRT (based on AUCinf,pred)  interval #> 80                 MRT (for IV dosing, based on AUCinf,obs)  interval #> 81                MRT (for IV dosing, based on AUCinf,pred)  interval #> 82           MRT (for multiple dosing, based on AUCinf,obs)  interval #> 83          MRT (for multiple dosing, based on AUCinf,pred)  interval #> 84                                 Vz (based on AUCinf,obs)  interval #> 85                                Vz (based on AUCinf,pred)  interval #> 86                                Vss (based on AUCinf,obs)  interval #> 87                               Vss (based on AUCinf,pred)  interval #> 88                 Vss (for IV dosing, based on AUCinf,obs)  interval #> 89                Vss (for IV dosing, based on AUCinf,pred)  interval #> 90              Vss (for multiple-dose, based on Clast,obs)  interval #> 91             Vss (for multiple-dose, based on Clast,pred)  interval #> 92                                  Vd (based on Clast,obs)  interval #> 93                                 Vd (based on Clast,pred)  interval #> 94                   Effective half-life (based on MRT,obs)  interval #> 95                  Effective half-life (based on MRT,pred)  interval #> 96    Effective half-life (for IV dosing, based on MRT,obs)  interval #> 97   Effective half-life (for IV dosing, based on MRT,pred)  interval #> 98                                Kel (based on AUCinf,obs)  interval #> 99                               Kel (based on AUCinf,pred)  interval #> 100                Kel (for IV dosing, based on AUCinf,obs)  interval #> 101               Kel (for IV dosing, based on AUCinf,pred)  interval #> 102                               AUClast (dose-normalized)  interval #> 103                                AUCall (dose-normalized)  interval #> 104                            AUCinf,obs (dose-normalized)  interval #> 105                           AUCinf,pred (dose-normalized)  interval #> 106                             AUMC,last (dose-normalized)  interval #> 107                              AUMC,all (dose-normalized)  interval #> 108                          AUMC,inf,obs (dose-normalized)  interval #> 109                         AUMC,inf,pred (dose-normalized)  interval #> 110                                  Cmax (dose-normalized)  interval #> 111                                  Cmin (dose-normalized)  interval #> 112                                 Clast (dose-normalized)  interval #> 113                            Clast,pred (dose-normalized)  interval #> 114                                   Cav (dose-normalized)  interval #> 115                               Ctrough (dose-normalized)  interval #>                                                                                                                                                                                                                                                                                                                                                              desc #> 1                                                                                                                                                                                                                                                                                                                                   Starting time of the interval #> 2                                                                                                                                                                                                                                                                                                              Ending time of the interval (potentially infinity) #> 3                                                                                                                                                                                                                      The area under the concentration time curve from the beginning of the interval to the last concentration above the limit of quantification #> 4                                                                                                     The area under the concentration time curve from the beginning of the interval to the last concentration above the limit of quantification plus the triangle from that last concentration to 0 at the first concentration below the limit of quantification #> 5                                                                                                                                                                                                               The area under the concentration time moment curve from the beginning of the interval to the last concentration above the limit of quantification #> 6                                                                                The area under the concentration time moment curve from the beginning of the interval to the last concentration above the limit of quantification plus the moment of the triangle from that last concentration to 0 at the first concentration below the limit of quantification #> 7                                                                                                                                                                                                                                  The area under the concentration time curve in the interval extrapolating from Tlast to infinity with zeros (matching AUClast) #> 8                                                                                                                                                                    The area under the concentration time curve in the interval extrapolating from Tlast to infinity with zeros (matching AUClast) with dose-aware interpolation/extrapolation of concentrations #> 9                                                                                                                                                                           The area under the concentration time curve in the interval extrapolating from Tlast to infinity with the triangle from Tlast to the next point and zero thereafter (matching AUCall) #> 10                                                                                                            The area under the concentration time curve in the interval extrapolating from Tlast to infinity with the triangle from Tlast to the next point and zero thereafter (matching AUCall) with dose-aware interpolation/extrapolation of concentrations #> 11                                                                                                                                                                                                                                                                                                                        Initial concentration after an IV bolus #> 12                                                                                                                                                                                                                                                                                                                                 Maximum observed concentration #> 13                                                                                                                                                                                                                                                                                                                                 Minimum observed concentration #> 14                                                                                                                                                                                                                                                                                                                     Time of the maximum observed concentration #> 15                                                                                                                                                                                                                                                                                      Time of the last concentration observed above the limit of quantification #> 16                                                                                                                                                                                                                                                                                              Time of the first concentration above the limit of quantification #> 17                                                                                                                                                                                                                                                                                              The last concentration observed above the limit of quantification #> 18                                                                                                                                                                                                                                                                                                       Clearance or observed oral clearance calculated to Clast #> 19                                                                                                                                                                                                                                                                                                    Clearance or observed oral clearance calculated with AUCall #> 20                                                                                                                                                                                                                                                                                                                    Bioavailability or relative bioavailability #> 21                                                                                                                                                                                                                                                                                       The mean residence time to the last observed concentration above the LOQ #> 22                                                                                                                                                                                                                                                        The mean residence time to the last observed concentration above the LOQ correcting for dosing duration #> 23                                                                                                                                                                                                                                                                                              The steady-state volume of distribution calculating through Tlast #> 24                                                                                                                                                                                                                                                                    The steady-state volume of distribution with intravenous infusion calculating through Tlast #> 25                                                                                                                                                                                                                                                                                                                   The average concentration during an interval #> 26                                                                                                                                                                                                                                                                                                                     The trough (end of interval) concentration #> 27                                                                                                                                                                                                                                                                                                                                      The predose concentration #> 28                                                                                                                                                                                                                                                                                                                                Peak-to-Trough ratio (fraction) #> 29                                                                                                                                                                                                                                                                                                                                                       Lag time #> 30                                                                                                                                                                                                                                                                                                                                          Degree of fluctuation #> 31                                                                                                                                                                                                                                                                                                                                         Swing relative to Cmin #> 32                                                                                                                                                                                                                                                                                                                           Concentration at the end of infusion #> 33  The area under the concentration time the beginning of the interval to the last concentration above the limit of quantification plus the triangle from that last concentration to 0 at the first concentration below the limit of quantification, with a concentration subtracted from all concentrations and values below zero after subtraction set to zero #> 34  The area under the concentration time the beginning of the interval to the last concentration above the limit of quantification plus the triangle from that last concentration to 0 at the first concentration below the limit of quantification, with a concentration subtracted from all concentrations and values below zero after subtraction set to zero #> 35                                                                                                                                                                                                                                                                                                            The amount excreted (typically into urine or feces) #> 36                                                                                                                                                                                                                                                                                                                   The renal clearance calculated using AUClast #> 37                                                                                                                                                                                                                                                                                                                The renal clearance calculated using AUCinf,obs #> 38                                                                                                                                                                                                                                                                                                               The renal clearance calculated using AUCinf,pred #> 39                                                                                                                                                                                                                                                                                                                              The fraction of the dose excreted #> 40                                                                                                                                                                                             For sparse PK sampling, the area under the concentration time curve from the beginning of the interval to the last concentration above the limit of quantification #> 41                                                                                                                                                                                                                                                                                                                               Time above a given concentration #> 42                                                                                                                                                                                                                                                                    The AUClast calculated with back-extrapolation for intravenous dosing using extrapolated C0 #> 43                                                                                                                                                                                                                                                                     The AUCall calculated with back-extrapolation for intravenous dosing using extrapolated C0 #> 44                                                                                                                                                                                                                                                                The AUCint,last calculated with back-extrapolation for intravenous dosing using extrapolated C0 #> 45                                                                                                                                                                                                                                                                 The AUCint,all calculated with back-extrapolation for intravenous dosing using extrapolated C0 #> 46                                                                                                                                                                                                                                                                                         The back-extrapolation percent for intravenous dosing based on AUClast #> 47                                                                                                                                                                                                                                                                                          The back-extrapolation percent for intravenous dosing based on AUCall #> 48                                                                                                                                                                                                                                                                                     The back-extrapolation percent for intravenous dosing based on AUCint,last #> 49                                                                                                                                                                                                                                                                                      The back-extrapolation percent for intravenous dosing based on AUCint,all #> 50                                                                                                                                                                                                                                                                                                                                       The (terminal) half-life #> 51                                                                                                                                                                                                                                                                                                                     The r^2 value of the half-life calculation #> 52                                                                                                                                                                                                                                                                                                            The adjusted r^2 value of the half-life calculation #> 53                                                                                                                                                                                                                                                                                                                 The elimination rate of the terminal half-life #> 54                                                                                                                                                                                                                                                                                                     The first time point used for the calculation of half-life #> 55                                                                                                                                                                                                                                                                                                     The number of points used for the calculation of half-life #> 56                                                                                                                                                                                                                                                                                                       The concentration at Tlast as predicted by the half-life #> 57                                                                                                                                                                                                                                                                                      The ratio of the half-life to the duration used for half-life calculation #> 58                                                                                                                                                                                                                                                                                                       The effective half-life (as determined from the MRTlast) #> 59                                                                                                                                                                                                                                                                                           The effective half-life (as determined from the intravenous MRTlast) #> 60                                                                                                                                                                                                                                                                                                    Elimination rate (as calculated from the MRT using AUClast) #> 61                                                                                                                                                                                                                                                                                                  Elimination rate (as calculated from the intravenous MRTlast) #> 62                                                                                                                                                                                                              The area under the concentration time curve from the beginning of the interval to infinity with extrapolation to infinity from the observed Clast #> 63                                                                                                                                                                                                             The area under the concentration time curve from the beginning of the interval to infinity with extrapolation to infinity from the predicted Clast #> 64                                                                                                                                                                                                       The area under the concentration time moment curve from the beginning of the interval to infinity with extrapolation to infinity from the observed Clast #> 65                                                                                                                                                                                                      The area under the concentration time moment curve from the beginning of the interval to infinity with extrapolation to infinity from the predicted Clast #> 66                                                                                                                                                                                                                                 The area under the concentration time curve in the interval extrapolating from Tlast to infinity with zeros (matching AUClast) #> 67                                                                                                                                                                   The area under the concentration time curve in the interval extrapolating from Tlast to infinity with zeros (matching AUClast) with dose-aware interpolation/extrapolation of concentrations #> 68                                                                                                                                                                          The area under the concentration time curve in the interval extrapolating from Tlast to infinity with the triangle from Tlast to the next point and zero thereafter (matching AUCall) #> 69                                                                                                            The area under the concentration time curve in the interval extrapolating from Tlast to infinity with the triangle from Tlast to the next point and zero thereafter (matching AUCall) with dose-aware interpolation/extrapolation of concentrations #> 70                                                                                                                                                                                                                                                                 The AUCinf,obs calculated with back-extrapolation for intravenous dosing using extrapolated C0 #> 71                                                                                                                                                                                                                                                                           The  calculated with back-extrapolation for intravenous dosing using extrapolated C0 #> 72                                                                                                                                                                                                                                                                                      The back-extrapolation percent for intravenous dosing based on AUCinf,obs #> 73                                                                                                                                                                                                                                                                                     The back-extrapolation percent for intravenous dosing based on AUCinf,pred #> 74                                                                                                                                                                                                                                                                      Percent of the AUCinf that is extrapolated after Tlast calculated from the observed Clast #> 75                                                                                                                                                                                                                                                                     Percent of the AUCinf that is extrapolated after Tlast calculated from the predicted Clast #> 76                                                                                                                                                                                                                                                                                            Clearance or observed oral clearance calculated with observed Clast #> 77                                                                                                                                                                                                                                                                                           Clearance or observed oral clearance calculated with predicted Clast #> 78                                                                                                                                                                                                                                                                                                       The mean residence time to infinity using observed Clast #> 79                                                                                                                                                                                                                                                                                                      The mean residence time to infinity using predicted Clast #> 80                                                                                                                                                                                                                                                                        The mean residence time to infinity using observed Clast correcting for dosing duration #> 81                                                                                                                                                                                                                                                                       The mean residence time to infinity using predicted Clast correcting for dosing duration #> 82                                                                                                                                                                                                                                                                       The mean residence time with multiple dosing and nonlinear kinetics using observed Clast #> 83                                                                                                                                                                                                                                                                      The mean residence time with multiple dosing and nonlinear kinetics using predicted Clast #> 84                                                                                                                                                                                                                                                                                                       The terminal volume of distribution using observed Clast #> 85                                                                                                                                                                                                                                                                                                      The terminal volume of distribution using predicted Clast #> 86                                                                                                                                                                                                                                                                                                   The steady-state volume of distribution using observed Clast #> 87                                                                                                                                                                                                                                                                                                  The steady-state volume of distribution using predicted Clast #> 88                                                                                                                                                                                                                                                                         The steady-state volume of distribution with intravenous infusion using observed Clast #> 89                                                                                                                                                                                                                                                                        The steady-state volume of distribution with intravenous infusion using predicted Clast #> 90                                                                                                                                                                                                                                                                  The steady-state volume of distribution for nonlinear multiple-dose data using observed Clast #> 91                                                                                                                                                                                                                                                                 The steady-state volume of distribution for nonlinear multiple-dose data using predicted Clast #> 92                                                                                                                                                                                                                                                                                        Apparent observed volume of distribution calculated with observed Clast #> 93                                                                                                                                                                                                                                                                                       Apparent observed volume of distribution calculated with predicted Clast #> 94                                                                                                                                                                                                                                                                                                        The effective half-life (as determined from the MRTobs) #> 95                                                                                                                                                                                                                                                                                                       The effective half-life (as determined from the MRTpred) #> 96                                                                                                                                                                                                                                                                                            The effective half-life (as determined from the intravenous MRTobs) #> 97                                                                                                                                                                                                                                                                                           The effective half-life (as determined from the intravenous MRTpred) #> 98                                                                                                                                                                                                                                                                                              Elimination rate (as calculated from the MRT with observed Clast) #> 99                                                                                                                                                                                                                                                                                             Elimination rate (as calculated from the MRT with predicted Clast) #> 100                                                                                                                                                                                                                                                                                                  Elimination rate (as calculated from the intravenous MRTobs) #> 101                                                                                                                                                                                                                                                                                                 Elimination rate (as calculated from the intravenous MRTpred) #> 102                                                                                                                                                                                                                                                                                                                                       Dose normalized auclast #> 103                                                                                                                                                                                                                                                                                                                                        Dose normalized aucall #> 104                                                                                                                                                                                                                                                                                                                                    Dose normalized aucinf.obs #> 105                                                                                                                                                                                                                                                                                                                                   Dose normalized aucinf.pred #> 106                                                                                                                                                                                                                                                                                                                                      Dose normalized aumclast #> 107                                                                                                                                                                                                                                                                                                                                       Dose normalized aumcall #> 108                                                                                                                                                                                                                                                                                                                                   Dose normalized aumcinf.obs #> 109                                                                                                                                                                                                                                                                                                                                  Dose normalized aumcinf.pred #> 110                                                                                                                                                                                                                                                                                                                                          Dose normalized cmax #> 111                                                                                                                                                                                                                                                                                                                                          Dose normalized cmin #> 112                                                                                                                                                                                                                                                                                                                                     Dose normalized clast.obs #> 113                                                                                                                                                                                                                                                                                                                                    Dose normalized clast.pred #> 114                                                                                                                                                                                                                                                                                                                                           Dose normalized cav #> 115                                                                                                                                                                                                                                                                                                                                       Dose normalized ctrough #>"},{"path":"/reference/NCA_fetch_ana_ds.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetch Analysis Dataset — NCA_fetch_ana_ds","title":"Fetch Analysis Dataset — NCA_fetch_ana_ds","text":"Fetches dataset used specified analysis","code":""},{"path":"/reference/NCA_fetch_ana_ds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetch Analysis Dataset — NCA_fetch_ana_ds","text":"","code":"NCA_fetch_ana_ds(state, current_ana)"},{"path":"/reference/NCA_fetch_ana_ds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetch Analysis Dataset — NCA_fetch_ana_ds","text":"state NCA state NCA_fetch_state() current_ana Current value analysis","code":""},{"path":"/reference/NCA_fetch_ana_ds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetch Analysis Dataset — NCA_fetch_ana_ds","text":"Dataset ds field FM_fetch_ds()","code":""},{"path":"/reference/NCA_fetch_ana_ds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fetch Analysis Dataset — NCA_fetch_ana_ds","text":"","code":"library(ruminate) # Module IDs                                                                    id     = \"NCA\"                                                                  id_UD  = \"UD\"                                                                   id_DW  = \"DW\"                                                                   id_ASM = \"ASM\"                                                                  # We need session and input variables to be define                               sess_res = NCA_test_mksession(session=list(),                                        id     = id,                                                                    id_UD  = id_UD,                                                                 id_DW  = id_DW,                                                                 id_ASM = id_ASM,       full_session=FALSE) #> → UD: including file #> → UD:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → UD:   dest:   file.path(\"config\",\"report.docx\") #> → UD: including file #> → UD:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → UD:   dest:   file.path(\"config\",\"report.pptx\") #> → UD: including file #> → UD:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → UD:   dest:   file.path(\"config\",\"report.yaml\") #> → UD: State initialized #> → UD: module checksum updated:897d952fecbc804999396a96f9df4b20 #> → DW: including file #> → DW:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → DW:   dest:   file.path(\"config\",\"report.docx\") #> → DW: including file #> → DW:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → DW:   dest:   file.path(\"config\",\"report.pptx\") #> → DW: including file #> → DW:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → DW:   dest:   file.path(\"config\",\"report.yaml\") #> → DW: State initialized #> → DW: module checksum updated:5b0f0b05ee3ac7336a74c564bb6efdad #> → DW: module checksum updated:65801ab4b3c645aabf7edf91fc2f0d2c #> → DW: module checksum updated:7fb2dd3b16b1780c4c24f64d658dd7c7 #> → DW: module checksum updated:5ab04ea00be44c0040695a4ed6243c90 #> → DW: module checksum updated:960db107cfe9db93578f79f0ae6283e2 #> → DW: module checksum updated:f0b5d122dcb04f207cba233253b61c4b #> → DW: module checksum updated:189ed77a84bd9fcdd7b26abff8bea34a #> → DW: module checksum updated:669ec77d50652669cd3fcfd949469b37 #> → DW: module checksum updated:dd6cafa0be3b6b195d230a11e9f07f9f #> → DW: module checksum updated:5c2022c376ca8f56b839347156559890 #> → DW: module checksum updated:43640500a04674debd8e2399056c384a #> → DW: module checksum updated:f81c45ac1ef4e7b43153d8c8eaf7aed6 #> → DW: module checksum updated:207cde891d98e20c4afbb7fb5fb0aba2 #> → DW: module checksum updated:0a673e81c01cbbf33533dd65d6baf9e3 #> → DW: module checksum updated:af3f3aefd0115ed9dfdd4d6ef9d5182f #> → DW: module checksum updated:b0ccaee21e859322df0bf79d00c4b347 #> → DW: module checksum updated:2d3d6e9e38be6dea813b2d4d679e34b5 #> → DW: module checksum updated:2b60dd49b48a4e65200dc7241ad270e3 #> → DW: module checksum updated:3c92f397181a4fcdbdf2bd7dd7425e77 #> → DW: module checksum updated:92b81d7573def603649370b87c123b55 #> → DW: module checksum updated:9210264aabc0339e832b0c6bcfda32af #> → DW: module checksum updated:fe62fde1e7e738a1a35c479de9d5007b #> → DW: module checksum updated:ff3edcd4c1e58c96ea2707361916ffbc #> → DW: module checksum updated:b6cdfcef0432c5d9b1fa2bd46122ffa2 #> → DW: module checksum updated:4fa4283f1fd8fd6cf6e6e7df0669723a #> → DW: module checksum updated:cf3e139cef554b2d09dca619ee6aff41 #> → DW: module checksum updated:a9154d91a9e4b5d21f9585a6f68dd083 #> → DW: module checksum updated:4b5c6ad66658ddfa92d10ae1b0b7afa8 #> → DW: module checksum updated:591ac875a490b66a1fa7f4e7d4ba1c62 #> → DW: module checksum updated:afa3ca309cc3e6a48f542f4e8eadd54a #> → DW: module checksum updated:5c918dd4f53a4f1e56115abb09c4f332 #> → DW: module checksum updated:159ddf8c8cd26b178dfda5434bbecfa1 #> → DW: module checksum updated:8bb3c97e700998f2f73353189bd07831 #> → DW: module checksum updated:a1eceffec3ff7d9f9961683b3d07088b #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → NCA:   dest:   file.path(\"config\",\"report.docx\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → NCA:   dest:   file.path(\"config\",\"report.pptx\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → NCA:   dest:   file.path(\"config\",\"report.yaml\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → NCA:   dest:   file.path(\"config\",\"report.docx\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → NCA:   dest:   file.path(\"config\",\"report.pptx\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → NCA:   dest:   file.path(\"config\",\"report.yaml\") #> → NCA: State initialized #> → NCA: State initialized #> → NCA: loading analysis scenario: sd_iv #> → NCA: NCA_add_int: append #> → NCA: NCA_add_int: append #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> → NCA: module checksum updated:41f1166d984424c1fe5a01c85fd88a89                                                                                 # Extracting the session and input variables                                    session      = sess_res$session                                                 input        = sess_res$input                                                   react_state  = list()                                                                                                                                           # We also need configuration files                                              FM_yaml_file  = system.file(package = \"formods\",  \"templates\", \"formods.yaml\")  MOD_yaml_file = system.file(package = \"ruminate\", \"templates\", \"NCA.yaml\")                                                                                      # Getting the current module state                                              state = NCA_fetch_state(id             = id,                                                           input           = input,                                                        session         = session,                                                      FM_yaml_file    = FM_yaml_file,                                                 MOD_yaml_file   = MOD_yaml_file,                                                id_ASM          = id_ASM,                                                       id_UD           = id_UD,                                                        id_DW           = id_DW,                                                        react_state     = react_state)                                                                                                           # Pulls out the active analysis                                                 current_ana = NCA_fetch_current_ana(state)  # This will get the dataset associated with this analysis ds = NCA_fetch_ana_ds(state, current_ana)  # After making changes you can update those in the state state = NCA_set_current_ana(state, current_ana)  # You can use this to check the current analysis current_ana = NCA_process_current_ana(state) #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion  # This will pull out the code for the module fc_res = NCA_fetch_code(state)  # This will use patterns defined for the site to detect # columns. In this example we are detecting the id column: id_col = NCA_find_col(   patterns = state[[\"MC\"]][[\"detect_col\"]][[\"id\"]],   dscols   = names(ds$DS)) #> Warning: Unknown or uninitialised column: `DS`.  # This creates a new analysis state = NCA_new_ana(state)"},{"path":"/reference/NCA_fetch_ana_pknca.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetch PKNCA Results Object — NCA_fetch_ana_pknca","title":"Fetch PKNCA Results Object — NCA_fetch_ana_pknca","text":"Fetches PKNCA output specified analysis","code":""},{"path":"/reference/NCA_fetch_ana_pknca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetch PKNCA Results Object — NCA_fetch_ana_pknca","text":"","code":"NCA_fetch_ana_pknca(state, current_ana)"},{"path":"/reference/NCA_fetch_ana_pknca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetch PKNCA Results Object — NCA_fetch_ana_pknca","text":"state NCA state NCA_fetch_state() current_ana Current value analysis","code":""},{"path":"/reference/NCA_fetch_ana_pknca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetch PKNCA Results Object — NCA_fetch_ana_pknca","text":"Dataset ds field FM_fetch_ds()","code":""},{"path":"/reference/NCA_fetch_ana_pknca.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fetch PKNCA Results Object — NCA_fetch_ana_pknca","text":"","code":"library(ruminate) # Module IDs                                                                    id     = \"NCA\"                                                                  id_UD  = \"UD\"                                                                   id_DW  = \"DW\"                                                                   id_ASM = \"ASM\"                                                                  # We need session and input variables to be define                               sess_res = NCA_test_mksession(session=list(),                                        id     = id,                                                                    id_UD  = id_UD,                                                                 id_DW  = id_DW,                                                                 id_ASM = id_ASM,       full_session=FALSE) #> → UD: including file #> → UD:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → UD:   dest:   file.path(\"config\",\"report.docx\") #> → UD: including file #> → UD:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → UD:   dest:   file.path(\"config\",\"report.pptx\") #> → UD: including file #> → UD:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → UD:   dest:   file.path(\"config\",\"report.yaml\") #> → UD: State initialized #> → UD: module checksum updated:897d952fecbc804999396a96f9df4b20 #> → DW: including file #> → DW:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → DW:   dest:   file.path(\"config\",\"report.docx\") #> → DW: including file #> → DW:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → DW:   dest:   file.path(\"config\",\"report.pptx\") #> → DW: including file #> → DW:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → DW:   dest:   file.path(\"config\",\"report.yaml\") #> → DW: State initialized #> → DW: module checksum updated:5b0f0b05ee3ac7336a74c564bb6efdad #> → DW: module checksum updated:65801ab4b3c645aabf7edf91fc2f0d2c #> → DW: module checksum updated:7fb2dd3b16b1780c4c24f64d658dd7c7 #> → DW: module checksum updated:5ab04ea00be44c0040695a4ed6243c90 #> → DW: module checksum updated:960db107cfe9db93578f79f0ae6283e2 #> → DW: module checksum updated:f0b5d122dcb04f207cba233253b61c4b #> → DW: module checksum updated:189ed77a84bd9fcdd7b26abff8bea34a #> → DW: module checksum updated:669ec77d50652669cd3fcfd949469b37 #> → DW: module checksum updated:dd6cafa0be3b6b195d230a11e9f07f9f #> → DW: module checksum updated:5c2022c376ca8f56b839347156559890 #> → DW: module checksum updated:43640500a04674debd8e2399056c384a #> → DW: module checksum updated:f81c45ac1ef4e7b43153d8c8eaf7aed6 #> → DW: module checksum updated:207cde891d98e20c4afbb7fb5fb0aba2 #> → DW: module checksum updated:0a673e81c01cbbf33533dd65d6baf9e3 #> → DW: module checksum updated:af3f3aefd0115ed9dfdd4d6ef9d5182f #> → DW: module checksum updated:b0ccaee21e859322df0bf79d00c4b347 #> → DW: module checksum updated:2d3d6e9e38be6dea813b2d4d679e34b5 #> → DW: module checksum updated:2b60dd49b48a4e65200dc7241ad270e3 #> → DW: module checksum updated:3c92f397181a4fcdbdf2bd7dd7425e77 #> → DW: module checksum updated:92b81d7573def603649370b87c123b55 #> → DW: module checksum updated:9210264aabc0339e832b0c6bcfda32af #> → DW: module checksum updated:fe62fde1e7e738a1a35c479de9d5007b #> → DW: module checksum updated:ff3edcd4c1e58c96ea2707361916ffbc #> → DW: module checksum updated:b6cdfcef0432c5d9b1fa2bd46122ffa2 #> → DW: module checksum updated:4fa4283f1fd8fd6cf6e6e7df0669723a #> → DW: module checksum updated:cf3e139cef554b2d09dca619ee6aff41 #> → DW: module checksum updated:a9154d91a9e4b5d21f9585a6f68dd083 #> → DW: module checksum updated:4b5c6ad66658ddfa92d10ae1b0b7afa8 #> → DW: module checksum updated:591ac875a490b66a1fa7f4e7d4ba1c62 #> → DW: module checksum updated:afa3ca309cc3e6a48f542f4e8eadd54a #> → DW: module checksum updated:5c918dd4f53a4f1e56115abb09c4f332 #> → DW: module checksum updated:159ddf8c8cd26b178dfda5434bbecfa1 #> → DW: module checksum updated:8bb3c97e700998f2f73353189bd07831 #> → DW: module checksum updated:a1eceffec3ff7d9f9961683b3d07088b #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → NCA:   dest:   file.path(\"config\",\"report.docx\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → NCA:   dest:   file.path(\"config\",\"report.pptx\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → NCA:   dest:   file.path(\"config\",\"report.yaml\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → NCA:   dest:   file.path(\"config\",\"report.docx\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → NCA:   dest:   file.path(\"config\",\"report.pptx\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → NCA:   dest:   file.path(\"config\",\"report.yaml\") #> → NCA: State initialized #> → NCA: State initialized #> → NCA: loading analysis scenario: sd_iv #> → NCA: NCA_add_int: append #> → NCA: NCA_add_int: append #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> → NCA: module checksum updated:f4df80468cc83ff1d704d1b85d5bbbea                                                                                 # Extracting the session and input variables                                    session      = sess_res$session                                                 input        = sess_res$input                                                   react_state  = list()                                                                                                                                           # We also need configuration files                                              FM_yaml_file  = system.file(package = \"formods\",  \"templates\", \"formods.yaml\")  MOD_yaml_file = system.file(package = \"ruminate\", \"templates\", \"NCA.yaml\")                                                                                      # Getting the current module state                                              state = NCA_fetch_state(id             = id,                                                           input           = input,                                                        session         = session,                                                      FM_yaml_file    = FM_yaml_file,                                                 MOD_yaml_file   = MOD_yaml_file,                                                id_ASM          = id_ASM,                                                       id_UD           = id_UD,                                                        id_DW           = id_DW,                                                        react_state     = react_state)                                                                                                           # Pulls out the active analysis                                                 current_ana = NCA_fetch_current_ana(state)  # This will get the dataset associated with this analysis ds = NCA_fetch_ana_ds(state, current_ana)  # After making changes you can update those in the state state = NCA_set_current_ana(state, current_ana)  # You can use this to check the current analysis current_ana = NCA_process_current_ana(state) #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion  # This will pull out the code for the module fc_res = NCA_fetch_code(state)  # This will use patterns defined for the site to detect # columns. In this example we are detecting the id column: id_col = NCA_find_col(   patterns = state[[\"MC\"]][[\"detect_col\"]][[\"id\"]],   dscols   = names(ds$DS)) #> Warning: Unknown or uninitialised column: `DS`.  # This creates a new analysis state = NCA_new_ana(state)"},{"path":"/reference/NCA_fetch_code.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetch Module Code — NCA_fetch_code","title":"Fetch Module Code — NCA_fetch_code","text":"Fetches code generate results seen app","code":""},{"path":"/reference/NCA_fetch_code.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetch Module Code — NCA_fetch_code","text":"","code":"NCA_fetch_code(state)"},{"path":"/reference/NCA_fetch_code.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetch Module Code — NCA_fetch_code","text":"state NCA state NCA_fetch_state()","code":""},{"path":"/reference/NCA_fetch_code.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetch Module Code — NCA_fetch_code","text":"Character object vector lines code","code":""},{"path":"/reference/NCA_fetch_code.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fetch Module Code — NCA_fetch_code","text":"","code":"library(ruminate) # Module IDs                                                                    id     = \"NCA\"                                                                  id_UD  = \"UD\"                                                                   id_DW  = \"DW\"                                                                   id_ASM = \"ASM\"                                                                  # We need session and input variables to be define                               sess_res = NCA_test_mksession(session=list(),                                        id     = id,                                                                    id_UD  = id_UD,                                                                 id_DW  = id_DW,                                                                 id_ASM = id_ASM,       full_session=FALSE) #> → UD: including file #> → UD:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → UD:   dest:   file.path(\"config\",\"report.docx\") #> → UD: including file #> → UD:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → UD:   dest:   file.path(\"config\",\"report.pptx\") #> → UD: including file #> → UD:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → UD:   dest:   file.path(\"config\",\"report.yaml\") #> → UD: State initialized #> → UD: module checksum updated:897d952fecbc804999396a96f9df4b20 #> → DW: including file #> → DW:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → DW:   dest:   file.path(\"config\",\"report.docx\") #> → DW: including file #> → DW:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → DW:   dest:   file.path(\"config\",\"report.pptx\") #> → DW: including file #> → DW:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → DW:   dest:   file.path(\"config\",\"report.yaml\") #> → DW: State initialized #> → DW: module checksum updated:5b0f0b05ee3ac7336a74c564bb6efdad #> → DW: module checksum updated:65801ab4b3c645aabf7edf91fc2f0d2c #> → DW: module checksum updated:7fb2dd3b16b1780c4c24f64d658dd7c7 #> → DW: module checksum updated:5ab04ea00be44c0040695a4ed6243c90 #> → DW: module checksum updated:960db107cfe9db93578f79f0ae6283e2 #> → DW: module checksum updated:f0b5d122dcb04f207cba233253b61c4b #> → DW: module checksum updated:189ed77a84bd9fcdd7b26abff8bea34a #> → DW: module checksum updated:669ec77d50652669cd3fcfd949469b37 #> → DW: module checksum updated:dd6cafa0be3b6b195d230a11e9f07f9f #> → DW: module checksum updated:5c2022c376ca8f56b839347156559890 #> → DW: module checksum updated:43640500a04674debd8e2399056c384a #> → DW: module checksum updated:f81c45ac1ef4e7b43153d8c8eaf7aed6 #> → DW: module checksum updated:207cde891d98e20c4afbb7fb5fb0aba2 #> → DW: module checksum updated:0a673e81c01cbbf33533dd65d6baf9e3 #> → DW: module checksum updated:af3f3aefd0115ed9dfdd4d6ef9d5182f #> → DW: module checksum updated:b0ccaee21e859322df0bf79d00c4b347 #> → DW: module checksum updated:2d3d6e9e38be6dea813b2d4d679e34b5 #> → DW: module checksum updated:2b60dd49b48a4e65200dc7241ad270e3 #> → DW: module checksum updated:3c92f397181a4fcdbdf2bd7dd7425e77 #> → DW: module checksum updated:92b81d7573def603649370b87c123b55 #> → DW: module checksum updated:9210264aabc0339e832b0c6bcfda32af #> → DW: module checksum updated:fe62fde1e7e738a1a35c479de9d5007b #> → DW: module checksum updated:ff3edcd4c1e58c96ea2707361916ffbc #> → DW: module checksum updated:b6cdfcef0432c5d9b1fa2bd46122ffa2 #> → DW: module checksum updated:4fa4283f1fd8fd6cf6e6e7df0669723a #> → DW: module checksum updated:cf3e139cef554b2d09dca619ee6aff41 #> → DW: module checksum updated:a9154d91a9e4b5d21f9585a6f68dd083 #> → DW: module checksum updated:4b5c6ad66658ddfa92d10ae1b0b7afa8 #> → DW: module checksum updated:591ac875a490b66a1fa7f4e7d4ba1c62 #> → DW: module checksum updated:afa3ca309cc3e6a48f542f4e8eadd54a #> → DW: module checksum updated:5c918dd4f53a4f1e56115abb09c4f332 #> → DW: module checksum updated:159ddf8c8cd26b178dfda5434bbecfa1 #> → DW: module checksum updated:8bb3c97e700998f2f73353189bd07831 #> → DW: module checksum updated:a1eceffec3ff7d9f9961683b3d07088b #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → NCA:   dest:   file.path(\"config\",\"report.docx\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → NCA:   dest:   file.path(\"config\",\"report.pptx\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → NCA:   dest:   file.path(\"config\",\"report.yaml\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → NCA:   dest:   file.path(\"config\",\"report.docx\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → NCA:   dest:   file.path(\"config\",\"report.pptx\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → NCA:   dest:   file.path(\"config\",\"report.yaml\") #> → NCA: State initialized #> → NCA: State initialized #> → NCA: loading analysis scenario: sd_iv #> → NCA: NCA_add_int: append #> → NCA: NCA_add_int: append #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> → NCA: module checksum updated:64a0f2e2f1adb9f80994c6c0818de864                                                                                 # Extracting the session and input variables                                    session      = sess_res$session                                                 input        = sess_res$input                                                   react_state  = list()                                                                                                                                           # We also need configuration files                                              FM_yaml_file  = system.file(package = \"formods\",  \"templates\", \"formods.yaml\")  MOD_yaml_file = system.file(package = \"ruminate\", \"templates\", \"NCA.yaml\")                                                                                      # Getting the current module state                                              state = NCA_fetch_state(id             = id,                                                           input           = input,                                                        session         = session,                                                      FM_yaml_file    = FM_yaml_file,                                                 MOD_yaml_file   = MOD_yaml_file,                                                id_ASM          = id_ASM,                                                       id_UD           = id_UD,                                                        id_DW           = id_DW,                                                        react_state     = react_state)                                                                                                           # Pulls out the active analysis                                                 current_ana = NCA_fetch_current_ana(state)  # This will get the dataset associated with this analysis ds = NCA_fetch_ana_ds(state, current_ana)  # After making changes you can update those in the state state = NCA_set_current_ana(state, current_ana)  # You can use this to check the current analysis current_ana = NCA_process_current_ana(state) #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion  # This will pull out the code for the module fc_res = NCA_fetch_code(state)  # This will use patterns defined for the site to detect # columns. In this example we are detecting the id column: id_col = NCA_find_col(   patterns = state[[\"MC\"]][[\"detect_col\"]][[\"id\"]],   dscols   = names(ds$DS)) #> Warning: Unknown or uninitialised column: `DS`.  # This creates a new analysis state = NCA_new_ana(state)"},{"path":"/reference/NCA_fetch_current_ana.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetches Current Analysis — NCA_fetch_current_ana","title":"Fetches Current Analysis — NCA_fetch_current_ana","text":"Takes NCA state returns current active analysis","code":""},{"path":"/reference/NCA_fetch_current_ana.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetches Current Analysis — NCA_fetch_current_ana","text":"","code":"NCA_fetch_current_ana(state)"},{"path":"/reference/NCA_fetch_current_ana.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetches Current Analysis — NCA_fetch_current_ana","text":"state NCA state NCA_fetch_state()","code":""},{"path":"/reference/NCA_fetch_current_ana.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetches Current Analysis — NCA_fetch_current_ana","text":"List containing details current analysis. structure list structure state$NCA$anas output NCA_fetch_state().","code":""},{"path":"/reference/NCA_fetch_current_ana.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fetches Current Analysis — NCA_fetch_current_ana","text":"","code":"library(ruminate) # Module IDs                                                                    id     = \"NCA\"                                                                  id_UD  = \"UD\"                                                                   id_DW  = \"DW\"                                                                   id_ASM = \"ASM\"                                                                  # We need session and input variables to be define                               sess_res = NCA_test_mksession(session=list(),                                        id     = id,                                                                    id_UD  = id_UD,                                                                 id_DW  = id_DW,                                                                 id_ASM = id_ASM,       full_session=FALSE) #> → UD: including file #> → UD:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → UD:   dest:   file.path(\"config\",\"report.docx\") #> → UD: including file #> → UD:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → UD:   dest:   file.path(\"config\",\"report.pptx\") #> → UD: including file #> → UD:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → UD:   dest:   file.path(\"config\",\"report.yaml\") #> → UD: State initialized #> → UD: module checksum updated:897d952fecbc804999396a96f9df4b20 #> → DW: including file #> → DW:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → DW:   dest:   file.path(\"config\",\"report.docx\") #> → DW: including file #> → DW:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → DW:   dest:   file.path(\"config\",\"report.pptx\") #> → DW: including file #> → DW:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → DW:   dest:   file.path(\"config\",\"report.yaml\") #> → DW: State initialized #> → DW: module checksum updated:5b0f0b05ee3ac7336a74c564bb6efdad #> → DW: module checksum updated:65801ab4b3c645aabf7edf91fc2f0d2c #> → DW: module checksum updated:7fb2dd3b16b1780c4c24f64d658dd7c7 #> → DW: module checksum updated:5ab04ea00be44c0040695a4ed6243c90 #> → DW: module checksum updated:960db107cfe9db93578f79f0ae6283e2 #> → DW: module checksum updated:f0b5d122dcb04f207cba233253b61c4b #> → DW: module checksum updated:189ed77a84bd9fcdd7b26abff8bea34a #> → DW: module checksum updated:669ec77d50652669cd3fcfd949469b37 #> → DW: module checksum updated:dd6cafa0be3b6b195d230a11e9f07f9f #> → DW: module checksum updated:5c2022c376ca8f56b839347156559890 #> → DW: module checksum updated:43640500a04674debd8e2399056c384a #> → DW: module checksum updated:f81c45ac1ef4e7b43153d8c8eaf7aed6 #> → DW: module checksum updated:207cde891d98e20c4afbb7fb5fb0aba2 #> → DW: module checksum updated:0a673e81c01cbbf33533dd65d6baf9e3 #> → DW: module checksum updated:af3f3aefd0115ed9dfdd4d6ef9d5182f #> → DW: module checksum updated:b0ccaee21e859322df0bf79d00c4b347 #> → DW: module checksum updated:2d3d6e9e38be6dea813b2d4d679e34b5 #> → DW: module checksum updated:2b60dd49b48a4e65200dc7241ad270e3 #> → DW: module checksum updated:3c92f397181a4fcdbdf2bd7dd7425e77 #> → DW: module checksum updated:92b81d7573def603649370b87c123b55 #> → DW: module checksum updated:9210264aabc0339e832b0c6bcfda32af #> → DW: module checksum updated:fe62fde1e7e738a1a35c479de9d5007b #> → DW: module checksum updated:ff3edcd4c1e58c96ea2707361916ffbc #> → DW: module checksum updated:b6cdfcef0432c5d9b1fa2bd46122ffa2 #> → DW: module checksum updated:4fa4283f1fd8fd6cf6e6e7df0669723a #> → DW: module checksum updated:cf3e139cef554b2d09dca619ee6aff41 #> → DW: module checksum updated:a9154d91a9e4b5d21f9585a6f68dd083 #> → DW: module checksum updated:4b5c6ad66658ddfa92d10ae1b0b7afa8 #> → DW: module checksum updated:591ac875a490b66a1fa7f4e7d4ba1c62 #> → DW: module checksum updated:afa3ca309cc3e6a48f542f4e8eadd54a #> → DW: module checksum updated:5c918dd4f53a4f1e56115abb09c4f332 #> → DW: module checksum updated:159ddf8c8cd26b178dfda5434bbecfa1 #> → DW: module checksum updated:8bb3c97e700998f2f73353189bd07831 #> → DW: module checksum updated:a1eceffec3ff7d9f9961683b3d07088b #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → NCA:   dest:   file.path(\"config\",\"report.docx\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → NCA:   dest:   file.path(\"config\",\"report.pptx\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → NCA:   dest:   file.path(\"config\",\"report.yaml\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → NCA:   dest:   file.path(\"config\",\"report.docx\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → NCA:   dest:   file.path(\"config\",\"report.pptx\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → NCA:   dest:   file.path(\"config\",\"report.yaml\") #> → NCA: State initialized #> → NCA: State initialized #> → NCA: loading analysis scenario: sd_iv #> → NCA: NCA_add_int: append #> → NCA: NCA_add_int: append #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> → NCA: module checksum updated:3a354751294ac69a5b1d71a67eb8abec                                                                                 # Extracting the session and input variables                                    session      = sess_res$session                                                 input        = sess_res$input                                                   react_state  = list()                                                                                                                                           # We also need configuration files                                              FM_yaml_file  = system.file(package = \"formods\",  \"templates\", \"formods.yaml\")  MOD_yaml_file = system.file(package = \"ruminate\", \"templates\", \"NCA.yaml\")                                                                                      # Getting the current module state                                              state = NCA_fetch_state(id             = id,                                                           input           = input,                                                        session         = session,                                                      FM_yaml_file    = FM_yaml_file,                                                 MOD_yaml_file   = MOD_yaml_file,                                                id_ASM          = id_ASM,                                                       id_UD           = id_UD,                                                        id_DW           = id_DW,                                                        react_state     = react_state)                                                                                                           # Pulls out the active analysis                                                 current_ana = NCA_fetch_current_ana(state)  # This will get the dataset associated with this analysis ds = NCA_fetch_ana_ds(state, current_ana)  # After making changes you can update those in the state state = NCA_set_current_ana(state, current_ana)  # You can use this to check the current analysis current_ana = NCA_process_current_ana(state) #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion  # This will pull out the code for the module fc_res = NCA_fetch_code(state)  # This will use patterns defined for the site to detect # columns. In this example we are detecting the id column: id_col = NCA_find_col(   patterns = state[[\"MC\"]][[\"detect_col\"]][[\"id\"]],   dscols   = names(ds$DS)) #> Warning: Unknown or uninitialised column: `DS`.  # This creates a new analysis state = NCA_new_ana(state)"},{"path":"/reference/NCA_fetch_current_obj.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetches the Current Analysis Object — NCA_fetch_current_obj","title":"Fetches the Current Analysis Object — NCA_fetch_current_obj","text":"Takes current state object type returns currently selected object. example specified figure, look output figure selected figure number figure return ggplot object . subject id highlighting certain NCA aspects (e.g. points used half-life)","code":""},{"path":"/reference/NCA_fetch_current_obj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetches the Current Analysis Object — NCA_fetch_current_obj","text":"","code":"NCA_fetch_current_obj(state, obj_type)"},{"path":"/reference/NCA_fetch_current_obj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetches the Current Analysis Object — NCA_fetch_current_obj","text":"state NCA state NCA_fetch_state() obj_type Type object return (either \"table\" \"figure\").","code":""},{"path":"/reference/NCA_fetch_current_obj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetches the Current Analysis Object — NCA_fetch_current_obj","text":"List format depends obj_type. figures: ggplot:   ggplot object figure. isgood:   Return status function. msgs:     Messages passed back user. tables: df:       Dataframe current table. ft:       Flextable object current table. notes:    table notes included. isgood:   Return status function. msgs:     Messages passed back user.","code":""},{"path":"/reference/NCA_fetch_current_obj.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fetches the Current Analysis Object — NCA_fetch_current_obj","text":"Time Concentration (ng/mL) ID (day) 1 2 3 0 BLQ BLQ BLQ 1 690 750 670 2 588 577 576 3 506 508 501 4 438 476 441 7 303 425 320 21 123 274 139 28 95.5 220 104 35 75.8 177 77.8 42 60.6 142 58.6","code":"# We need a state object to use below sess_res = NCA_test_mksession(session=list(), full_session=FALSE) #> → UD: including file #> → UD:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → UD:   dest:   file.path(\"config\",\"report.docx\") #> → UD: including file #> → UD:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → UD:   dest:   file.path(\"config\",\"report.pptx\") #> → UD: including file #> → UD:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → UD:   dest:   file.path(\"config\",\"report.yaml\") #> → UD: State initialized #> → UD: module checksum updated:897d952fecbc804999396a96f9df4b20 #> → DW: including file #> → DW:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → DW:   dest:   file.path(\"config\",\"report.docx\") #> → DW: including file #> → DW:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → DW:   dest:   file.path(\"config\",\"report.pptx\") #> → DW: including file #> → DW:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → DW:   dest:   file.path(\"config\",\"report.yaml\") #> → DW: State initialized #> → DW: module checksum updated:5b0f0b05ee3ac7336a74c564bb6efdad #> → DW: module checksum updated:65801ab4b3c645aabf7edf91fc2f0d2c #> → DW: module checksum updated:7fb2dd3b16b1780c4c24f64d658dd7c7 #> → DW: module checksum updated:5ab04ea00be44c0040695a4ed6243c90 #> → DW: module checksum updated:960db107cfe9db93578f79f0ae6283e2 #> → DW: module checksum updated:f0b5d122dcb04f207cba233253b61c4b #> → DW: module checksum updated:189ed77a84bd9fcdd7b26abff8bea34a #> → DW: module checksum updated:669ec77d50652669cd3fcfd949469b37 #> → DW: module checksum updated:dd6cafa0be3b6b195d230a11e9f07f9f #> → DW: module checksum updated:5c2022c376ca8f56b839347156559890 #> → DW: module checksum updated:43640500a04674debd8e2399056c384a #> → DW: module checksum updated:f81c45ac1ef4e7b43153d8c8eaf7aed6 #> → DW: module checksum updated:207cde891d98e20c4afbb7fb5fb0aba2 #> → DW: module checksum updated:0a673e81c01cbbf33533dd65d6baf9e3 #> → DW: module checksum updated:af3f3aefd0115ed9dfdd4d6ef9d5182f #> → DW: module checksum updated:b0ccaee21e859322df0bf79d00c4b347 #> → DW: module checksum updated:2d3d6e9e38be6dea813b2d4d679e34b5 #> → DW: module checksum updated:2b60dd49b48a4e65200dc7241ad270e3 #> → DW: module checksum updated:3c92f397181a4fcdbdf2bd7dd7425e77 #> → DW: module checksum updated:92b81d7573def603649370b87c123b55 #> → DW: module checksum updated:9210264aabc0339e832b0c6bcfda32af #> → DW: module checksum updated:fe62fde1e7e738a1a35c479de9d5007b #> → DW: module checksum updated:ff3edcd4c1e58c96ea2707361916ffbc #> → DW: module checksum updated:b6cdfcef0432c5d9b1fa2bd46122ffa2 #> → DW: module checksum updated:4fa4283f1fd8fd6cf6e6e7df0669723a #> → DW: module checksum updated:cf3e139cef554b2d09dca619ee6aff41 #> → DW: module checksum updated:a9154d91a9e4b5d21f9585a6f68dd083 #> → DW: module checksum updated:4b5c6ad66658ddfa92d10ae1b0b7afa8 #> → DW: module checksum updated:591ac875a490b66a1fa7f4e7d4ba1c62 #> → DW: module checksum updated:afa3ca309cc3e6a48f542f4e8eadd54a #> → DW: module checksum updated:5c918dd4f53a4f1e56115abb09c4f332 #> → DW: module checksum updated:159ddf8c8cd26b178dfda5434bbecfa1 #> → DW: module checksum updated:8bb3c97e700998f2f73353189bd07831 #> → DW: module checksum updated:a1eceffec3ff7d9f9961683b3d07088b #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → NCA:   dest:   file.path(\"config\",\"report.docx\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → NCA:   dest:   file.path(\"config\",\"report.pptx\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → NCA:   dest:   file.path(\"config\",\"report.yaml\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → NCA:   dest:   file.path(\"config\",\"report.docx\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → NCA:   dest:   file.path(\"config\",\"report.pptx\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → NCA:   dest:   file.path(\"config\",\"report.yaml\") #> → NCA: State initialized #> → NCA: State initialized #> → NCA: loading analysis scenario: sd_iv #> → NCA: NCA_add_int: append #> → NCA: NCA_add_int: append #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> → NCA: module checksum updated:d0c030c46a13212bec48c84ced0c803b state = sess_res$state  # Current active table: res = NCA_fetch_current_obj(state, \"table\") res$ft .cl-f52d6e44{}.cl-f5299184{font-family:'Helvetica';font-size:11pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-f52b4434{margin:0;text-align:center;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-f52b5172{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 0.3pt solid rgba(0, 0, 0, 1.00);border-top: 2pt solid rgba(0, 0, 0, 1.00);border-left: 2pt solid rgba(0, 0, 0, 1.00);border-right: 0.3pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f52b517c{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 0.3pt solid rgba(0, 0, 0, 1.00);border-top: 2pt solid rgba(0, 0, 0, 1.00);border-left: 0.3pt solid rgba(0, 0, 0, 1.00);border-right: 2pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f52b5186{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 0.3pt solid rgba(0, 0, 0, 1.00);border-top: 2pt solid rgba(0, 0, 0, 1.00);border-left: 0.3pt solid rgba(0, 0, 0, 1.00);border-right: 0.3pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f52b5187{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(0, 0, 0, 1.00);border-top: 0.3pt solid rgba(0, 0, 0, 1.00);border-left: 2pt solid rgba(0, 0, 0, 1.00);border-right: 0.3pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f52b5188{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(0, 0, 0, 1.00);border-top: 0.3pt solid rgba(0, 0, 0, 1.00);border-left: 0.3pt solid rgba(0, 0, 0, 1.00);border-right: 0.3pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f52b5190{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(0, 0, 0, 1.00);border-top: 0.3pt solid rgba(0, 0, 0, 1.00);border-left: 0.3pt solid rgba(0, 0, 0, 1.00);border-right: 2pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f52b5191{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 2pt solid rgba(0, 0, 0, 1.00);border-right: 0.3pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f52b5192{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0.3pt solid rgba(0, 0, 0, 1.00);border-right: 0.3pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f52b519a{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0.3pt solid rgba(0, 0, 0, 1.00);border-right: 2pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f52b519b{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 2pt solid rgba(0, 0, 0, 1.00);border-right: 0.3pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f52b519c{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0.3pt solid rgba(0, 0, 0, 1.00);border-right: 0.3pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f52b51a4{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0.3pt solid rgba(0, 0, 0, 1.00);border-right: 2pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}TimeConcentration (ng/mL) by ID(day)1230BLQBLQBLQ16907506702588577576350650850144384764417303425320211232741392895.52201043575.817777.84260.614258.6 # Current active figure: res = NCA_fetch_current_obj(state, \"figure\") res$ggplot"},{"path":"/reference/NCA_fetch_data_format.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetches Details About Data Requirements — NCA_fetch_data_format","title":"Fetches Details About Data Requirements — NCA_fetch_data_format","text":"Use get information data formats.","code":""},{"path":"/reference/NCA_fetch_data_format.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetches Details About Data Requirements — NCA_fetch_data_format","text":"","code":"NCA_fetch_data_format(   MOD_yaml_file = system.file(package = \"ruminate\", \"templates\", \"NCA.yaml\") )"},{"path":"/reference/NCA_fetch_data_format.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetches Details About Data Requirements — NCA_fetch_data_format","text":"MOD_yaml_file Module configuration file MC main section.","code":""},{"path":"/reference/NCA_fetch_data_format.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetches Details About Data Requirements — NCA_fetch_data_format","text":"List details data formats","code":""},{"path":"/reference/NCA_fetch_data_format.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fetches Details About Data Requirements — NCA_fetch_data_format","text":"","code":"NCA_fetch_data_format() #>   sname              Column Required #> 1    id          Subject ID      yes #> 2  time                Time      yes #> 3 ntime        Nominal Time      yes #> 4  conc       Concentration      yes #> 5  dose                Dose      yes #> 6 route               Route      yes #> 7   dur Duration (optional)       no #> 8 cycle          Dose cycle      yes #>                                                                                                                          Description #> 1                                                                                                         Unique subject identifier. #> 2                                                                                        Time since the first dose. Must be numeric. #> 3                                                       Time since the last dose in the cycle (same units as Time). Must be numeric. #> 4                                          Observed concentration. Must be numeric, no NA values. Missing values should be set to 0. #> 5                                                                                             Value of dose given (must be numeric). #> 6 Doseing route. It should be either 'extravascular' or 'intravascular' but ruminate will make an effort to figure out other values. #> 7                                                 Doseing duration (same units as Time). If set to N/A a value of 0 will be assumed. #> 8                                                                                                                 Current dose cycle"},{"path":"/reference/NCA_fetch_ds.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetch Module Datasets — NCA_fetch_ds","title":"Fetch Module Datasets — NCA_fetch_ds","text":"Fetches datasets contained module","code":""},{"path":"/reference/NCA_fetch_ds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetch Module Datasets — NCA_fetch_ds","text":"","code":"NCA_fetch_ds(state)"},{"path":"/reference/NCA_fetch_ds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetch Module Datasets — NCA_fetch_ds","text":"state NCA state NCA_fetch_state()","code":""},{"path":"/reference/NCA_fetch_ds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetch Module Datasets — NCA_fetch_ds","text":"list containing following elements isgood:    Return status function. hasds:     Boolean indicator module datasets msgs:      Messages passed back user. ds:        List datasets. list element name R-object dataset. element following structure: label: Text label dataset MOD_TYPE: Short name type module. id: module ID DS: Dataframe containing actual dataset. DSMETA: Metadata describing DS code: Complete code build dataset. checksum: Module checksum. DSchecksum: Dataset checksum.","code":""},{"path":"/reference/NCA_fetch_ds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fetch Module Datasets — NCA_fetch_ds","text":"","code":"# We need a state object to use below sess_res = NCA_test_mksession(session=list(), full_session=FALSE) #> → UD: including file #> → UD:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → UD:   dest:   file.path(\"config\",\"report.docx\") #> → UD: including file #> → UD:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → UD:   dest:   file.path(\"config\",\"report.pptx\") #> → UD: including file #> → UD:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → UD:   dest:   file.path(\"config\",\"report.yaml\") #> → UD: State initialized #> → UD: module checksum updated:897d952fecbc804999396a96f9df4b20 #> → DW: including file #> → DW:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → DW:   dest:   file.path(\"config\",\"report.docx\") #> → DW: including file #> → DW:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → DW:   dest:   file.path(\"config\",\"report.pptx\") #> → DW: including file #> → DW:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → DW:   dest:   file.path(\"config\",\"report.yaml\") #> → DW: State initialized #> → DW: module checksum updated:5b0f0b05ee3ac7336a74c564bb6efdad #> → DW: module checksum updated:65801ab4b3c645aabf7edf91fc2f0d2c #> → DW: module checksum updated:7fb2dd3b16b1780c4c24f64d658dd7c7 #> → DW: module checksum updated:5ab04ea00be44c0040695a4ed6243c90 #> → DW: module checksum updated:960db107cfe9db93578f79f0ae6283e2 #> → DW: module checksum updated:f0b5d122dcb04f207cba233253b61c4b #> → DW: module checksum updated:189ed77a84bd9fcdd7b26abff8bea34a #> → DW: module checksum updated:669ec77d50652669cd3fcfd949469b37 #> → DW: module checksum updated:dd6cafa0be3b6b195d230a11e9f07f9f #> → DW: module checksum updated:5c2022c376ca8f56b839347156559890 #> → DW: module checksum updated:43640500a04674debd8e2399056c384a #> → DW: module checksum updated:f81c45ac1ef4e7b43153d8c8eaf7aed6 #> → DW: module checksum updated:207cde891d98e20c4afbb7fb5fb0aba2 #> → DW: module checksum updated:0a673e81c01cbbf33533dd65d6baf9e3 #> → DW: module checksum updated:af3f3aefd0115ed9dfdd4d6ef9d5182f #> → DW: module checksum updated:b0ccaee21e859322df0bf79d00c4b347 #> → DW: module checksum updated:2d3d6e9e38be6dea813b2d4d679e34b5 #> → DW: module checksum updated:2b60dd49b48a4e65200dc7241ad270e3 #> → DW: module checksum updated:3c92f397181a4fcdbdf2bd7dd7425e77 #> → DW: module checksum updated:92b81d7573def603649370b87c123b55 #> → DW: module checksum updated:9210264aabc0339e832b0c6bcfda32af #> → DW: module checksum updated:fe62fde1e7e738a1a35c479de9d5007b #> → DW: module checksum updated:ff3edcd4c1e58c96ea2707361916ffbc #> → DW: module checksum updated:b6cdfcef0432c5d9b1fa2bd46122ffa2 #> → DW: module checksum updated:4fa4283f1fd8fd6cf6e6e7df0669723a #> → DW: module checksum updated:cf3e139cef554b2d09dca619ee6aff41 #> → DW: module checksum updated:a9154d91a9e4b5d21f9585a6f68dd083 #> → DW: module checksum updated:4b5c6ad66658ddfa92d10ae1b0b7afa8 #> → DW: module checksum updated:591ac875a490b66a1fa7f4e7d4ba1c62 #> → DW: module checksum updated:afa3ca309cc3e6a48f542f4e8eadd54a #> → DW: module checksum updated:5c918dd4f53a4f1e56115abb09c4f332 #> → DW: module checksum updated:159ddf8c8cd26b178dfda5434bbecfa1 #> → DW: module checksum updated:8bb3c97e700998f2f73353189bd07831 #> → DW: module checksum updated:a1eceffec3ff7d9f9961683b3d07088b #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → NCA:   dest:   file.path(\"config\",\"report.docx\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → NCA:   dest:   file.path(\"config\",\"report.pptx\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → NCA:   dest:   file.path(\"config\",\"report.yaml\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → NCA:   dest:   file.path(\"config\",\"report.docx\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → NCA:   dest:   file.path(\"config\",\"report.pptx\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → NCA:   dest:   file.path(\"config\",\"report.yaml\") #> → NCA: State initialized #> → NCA: State initialized #> → NCA: loading analysis scenario: sd_iv #> → NCA: NCA_add_int: append #> → NCA: NCA_add_int: append #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> → NCA: module checksum updated:2f6c7523e1e10b923bc80ba32c82d63b state = sess_res$state  myDs = NCA_fetch_ds(state)"},{"path":"/reference/NCA_fetch_np_meta.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetches NCA Parameter Meta Information — NCA_fetch_np_meta","title":"Fetches NCA Parameter Meta Information — NCA_fetch_np_meta","text":"provides meta information NCA parameters. includes parameter names, text descriptions, formatting (md LaTeX).","code":""},{"path":"/reference/NCA_fetch_np_meta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetches NCA Parameter Meta Information — NCA_fetch_np_meta","text":"","code":"NCA_fetch_np_meta(   MOD_yaml_file = system.file(package = \"ruminate\", \"templates\", \"NCA.yaml\") )"},{"path":"/reference/NCA_fetch_np_meta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetches NCA Parameter Meta Information — NCA_fetch_np_meta","text":"MOD_yaml_file Module configuration file MC main section.","code":""},{"path":"/reference/NCA_fetch_np_meta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetches NCA Parameter Meta Information — NCA_fetch_np_meta","text":"List following elements: choices: List parameter choices grouped values specified module configuration file. summary: Data frame meta data NCA parameters following columns: parameter:   Name parameter PKNCA. text:        Name parameter plain text. md:          Parameter name formatted Markdown. latex:       Parameter name formatted using LaTeX. description: Verbose description plain text parameter.","code":""},{"path":"/reference/NCA_fetch_np_meta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fetches NCA Parameter Meta Information — NCA_fetch_np_meta","text":"","code":"NCA_fetch_np_meta() #> $choices #> $choices$`Common Parameters` #> $choices$`Common Parameters`$AUCall #> [1] \"aucall\" #>  #> $choices$`Common Parameters`$C0 #> [1] \"c0\" #>  #> $choices$`Common Parameters`$`CL (based on AUCall)` #> [1] \"cl.all\" #>  #> $choices$`Common Parameters`$`CL (based on AUClast)` #> [1] \"cl.last\" #>  #> $choices$`Common Parameters`$Cmax #> [1] \"cmax\" #>  #> $choices$`Common Parameters`$`Half-life` #> [1] \"half.life\" #>  #> $choices$`Common Parameters`$`r²` #> [1] \"r.squared\" #>  #> $choices$`Common Parameters`$`Sparse AUClast` #> [1] \"sparse_auclast\" #>  #>  #> $choices$Other #> $choices$Other$`r² (Adj)` #> [1] \"adj.r.squared\" #>  #> $choices$Other$`Amount excreted` #> [1] \"ae\" #>  #> $choices$Other$`AUCall (dose-normalized)` #> [1] \"aucall.dn\" #>  #> $choices$Other$`AUCinf,obs` #> [1] \"aucinf.obs\" #>  #> $choices$Other$`AUCinf,obs (dose-normalized)` #> [1] \"aucinf.obs.dn\" #>  #> $choices$Other$`AUCinf,pred (dose-normalized)` #> [1] \"aucinf.pred.dn\" #>  #> $choices$Other$`AUCint (based on AUCall extrapolation)` #> [1] \"aucint.all\" #>  #> $choices$Other$`AUCint (based on AUCall extrapolation, dose-aware)` #> [1] \"aucint.all.dose\" #>  #> $choices$Other$`AUCint (based on AUCinf,obs extrapolation)` #> [1] \"aucint.inf.obs\" #>  #> $choices$Other$`AUCint (based on AUCinf,obs extrapolation, dose-aware)` #> [1] \"aucint.inf.obs.dose\" #>  #> $choices$Other$`AUCint (based on AUCinf,pred extrapolation)` #> [1] \"aucint.inf.pred\" #>  #> $choices$Other$`AUCint (based on AUCinf,pred extrapolation, dose-aware)` #> [1] \"aucint.inf.pred.dose\" #>  #> $choices$Other$`AUCint (based on AUClast extrapolation)` #> [1] \"aucint.last\" #>  #> $choices$Other$`AUCint (based on AUClast extrapolation, dose-aware)` #> [1] \"aucint.last.dose\" #>  #> $choices$Other$`AUCall (IV dosing)` #> [1] \"aucivall\" #>  #> $choices$Other$`AUCinf,obs (IV dosing)` #> [1] \"aucivinf.obs\" #>  #> $choices$Other$`AUCinf,pred (IV dosing)` #> [1] \"aucivinf.pred\" #>  #> $choices$Other$`AUCint,all (IV dosing)` #> [1] \"aucivint.all\" #>  #> $choices$Other$`AUCint,last (IV dosing)` #> [1] \"aucivint.last\" #>  #> $choices$Other$`AUClast (IV dosing)` #> [1] \"aucivlast\" #>  #> $choices$Other$`AUCbext (based on AUCall)` #> [1] \"aucivpbextall\" #>  #> $choices$Other$`AUCbext (based on AUCinf,obs)` #> [1] \"aucivpbextinf.obs\" #>  #> $choices$Other$`AUCbext (based on AUCinf,pred)` #> [1] \"aucivpbextinf.pred\" #>  #> $choices$Other$`AUCbext (based on AUCint,all)` #> [1] \"aucivpbextint.all\" #>  #> $choices$Other$`AUCbext (based on AUCint,last)` #> [1] \"aucivpbextint.last\" #>  #> $choices$Other$`AUCbext (based on AUClast)` #> [1] \"aucivpbextlast\" #>  #> $choices$Other$AUClast #> [1] \"auclast\" #>  #> $choices$Other$`AUClast (dose-normalized)` #> [1] \"auclast.dn\" #>  #> $choices$Other$`AUCpext (based on AUCinf,obs)` #> [1] \"aucpext.obs\" #>  #> $choices$Other$`AUCpext (based on AUCinf,pred)` #> [1] \"aucpext.pred\" #>  #> $choices$Other$`AUMC,all` #> [1] \"aumcall\" #>  #> $choices$Other$`AUMC,all (dose-normalized)` #> [1] \"aumcall.dn\" #>  #> $choices$Other$`AUMC,inf,obs` #> [1] \"aumcinf.obs\" #>  #> $choices$Other$`AUMC,inf,obs (dose-normalized)` #> [1] \"aumcinf.obs.dn\" #>  #> $choices$Other$`AUMC,inf,pred (dose-normalized)` #> [1] \"aumcinf.pred.dn\" #>  #> $choices$Other$`AUMC,last` #> [1] \"aumclast\" #>  #> $choices$Other$`AUMC,last (dose-normalized)` #> [1] \"aumclast.dn\" #>  #> $choices$Other$Cav #> [1] \"cav\" #>  #> $choices$Other$`Cav (dose-normalized)` #> [1] \"cav.dn\" #>  #> $choices$Other$Ceoi #> [1] \"ceoi\" #>  #> $choices$Other$`CL (based on AUCinf,obs)` #> [1] \"cl.obs\" #>  #> $choices$Other$`CL (based on AUCinf,pred)` #> [1] \"cl.pred\" #>  #> $choices$Other$Clast #> [1] \"clast.obs\" #>  #> $choices$Other$`Clast,pred` #> [1] \"clast.pred\" #>  #> $choices$Other$`Clast,pred (dose-normalized)` #> [1] \"clast.pred.dn\" #>  #> $choices$Other$`Renal clearance (from AUClast)` #> [1] \"clr.last\" #>  #> $choices$Other$`Renal clearance (from AUCinf,obs)` #> [1] \"clr.obs\" #>  #> $choices$Other$`Renal clearance (from AUCinf,pred)` #> [1] \"clr.pred\" #>  #> $choices$Other$`Cmax (dose-normalized)` #> [1] \"cmax.dn\" #>  #> $choices$Other$Cmin #> [1] \"cmin\" #>  #> $choices$Other$`Cmin (dose-normalized)` #> [1] \"cmin.dn\" #>  #> $choices$Other$Ctrough #> [1] \"ctrough\" #>  #> $choices$Other$`Ctrough (dose-normalized)` #> [1] \"ctrough.dn\" #>  #> $choices$Other$`Degree of fluctuation` #> [1] \"deg.fluc\" #>  #> $choices$Other$`Interval End` #> [1] \"end\" #>  #> $choices$Other$Bioavailability #> [1] \"f\" #>  #> $choices$Other$`Fraction excreted` #> [1] \"fe\" #>  #> $choices$Other$`Kel (for IV dosing, based on AUClast)` #> [1] \"kel.iv.last\" #>  #> $choices$Other$`Kel (for IV dosing, based on AUCinf,obs)` #> [1] \"kel.iv.obs\" #>  #> $choices$Other$`Kel (for IV dosing, based on AUCinf,pred)` #> [1] \"kel.iv.pred\" #>  #> $choices$Other$`Kel (based on AUClast)` #> [1] \"kel.last\" #>  #> $choices$Other$`Kel (based on AUCinf,obs)` #> [1] \"kel.obs\" #>  #> $choices$Other$`Kel (based on AUCinf,pred)` #> [1] \"kel.pred\" #>  #> $choices$Other$λz #> [1] \"lambda.z\" #>  #> $choices$Other$`λz,n` #> [1] \"lambda.z.n.points\" #>  #> $choices$Other$`λz (t 1ˢᵗ)` #> [1] \"lambda.z.time.first\" #>  #> $choices$Other$`MRT (for IV dosing, based on AUClast)` #> [1] \"mrt.iv.last\" #>  #> $choices$Other$`MRT (for IV dosing, based on AUCinf,obs)` #> [1] \"mrt.iv.obs\" #>  #> $choices$Other$`MRT (for IV dosing, based on AUCinf,pred)` #> [1] \"mrt.iv.pred\" #>  #> $choices$Other$`MRT (based on AUClast)` #> [1] \"mrt.last\" #>  #> $choices$Other$`MRT (for multiple dosing, based on AUCinf,obs)` #> [1] \"mrt.md.obs\" #>  #> $choices$Other$`MRT (for multiple dosing, based on AUCinf,pred)` #> [1] \"mrt.md.pred\" #>  #> $choices$Other$`MRT (based on AUCinf,obs)` #> [1] \"mrt.obs\" #>  #> $choices$Other$`MRT (based on AUCinf,pred)` #> [1] \"mrt.pred\" #>  #> $choices$Other$`Peak-to-trough ratio` #> [1] \"ptr\" #>  #> $choices$Other$`Span ratio` #> [1] \"span.ratio\" #>  #> $choices$Other$`Interval Start` #> [1] \"start\" #>  #> $choices$Other$Swing #> [1] \"swing\" #>  #> $choices$Other$`t 1ˢᵗ` #> [1] \"tfirst\" #>  #> $choices$Other$`Effective half-life (for IV dosing, based on MRTlast)` #> [1] \"thalf.eff.iv.last\" #>  #> $choices$Other$`Effective half-life (for IV dosing, based on MRT,obs)` #> [1] \"thalf.eff.iv.obs\" #>  #> $choices$Other$`Effective half-life (for IV dosing, based on MRT,pred)` #> [1] \"thalf.eff.iv.pred\" #>  #> $choices$Other$`Effective half-life (based on MRT,last)` #> [1] \"thalf.eff.last\" #>  #> $choices$Other$`Effective half-life (based on MRT,obs)` #> [1] \"thalf.eff.obs\" #>  #> $choices$Other$`Effective half-life (based on MRT,pred)` #> [1] \"thalf.eff.pred\" #>  #> $choices$Other$`Time above Concentration` #> [1] \"time_above\" #>  #> $choices$Other$Tlag #> [1] \"tlag\" #>  #> $choices$Other$Tlast #> [1] \"tlast\" #>  #> $choices$Other$`Vd (based on Clast,obs)` #> [1] \"vd.obs\" #>  #> $choices$Other$`Vd (based on Clast,pred)` #> [1] \"vd.pred\" #>  #> $choices$Other$`Vss (for IV dosing, based on AUClast)` #> [1] \"vss.iv.last\" #>  #> $choices$Other$`Vss (for IV dosing, based on AUCinf,obs)` #> [1] \"vss.iv.obs\" #>  #> $choices$Other$`Vss (for IV dosing, based on AUCinf,pred)` #> [1] \"vss.iv.pred\" #>  #> $choices$Other$`Vss (based on AUClast)` #> [1] \"vss.last\" #>  #> $choices$Other$`Vss (for multiple-dose, based on Clast,obs)` #> [1] \"vss.md.obs\" #>  #> $choices$Other$`Vss (for multiple-dose, based on Clast,pred)` #> [1] \"vss.md.pred\" #>  #> $choices$Other$`Vss (based on AUCinf,obs)` #> [1] \"vss.obs\" #>  #> $choices$Other$`Vss (based on AUCinf,pred)` #> [1] \"vss.pred\" #>  #> $choices$Other$`Vz (based on AUCinf,obs)` #> [1] \"vz.obs\" #>  #> $choices$Other$`Vz (based on AUCinf,pred)` #> [1] \"vz.pred\" #>  #>  #>  #> $summary #>                parameter #> 1                 aucall #> 2          adj.r.squared #> 3                     ae #> 4              aucall.dn #> 5             aucinf.obs #> 6          aucinf.obs.dn #> 7         aucinf.pred.dn #> 8             aucint.all #> 9        aucint.all.dose #> 10        aucint.inf.obs #> 11   aucint.inf.obs.dose #> 12       aucint.inf.pred #> 13  aucint.inf.pred.dose #> 14           aucint.last #> 15      aucint.last.dose #> 16              aucivall #> 17          aucivinf.obs #> 18         aucivinf.pred #> 19          aucivint.all #> 20         aucivint.last #> 21             aucivlast #> 22         aucivpbextall #> 23     aucivpbextinf.obs #> 24    aucivpbextinf.pred #> 25     aucivpbextint.all #> 26    aucivpbextint.last #> 27        aucivpbextlast #> 28               auclast #> 29            auclast.dn #> 30           aucpext.obs #> 31          aucpext.pred #> 32               aumcall #> 33            aumcall.dn #> 34           aumcinf.obs #> 35        aumcinf.obs.dn #> 36       aumcinf.pred.dn #> 37              aumclast #> 38           aumclast.dn #> 39                    c0 #> 40                   cav #> 41                cav.dn #> 42                  ceoi #> 43                cl.all #> 44               cl.last #> 45                cl.obs #> 46               cl.pred #> 47             clast.obs #> 48            clast.pred #> 49         clast.pred.dn #> 50              clr.last #> 51               clr.obs #> 52              clr.pred #> 53                  cmax #> 54               cmax.dn #> 55                  cmin #> 56               cmin.dn #> 57               ctrough #> 58            ctrough.dn #> 59              deg.fluc #> 60                   end #> 61                     f #> 62                    fe #> 63             half.life #> 64           kel.iv.last #> 65            kel.iv.obs #> 66           kel.iv.pred #> 67              kel.last #> 68               kel.obs #> 69              kel.pred #> 70              lambda.z #> 71     lambda.z.n.points #> 72   lambda.z.time.first #> 73           mrt.iv.last #> 74            mrt.iv.obs #> 75           mrt.iv.pred #> 76              mrt.last #> 77            mrt.md.obs #> 78           mrt.md.pred #> 79               mrt.obs #> 80              mrt.pred #> 81                   ptr #> 82             r.squared #> 83            span.ratio #> 84        sparse_auclast #> 85                 start #> 86                 swing #> 87                tfirst #> 88     thalf.eff.iv.last #> 89      thalf.eff.iv.obs #> 90     thalf.eff.iv.pred #> 91        thalf.eff.last #> 92         thalf.eff.obs #> 93        thalf.eff.pred #> 94            time_above #> 95                  tlag #> 96                 tlast #> 97                vd.obs #> 98               vd.pred #> 99           vss.iv.last #> 100           vss.iv.obs #> 101          vss.iv.pred #> 102             vss.last #> 103           vss.md.obs #> 104          vss.md.pred #> 105              vss.obs #> 106             vss.pred #> 107               vz.obs #> 108              vz.pred #>                                                        text #> 1                                                    AUCall #> 2                                                  r² (Adj) #> 3                                           Amount excreted #> 4                                  AUCall (dose-normalized) #> 5                                                AUCinf,obs #> 6                              AUCinf,obs (dose-normalized) #> 7                             AUCinf,pred (dose-normalized) #> 8                    AUCint (based on AUCall extrapolation) #> 9        AUCint (based on AUCall extrapolation, dose-aware) #> 10               AUCint (based on AUCinf,obs extrapolation) #> 11   AUCint (based on AUCinf,obs extrapolation, dose-aware) #> 12              AUCint (based on AUCinf,pred extrapolation) #> 13  AUCint (based on AUCinf,pred extrapolation, dose-aware) #> 14                  AUCint (based on AUClast extrapolation) #> 15      AUCint (based on AUClast extrapolation, dose-aware) #> 16                                       AUCall (IV dosing) #> 17                                   AUCinf,obs (IV dosing) #> 18                                  AUCinf,pred (IV dosing) #> 19                                   AUCint,all (IV dosing) #> 20                                  AUCint,last (IV dosing) #> 21                                      AUClast (IV dosing) #> 22                                AUCbext (based on AUCall) #> 23                            AUCbext (based on AUCinf,obs) #> 24                           AUCbext (based on AUCinf,pred) #> 25                            AUCbext (based on AUCint,all) #> 26                           AUCbext (based on AUCint,last) #> 27                               AUCbext (based on AUClast) #> 28                                                  AUClast #> 29                                AUClast (dose-normalized) #> 30                            AUCpext (based on AUCinf,obs) #> 31                           AUCpext (based on AUCinf,pred) #> 32                                                 AUMC,all #> 33                               AUMC,all (dose-normalized) #> 34                                             AUMC,inf,obs #> 35                           AUMC,inf,obs (dose-normalized) #> 36                          AUMC,inf,pred (dose-normalized) #> 37                                                AUMC,last #> 38                              AUMC,last (dose-normalized) #> 39                                                       C0 #> 40                                                      Cav #> 41                                    Cav (dose-normalized) #> 42                                                     Ceoi #> 43                                     CL (based on AUCall) #> 44                                    CL (based on AUClast) #> 45                                 CL (based on AUCinf,obs) #> 46                                CL (based on AUCinf,pred) #> 47                                                    Clast #> 48                                               Clast,pred #> 49                             Clast,pred (dose-normalized) #> 50                           Renal clearance (from AUClast) #> 51                        Renal clearance (from AUCinf,obs) #> 52                       Renal clearance (from AUCinf,pred) #> 53                                                     Cmax #> 54                                   Cmax (dose-normalized) #> 55                                                     Cmin #> 56                                   Cmin (dose-normalized) #> 57                                                  Ctrough #> 58                                Ctrough (dose-normalized) #> 59                                    Degree of fluctuation #> 60                                             Interval End #> 61                                          Bioavailability #> 62                                        Fraction excreted #> 63                                                Half-life #> 64                    Kel (for IV dosing, based on AUClast) #> 65                 Kel (for IV dosing, based on AUCinf,obs) #> 66                Kel (for IV dosing, based on AUCinf,pred) #> 67                                   Kel (based on AUClast) #> 68                                Kel (based on AUCinf,obs) #> 69                               Kel (based on AUCinf,pred) #> 70                                                       λz #> 71                                                     λz,n #> 72                                               λz (t 1ˢᵗ) #> 73                    MRT (for IV dosing, based on AUClast) #> 74                 MRT (for IV dosing, based on AUCinf,obs) #> 75                MRT (for IV dosing, based on AUCinf,pred) #> 76                                   MRT (based on AUClast) #> 77           MRT (for multiple dosing, based on AUCinf,obs) #> 78          MRT (for multiple dosing, based on AUCinf,pred) #> 79                                MRT (based on AUCinf,obs) #> 80                               MRT (based on AUCinf,pred) #> 81                                     Peak-to-trough ratio #> 82                                                       r² #> 83                                               Span ratio #> 84                                           Sparse AUClast #> 85                                           Interval Start #> 86                                                    Swing #> 87                                                    t 1ˢᵗ #> 88    Effective half-life (for IV dosing, based on MRTlast) #> 89    Effective half-life (for IV dosing, based on MRT,obs) #> 90   Effective half-life (for IV dosing, based on MRT,pred) #> 91                  Effective half-life (based on MRT,last) #> 92                   Effective half-life (based on MRT,obs) #> 93                  Effective half-life (based on MRT,pred) #> 94                                 Time above Concentration #> 95                                                     Tlag #> 96                                                    Tlast #> 97                                  Vd (based on Clast,obs) #> 98                                 Vd (based on Clast,pred) #> 99                    Vss (for IV dosing, based on AUClast) #> 100                Vss (for IV dosing, based on AUCinf,obs) #> 101               Vss (for IV dosing, based on AUCinf,pred) #> 102                                  Vss (based on AUClast) #> 103             Vss (for multiple-dose, based on Clast,obs) #> 104            Vss (for multiple-dose, based on Clast,pred) #> 105                               Vss (based on AUCinf,obs) #> 106                              Vss (based on AUCinf,pred) #> 107                                Vz (based on AUCinf,obs) #> 108                               Vz (based on AUCinf,pred) #>                                 md #> 1                         AUC~all~ #> 2                        Adj. R^2^ #> 3                               AE #> 4                      AUC~all,dn~ #> 5                     AUC~inf,obs~ #> 6                  AUC~inf,obs,dn~ #> 7                 AUC~inf,pred,dn~ #> 8                     AUC~int,all~ #> 9                AUC~int,all,dose~ #> 10                AUC~int,inf,obs~ #> 11           AUC~int,inf,obs,dose~ #> 12               AUC~int,inf,pred~ #> 13          AUC~int,inf,pred,dose~ #> 14                   AUC~int,last~ #> 15              AUC~int,last,dose~ #> 16                     AUC~iv,all~ #> 17                 AUC~iv,inf,obs~ #> 18                AUC~iv,inf,pred~ #> 19                 AUC~iv,int,all~ #> 20                AUC~iv,int,last~ #> 21                    AUC~iv,last~ #> 22                 AUC~iv,pbe,all~ #> 23             AUC~iv,pbe,inf,obs~ #> 24            AUC~iv,pbe,inf,pred~ #> 25             AUC~iv,pbe,inf,all~ #> 26            AUC~iv,pbe,inf,last~ #> 27                AUC~iv,pbe,last~ #> 28                       AUC~last~ #> 29                    AUC~last,dn~ #> 30                   AUC~pext,obs~ #> 31                  AUC~pext,pred~ #> 32                       AUMC~all~ #> 33                    AUMC~all,dn~ #> 34                   AUMC~inf,obs~ #> 35                AUMC~inf,obs,dn~ #> 36               AUMC~inf,pred,dn~ #> 37                      AUMC~last~ #> 38                   AUMC~last,dn~ #> 39                            C~0~ #> 40                          C~ave~ #> 41                       C~ave,dn~ #> 42                          C~EOI~ #> 43                              CL #> 44                        CL~last~ #> 45                         CL~obs~ #> 46                        CL~pred~ #> 47                    CL~last,obs~ #> 48                   CL~last,pred~ #> 49                CL~last,pred,dn~ #> 50                      CL~R,last~ #> 51                       CL~R,obs~ #> 52                      CL~R,pred~ #> 53                          C~max~ #> 54                       C~max,dn~ #> 55                          C~min~ #> 56                       C~min,dn~ #> 57                           C~tr~ #> 58                        C~tr,dn~ #> 59                             dgf #> 60                          t~end~ #> 61                            f~b~ #> 62                            f~e~ #> 63                         t~half~ #> 64                   k~el,iv,last~ #> 65                    k~el,iv,obs~ #> 66                   k~el,iv,pred~ #> 67                      k~el,last~ #> 68                       k~el,obs~ #> 69                      k~el,pred~ #> 70            <ff:symbol>l<\/ff>~z~ #> 71          <ff:symbol>l<\/ff>~z,n~ #> 72  <ff:symbol>l<\/ff>~z~ (t 1^st^) #> 73                    MRT~iv,last~ #> 74                     MRT~iv,obs~ #> 75                    MRT~iv,pred~ #> 76                       MRT~last~ #> 77                     MRT~md,obs~ #> 78                    MRT~md,pred~ #> 79                        MRT~obs~ #> 80                       MRT~pred~ #> 81                             PTR #> 82                            R^2^ #> 83                              SR #> 84                    AUC~last,sp~ #> 85                        t~start~ #> 86                           SWING #> 87                        t~first~ #> 88             t~half,eff,iv,last~ #> 89              t~half,eff,iv,obs~ #> 90             t~half,eff,iv,pred~ #> 91                t~half,eff,last~ #> 92                 t~half,eff,obs~ #> 93                t~half,eff,pred~ #> 94                           t~ab~ #> 95                          t~lag~ #> 96                         t~last~ #> 97                        V~d,obs~ #> 98                       V~d,pred~ #> 99                   V~ss,iv,last~ #> 100                   V~ss,iv,obs~ #> 101                  V~ss,iv,pred~ #> 102                  V~ss,iv,last~ #> 103                   V~ss,md,obs~ #> 104                  V~ss,md,pred~ #> 105                      V~ss,obs~ #> 106                     V~ss,pred~ #> 107                       V~z,obs~ #> 108                      V~z,pred~ #>                                                       latex #> 1                                                    AUCall #> 2                                               $r^2_{adj}$ #> 3                                           Amount excreted #> 4                                  AUCall (dose-normalized) #> 5                                                AUCinf,obs #> 6                              AUCinf,obs (dose-normalized) #> 7                             AUCinf,pred (dose-normalized) #> 8                    AUCint (based on AUCall extrapolation) #> 9        AUCint (based on AUCall extrapolation, dose-aware) #> 10               AUCint (based on AUCinf,obs extrapolation) #> 11   AUCint (based on AUCinf,obs extrapolation, dose-aware) #> 12              AUCint (based on AUCinf,pred extrapolation) #> 13  AUCint (based on AUCinf,pred extrapolation, dose-aware) #> 14                  AUCint (based on AUClast extrapolation) #> 15      AUCint (based on AUClast extrapolation, dose-aware) #> 16                                       AUCall (IV dosing) #> 17                                   AUCinf,obs (IV dosing) #> 18                                  AUCinf,pred (IV dosing) #> 19                                   AUCint,all (IV dosing) #> 20                                  AUCint,last (IV dosing) #> 21                                      AUClast (IV dosing) #> 22                                AUCbext (based on AUCall) #> 23                            AUCbext (based on AUCinf,obs) #> 24                           AUCbext (based on AUCinf,pred) #> 25                            AUCbext (based on AUCint,all) #> 26                           AUCbext (based on AUCint,last) #> 27                               AUCbext (based on AUClast) #> 28                                                  AUClast #> 29                                AUClast (dose-normalized) #> 30                            AUCpext (based on AUCinf,obs) #> 31                           AUCpext (based on AUCinf,pred) #> 32                                                 AUMC,all #> 33                               AUMC,all (dose-normalized) #> 34                                             AUMC,inf,obs #> 35                           AUMC,inf,obs (dose-normalized) #> 36                          AUMC,inf,pred (dose-normalized) #> 37                                                AUMC,last #> 38                              AUMC,last (dose-normalized) #> 39                                                       C0 #> 40                                                      Cav #> 41                                    Cav (dose-normalized) #> 42                                                     Ceoi #> 43                                     CL (based on AUCall) #> 44                                    CL (based on AUClast) #> 45                                 CL (based on AUCinf,obs) #> 46                                CL (based on AUCinf,pred) #> 47                                                    Clast #> 48                                               Clast,pred #> 49                             Clast,pred (dose-normalized) #> 50                           Renal clearance (from AUClast) #> 51                        Renal clearance (from AUCinf,obs) #> 52                       Renal clearance (from AUCinf,pred) #> 53                                                     Cmax #> 54                                   Cmax (dose-normalized) #> 55                                                     Cmin #> 56                                   Cmin (dose-normalized) #> 57                                                  Ctrough #> 58                                Ctrough (dose-normalized) #> 59                                    Degree of fluctuation #> 60                                             Interval End #> 61                                          Bioavailability #> 62                                        Fraction excreted #> 63                                                Half-life #> 64                    Kel (for IV dosing, based on AUClast) #> 65                 Kel (for IV dosing, based on AUCinf,obs) #> 66                Kel (for IV dosing, based on AUCinf,pred) #> 67                                   Kel (based on AUClast) #> 68                                Kel (based on AUCinf,obs) #> 69                               Kel (based on AUCinf,pred) #> 70                                             $\\\\lambda_z$ #> 71                       Number of points used for lambda_z #> 72                              First time for $\\\\lambda_z$ #> 73                    MRT (for IV dosing, based on AUClast) #> 74                 MRT (for IV dosing, based on AUCinf,obs) #> 75                MRT (for IV dosing, based on AUCinf,pred) #> 76                                   MRT (based on AUClast) #> 77           MRT (for multiple dosing, based on AUCinf,obs) #> 78          MRT (for multiple dosing, based on AUCinf,pred) #> 79                                MRT (based on AUCinf,obs) #> 80                               MRT (based on AUCinf,pred) #> 81                                     Peak-to-trough ratio #> 82                                                    $r^2$ #> 83                                               Span ratio #> 84                                           Sparse AUClast #> 85                                           Interval Start #> 86                                                    Swing #> 87                                                   Tfirst #> 88    Effective half-life (for IV dosing, based on MRTlast) #> 89    Effective half-life (for IV dosing, based on MRT,obs) #> 90   Effective half-life (for IV dosing, based on MRT,pred) #> 91                  Effective half-life (based on MRT,last) #> 92                   Effective half-life (based on MRT,obs) #> 93                  Effective half-life (based on MRT,pred) #> 94                                 Time above Concentration #> 95                                                     Tlag #> 96                                                    Tlast #> 97                                  Vd (based on Clast,obs) #> 98                                 Vd (based on Clast,pred) #> 99                    Vss (for IV dosing, based on AUClast) #> 100                Vss (for IV dosing, based on AUCinf,obs) #> 101               Vss (for IV dosing, based on AUCinf,pred) #> 102                                  Vss (based on AUClast) #> 103             Vss (for multiple-dose, based on Clast,obs) #> 104            Vss (for multiple-dose, based on Clast,pred) #> 105                               Vss (based on AUCinf,obs) #> 106                              Vss (based on AUCinf,pred) #> 107                                Vz (based on AUCinf,obs) #> 108                               Vz (based on AUCinf,pred) #>                                                                                                                                                                                                                                                                          description #> 1                        The area under the concentration time curve from the beginning of the interval to the last concentration above the limit of quantification plus the triangle from that last concentration to 0 at the first concentration below the limit of quantification #> 2                                                                                                                                                                                                                                The adjusted r^2 value of the half-life calculation #> 3                                                                                                                                                                                                                                The amount excreted (typically into urine or feces) #> 4                                                                                                                                                                                                                                                             Dose normalized aucall #> 5                                                                                                                                  The area under the concentration time curve from the beginning of the interval to infinity with extrapolation to infinity from the observed Clast #> 6                                                                                                                                                                                                                                                         Dose normalized aucinf.obs #> 7                                                                                                                                                                                                                                                        Dose normalized aucinf.pred #> 8                                                                                              The area under the concentration time curve in the interval extrapolating from Tlast to infinity with the triangle from Tlast to the next point and zero thereafter (matching AUCall) #> 9                                The area under the concentration time curve in the interval extrapolating from Tlast to infinity with the triangle from Tlast to the next point and zero thereafter (matching AUCall) with dose-aware interpolation/extrapolation of concentrations #> 10                                                                                                                                                    The area under the concentration time curve in the interval extrapolating from Tlast to infinity with zeros (matching AUClast) #> 11                                                                                      The area under the concentration time curve in the interval extrapolating from Tlast to infinity with zeros (matching AUClast) with dose-aware interpolation/extrapolation of concentrations #> 12                                                                                             The area under the concentration time curve in the interval extrapolating from Tlast to infinity with the triangle from Tlast to the next point and zero thereafter (matching AUCall) #> 13                               The area under the concentration time curve in the interval extrapolating from Tlast to infinity with the triangle from Tlast to the next point and zero thereafter (matching AUCall) with dose-aware interpolation/extrapolation of concentrations #> 14                                                                                                                                                    The area under the concentration time curve in the interval extrapolating from Tlast to infinity with zeros (matching AUClast) #> 15                                                                                      The area under the concentration time curve in the interval extrapolating from Tlast to infinity with zeros (matching AUClast) with dose-aware interpolation/extrapolation of concentrations #> 16                                                                                                                                                                                        The AUCall calculated with back-extrapolation for intravenous dosing using extrapolated C0 #> 17                                                                                                                                                                                    The AUCinf,obs calculated with back-extrapolation for intravenous dosing using extrapolated C0 #> 18                                                                                                                                                                                              The  calculated with back-extrapolation for intravenous dosing using extrapolated C0 #> 19                                                                                                                                                                                    The AUCint,all calculated with back-extrapolation for intravenous dosing using extrapolated C0 #> 20                                                                                                                                                                                   The AUCint,last calculated with back-extrapolation for intravenous dosing using extrapolated C0 #> 21                                                                                                                                                                                       The AUClast calculated with back-extrapolation for intravenous dosing using extrapolated C0 #> 22                                                                                                                                                                                                             The back-extrapolation percent for intravenous dosing based on AUCall #> 23                                                                                                                                                                                                         The back-extrapolation percent for intravenous dosing based on AUCinf,obs #> 24                                                                                                                                                                                                        The back-extrapolation percent for intravenous dosing based on AUCinf,pred #> 25                                                                                                                                                                                                         The back-extrapolation percent for intravenous dosing based on AUCint,all #> 26                                                                                                                                                                                                        The back-extrapolation percent for intravenous dosing based on AUCint,last #> 27                                                                                                                                                                                                            The back-extrapolation percent for intravenous dosing based on AUClast #> 28                                                                                                                                        The area under the concentration time curve from the beginning of the interval to the last concentration above the limit of quantification #> 29                                                                                                                                                                                                                                                           Dose normalized auclast #> 30                                                                                                                                                                                         Percent of the AUCinf that is extrapolated after Tlast calculated from the observed Clast #> 31                                                                                                                                                                                        Percent of the AUCinf that is extrapolated after Tlast calculated from the predicted Clast #> 32  The area under the concentration time moment curve from the beginning of the interval to the last concentration above the limit of quantification plus the moment of the triangle from that last concentration to 0 at the first concentration below the limit of quantification #> 33                                                                                                                                                                                                                                                           Dose normalized aumcall #> 34                                                                                                                          The area under the concentration time moment curve from the beginning of the interval to infinity with extrapolation to infinity from the observed Clast #> 35                                                                                                                                                                                                                                                       Dose normalized aumcinf.obs #> 36                                                                                                                                                                                                                                                      Dose normalized aumcinf.pred #> 37                                                                                                                                 The area under the concentration time moment curve from the beginning of the interval to the last concentration above the limit of quantification #> 38                                                                                                                                                                                                                                                          Dose normalized aumclast #> 39                                                                                                                                                                                                                                           Initial concentration after an IV bolus #> 40                                                                                                                                                                                                                                      The average concentration during an interval #> 41                                                                                                                                                                                                                                                               Dose normalized cav #> 42                                                                                                                                                                                                                                              Concentration at the end of infusion #> 43                                                                                                                                                                                                                       Clearance or observed oral clearance calculated with AUCall #> 44                                                                                                                                                                                                                          Clearance or observed oral clearance calculated to Clast #> 45                                                                                                                                                                                                               Clearance or observed oral clearance calculated with observed Clast #> 46                                                                                                                                                                                                              Clearance or observed oral clearance calculated with predicted Clast #> 47                                                                                                                                                                                                                 The last concentration observed above the limit of quantification #> 48                                                                                                                                                                                                                          The concentration at Tlast as predicted by the half-life #> 49                                                                                                                                                                                                                                                        Dose normalized clast.pred #> 50                                                                                                                                                                                                                                      The renal clearance calculated using AUClast #> 51                                                                                                                                                                                                                                   The renal clearance calculated using AUCinf,obs #> 52                                                                                                                                                                                                                                  The renal clearance calculated using AUCinf,pred #> 53                                                                                                                                                                                                                                                    Maximum observed concentration #> 54                                                                                                                                                                                                                                                              Dose normalized cmax #> 55                                                                                                                                                                                                                                                    Minimum observed concentration #> 56                                                                                                                                                                                                                                                              Dose normalized cmin #> 57                                                                                                                                                                                                                                        The trough (end of interval) concentration #> 58                                                                                                                                                                                                                                                           Dose normalized ctrough #> 59                                                                                                                                                                                                                                                             Degree of fluctuation #> 60                                                                                                                                                                                                                                Ending time of the interval (potentially infinity) #> 61                                                                                                                                                                                                                                       Bioavailability or relative bioavailability #> 62                                                                                                                                                                                                                                                 The fraction of the dose excreted #> 63                                                                                                                                                                                                                                                          The (terminal) half-life #> 64                                                                                                                                                                                                                     Elimination rate (as calculated from the intravenous MRTlast) #> 65                                                                                                                                                                                                                      Elimination rate (as calculated from the intravenous MRTobs) #> 66                                                                                                                                                                                                                     Elimination rate (as calculated from the intravenous MRTpred) #> 67                                                                                                                                                                                                                       Elimination rate (as calculated from the MRT using AUClast) #> 68                                                                                                                                                                                                                 Elimination rate (as calculated from the MRT with observed Clast) #> 69                                                                                                                                                                                                                Elimination rate (as calculated from the MRT with predicted Clast) #> 70                                                                                                                                                                                                                                    The elimination rate of the terminal half-life #> 71                                                                                                                                                                                                                        The number of points used for the calculation of half-life #> 72                                                                                                                                                                                                                        The first time point used for the calculation of half-life #> 73                                                                                                                                                                           The mean residence time to the last observed concentration above the LOQ correcting for dosing duration #> 74                                                                                                                                                                                           The mean residence time to infinity using observed Clast correcting for dosing duration #> 75                                                                                                                                                                                          The mean residence time to infinity using predicted Clast correcting for dosing duration #> 76                                                                                                                                                                                                          The mean residence time to the last observed concentration above the LOQ #> 77                                                                                                                                                                                          The mean residence time with multiple dosing and nonlinear kinetics using observed Clast #> 78                                                                                                                                                                                         The mean residence time with multiple dosing and nonlinear kinetics using predicted Clast #> 79                                                                                                                                                                                                                          The mean residence time to infinity using observed Clast #> 80                                                                                                                                                                                                                         The mean residence time to infinity using predicted Clast #> 81                                                                                                                                                                                                                                                   Peak-to-Trough ratio (fraction) #> 82                                                                                                                                                                                                                                        The r^2 value of the half-life calculation #> 83                                                                                                                                                                                                         The ratio of the half-life to the duration used for half-life calculation #> 84                                                                                                                For sparse PK sampling, the area under the concentration time curve from the beginning of the interval to the last concentration above the limit of quantification #> 85                                                                                                                                                                                                                                                     Starting time of the interval #> 86                                                                                                                                                                                                                                                            Swing relative to Cmin #> 87                                                                                                                                                                                                                 Time of the first concentration above the limit of quantification #> 88                                                                                                                                                                                                              The effective half-life (as determined from the intravenous MRTlast) #> 89                                                                                                                                                                                                               The effective half-life (as determined from the intravenous MRTobs) #> 90                                                                                                                                                                                                              The effective half-life (as determined from the intravenous MRTpred) #> 91                                                                                                                                                                                                                          The effective half-life (as determined from the MRTlast) #> 92                                                                                                                                                                                                                           The effective half-life (as determined from the MRTobs) #> 93                                                                                                                                                                                                                          The effective half-life (as determined from the MRTpred) #> 94                                                                                                                                                                                                                                                  Time above a given concentration #> 95                                                                                                                                                                                                                                                                          Lag time #> 96                                                                                                                                                                                                         Time of the last concentration observed above the limit of quantification #> 97                                                                                                                                                                                                           Apparent observed volume of distribution calculated with observed Clast #> 98                                                                                                                                                                                                          Apparent observed volume of distribution calculated with predicted Clast #> 99                                                                                                                                                                                       The steady-state volume of distribution with intravenous infusion calculating through Tlast #> 100                                                                                                                                                                                           The steady-state volume of distribution with intravenous infusion using observed Clast #> 101                                                                                                                                                                                          The steady-state volume of distribution with intravenous infusion using predicted Clast #> 102                                                                                                                                                                                                                The steady-state volume of distribution calculating through Tlast #> 103                                                                                                                                                                                    The steady-state volume of distribution for nonlinear multiple-dose data using observed Clast #> 104                                                                                                                                                                                   The steady-state volume of distribution for nonlinear multiple-dose data using predicted Clast #> 105                                                                                                                                                                                                                     The steady-state volume of distribution using observed Clast #> 106                                                                                                                                                                                                                    The steady-state volume of distribution using predicted Clast #> 107                                                                                                                                                                                                                         The terminal volume of distribution using observed Clast #> 108                                                                                                                                                                                                                        The terminal volume of distribution using predicted Clast #>"},{"path":"/reference/NCA_fetch_state.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetch ruminate State — NCA_fetch_state","title":"Fetch ruminate State — NCA_fetch_state","text":"Merges default app options changes made UI","code":""},{"path":"/reference/NCA_fetch_state.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetch ruminate State — NCA_fetch_state","text":"","code":"NCA_fetch_state(   id,   input,   session,   FM_yaml_file,   MOD_yaml_file,   id_ASM,   id_UD,   id_DW,   react_state )"},{"path":"/reference/NCA_fetch_state.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetch ruminate State — NCA_fetch_state","text":"id Shiny module ID input Shiny input variable session Shiny session variable FM_yaml_file App configuration file FM main section. MOD_yaml_file Module configuration file MC main section. id_ASM ID string app state management module used save load app states id_UD ID string upload data module used save load app states id_DW ID string data wrangling module used save load app states react_state Variable passed server allow reaction outside module (NULL)","code":""},{"path":"/reference/NCA_fetch_state.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetch ruminate State — NCA_fetch_state","text":"list containing current state app including default values yaml file well changes made user. list following structure: yaml: Full contents supplied yaml file. MC: Module components yaml file. NCA: ana_cntr:       Analysis counter. anas:                    List analyses: analysis following  structure: ana_dsview:       Dataset view/ID (name DSV) selected data source analysis. ana_scenario:     Analysis scenario selected UI checksum:         checksum analysis (used detect changes analysis). code:             Code generate analysis start finish error messages code generation/analysis failed. code_components:  List containing different components code col_conc:         Column ana_dsview containing concentration data. col_dose:         Column ana_dsview containing dose amount. col_dur:          Column ana_dsview containing infusion duration N/unused. col_group:        Columns ana_dsview containing grouping variables. col_id:           Column ana_dsview containing subject IDs. col_ntime:        Column ana_dsview containing nominal time values col_route:        Column ana_dsview containing dosing route. col_time:         Column ana_dsview containing time values. id:               Character id (ana_idx). idx:              Numeric id (1). include_units:    Boolean variable indicating units included analysis. interval_range:   Vector first element representing beginning interval second element containing end interval. intervals:        List intervals include. isgood:           Current status analysis. key:              Analysis key acts title/caption (user editable) msgs:             Messages generated checking configuration analysis options. nca_config:       List NCA configuration options analysis. nca_object_name:  Prefix NCA objects associated analyis. nca_parameters:   NCA parameters selected calculation UI. notes:            Analysis notes  (user editable) objs:             List names values objects created generated code. sampling:         Sampling method either \"sparse\" \"serial\" units_amt:        Amount units. units_conc:       Concentration units. units_dose:       Dosing units. units_time:       Time units. current_ana:           Currently selected analysis (list name element anas). DSV:                   Available data source views (see FM_fetch_ds) checksum:              MD5 sum module (checksum analysis checksums). nca_config:            List PKNCA configuration options analysis. nca_parameters:        List two elements choices:          List consisting \"Common Parameters\" \"\" (used grouping UI). list text parameter names value PKNCA parameter name. summary:          Summary table following columns: parameter:      PKNCA Paramter name. text:           Name used text output. md:             Name used markdown output. latex:          Name used latex output. description:    Verbose textual description parameter. ui:                    Current value form elements UI. ui_ana_map:            Map UI element names analysis object get NCA_fetch_current_ana ui_ids:                Vector UI elements module. ui_hold:               List hold elements disable updates full ui referesh complete. MOD_TYPE: Character data containing type module \"NCA\" id: Character data containing module id module session variable. FM_yaml_file: App configuration file FM main section. MOD_yaml_file:  Module configuration file MC main section.","code":""},{"path":"/reference/NCA_fetch_state.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fetch ruminate State — NCA_fetch_state","text":"","code":"library(ruminate) # Module IDs                                                                    id     = \"NCA\"                                                                  id_UD  = \"UD\"                                                                   id_DW  = \"DW\"                                                                   id_ASM = \"ASM\"                                                                  # We need session and input variables to be define                               sess_res = NCA_test_mksession(session=list(),                                        id     = id,                                                                    id_UD  = id_UD,                                                                 id_DW  = id_DW,                                                                 id_ASM = id_ASM,       full_session=FALSE) #> → UD: including file #> → UD:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → UD:   dest:   file.path(\"config\",\"report.docx\") #> → UD: including file #> → UD:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → UD:   dest:   file.path(\"config\",\"report.pptx\") #> → UD: including file #> → UD:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → UD:   dest:   file.path(\"config\",\"report.yaml\") #> → UD: State initialized #> → UD: module checksum updated:897d952fecbc804999396a96f9df4b20 #> → DW: including file #> → DW:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → DW:   dest:   file.path(\"config\",\"report.docx\") #> → DW: including file #> → DW:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → DW:   dest:   file.path(\"config\",\"report.pptx\") #> → DW: including file #> → DW:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → DW:   dest:   file.path(\"config\",\"report.yaml\") #> → DW: State initialized #> → DW: module checksum updated:5b0f0b05ee3ac7336a74c564bb6efdad #> → DW: module checksum updated:65801ab4b3c645aabf7edf91fc2f0d2c #> → DW: module checksum updated:7fb2dd3b16b1780c4c24f64d658dd7c7 #> → DW: module checksum updated:5ab04ea00be44c0040695a4ed6243c90 #> → DW: module checksum updated:960db107cfe9db93578f79f0ae6283e2 #> → DW: module checksum updated:f0b5d122dcb04f207cba233253b61c4b #> → DW: module checksum updated:189ed77a84bd9fcdd7b26abff8bea34a #> → DW: module checksum updated:669ec77d50652669cd3fcfd949469b37 #> → DW: module checksum updated:dd6cafa0be3b6b195d230a11e9f07f9f #> → DW: module checksum updated:5c2022c376ca8f56b839347156559890 #> → DW: module checksum updated:43640500a04674debd8e2399056c384a #> → DW: module checksum updated:f81c45ac1ef4e7b43153d8c8eaf7aed6 #> → DW: module checksum updated:207cde891d98e20c4afbb7fb5fb0aba2 #> → DW: module checksum updated:0a673e81c01cbbf33533dd65d6baf9e3 #> → DW: module checksum updated:af3f3aefd0115ed9dfdd4d6ef9d5182f #> → DW: module checksum updated:b0ccaee21e859322df0bf79d00c4b347 #> → DW: module checksum updated:2d3d6e9e38be6dea813b2d4d679e34b5 #> → DW: module checksum updated:2b60dd49b48a4e65200dc7241ad270e3 #> → DW: module checksum updated:3c92f397181a4fcdbdf2bd7dd7425e77 #> → DW: module checksum updated:92b81d7573def603649370b87c123b55 #> → DW: module checksum updated:9210264aabc0339e832b0c6bcfda32af #> → DW: module checksum updated:fe62fde1e7e738a1a35c479de9d5007b #> → DW: module checksum updated:ff3edcd4c1e58c96ea2707361916ffbc #> → DW: module checksum updated:b6cdfcef0432c5d9b1fa2bd46122ffa2 #> → DW: module checksum updated:4fa4283f1fd8fd6cf6e6e7df0669723a #> → DW: module checksum updated:cf3e139cef554b2d09dca619ee6aff41 #> → DW: module checksum updated:a9154d91a9e4b5d21f9585a6f68dd083 #> → DW: module checksum updated:4b5c6ad66658ddfa92d10ae1b0b7afa8 #> → DW: module checksum updated:591ac875a490b66a1fa7f4e7d4ba1c62 #> → DW: module checksum updated:afa3ca309cc3e6a48f542f4e8eadd54a #> → DW: module checksum updated:5c918dd4f53a4f1e56115abb09c4f332 #> → DW: module checksum updated:159ddf8c8cd26b178dfda5434bbecfa1 #> → DW: module checksum updated:8bb3c97e700998f2f73353189bd07831 #> → DW: module checksum updated:a1eceffec3ff7d9f9961683b3d07088b #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → NCA:   dest:   file.path(\"config\",\"report.docx\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → NCA:   dest:   file.path(\"config\",\"report.pptx\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → NCA:   dest:   file.path(\"config\",\"report.yaml\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → NCA:   dest:   file.path(\"config\",\"report.docx\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → NCA:   dest:   file.path(\"config\",\"report.pptx\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → NCA:   dest:   file.path(\"config\",\"report.yaml\") #> → NCA: State initialized #> → NCA: State initialized #> → NCA: loading analysis scenario: sd_iv #> → NCA: NCA_add_int: append #> → NCA: NCA_add_int: append #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> → NCA: module checksum updated:cb637fb3c75aaafecc1f411cbf37234c                                                                                 # Extracting the session and input variables                                    session      = sess_res$session                                                 input        = sess_res$input                                                   react_state  = list()                                                                                                                                           # We also need configuration files                                              FM_yaml_file  = system.file(package = \"formods\",  \"templates\", \"formods.yaml\")  MOD_yaml_file = system.file(package = \"ruminate\", \"templates\", \"NCA.yaml\")                                                                                      # Getting the current module state                                              state = NCA_fetch_state(id             = id,                                                           input           = input,                                                        session         = session,                                                      FM_yaml_file    = FM_yaml_file,                                                 MOD_yaml_file   = MOD_yaml_file,                                                id_ASM          = id_ASM,                                                       id_UD           = id_UD,                                                        id_DW           = id_DW,                                                        react_state     = react_state)                                                                                                           # Pulls out the active analysis                                                 current_ana = NCA_fetch_current_ana(state)  # This will get the dataset associated with this analysis ds = NCA_fetch_ana_ds(state, current_ana)  # After making changes you can update those in the state state = NCA_set_current_ana(state, current_ana)  # You can use this to check the current analysis current_ana = NCA_process_current_ana(state) #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion  # This will pull out the code for the module fc_res = NCA_fetch_code(state)  # This will use patterns defined for the site to detect # columns. In this example we are detecting the id column: id_col = NCA_find_col(   patterns = state[[\"MC\"]][[\"detect_col\"]][[\"id\"]],   dscols   = names(ds$DS)) #> Warning: Unknown or uninitialised column: `DS`.  # This creates a new analysis state = NCA_new_ana(state)"},{"path":"/reference/NCA_find_col.html","id":null,"dir":"Reference","previous_headings":"","what":"Determines Default Column Name — NCA_find_col","title":"Determines Default Column Name — NCA_find_col","text":"Based current analysis, value UI, optional list patterns search, column names dataset function tries find default value column analysis (e.g. subject id, dose, concentration, etc). Generally following done: curr_ui non-NULL, non-\"\" value compared dscols. found value returned. patterns considered. patterns YAML file NULL compared sequentially columns names. first match found returned. nothing found first value dscols returned.","code":""},{"path":"/reference/NCA_find_col.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determines Default Column Name — NCA_find_col","text":"","code":"NCA_find_col(   curr_ana = NULL,   curr_ui = NULL,   patterns = NULL,   dscols,   null_ok = FALSE )"},{"path":"/reference/NCA_find_col.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determines Default Column Name — NCA_find_col","text":"curr_ana Current value analysis curr_ui Current value UI patterns List regular expression patterns consider. dscols Columns dataset. null_ok Logical value indicating null result (nothing found) OK (default: FALSE)","code":""},{"path":"/reference/NCA_find_col.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determines Default Column Name — NCA_find_col","text":"Name column found based rules .","code":""},{"path":"/reference/NCA_find_col.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Determines Default Column Name — NCA_find_col","text":"","code":"library(ruminate) # Module IDs                                                                    id     = \"NCA\"                                                                  id_UD  = \"UD\"                                                                   id_DW  = \"DW\"                                                                   id_ASM = \"ASM\"                                                                  # We need session and input variables to be define                               sess_res = NCA_test_mksession(session=list(),                                        id     = id,                                                                    id_UD  = id_UD,                                                                 id_DW  = id_DW,                                                                 id_ASM = id_ASM,       full_session=FALSE) #> → UD: including file #> → UD:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → UD:   dest:   file.path(\"config\",\"report.docx\") #> → UD: including file #> → UD:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → UD:   dest:   file.path(\"config\",\"report.pptx\") #> → UD: including file #> → UD:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → UD:   dest:   file.path(\"config\",\"report.yaml\") #> → UD: State initialized #> → UD: module checksum updated:897d952fecbc804999396a96f9df4b20 #> → DW: including file #> → DW:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → DW:   dest:   file.path(\"config\",\"report.docx\") #> → DW: including file #> → DW:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → DW:   dest:   file.path(\"config\",\"report.pptx\") #> → DW: including file #> → DW:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → DW:   dest:   file.path(\"config\",\"report.yaml\") #> → DW: State initialized #> → DW: module checksum updated:5b0f0b05ee3ac7336a74c564bb6efdad #> → DW: module checksum updated:65801ab4b3c645aabf7edf91fc2f0d2c #> → DW: module checksum updated:7fb2dd3b16b1780c4c24f64d658dd7c7 #> → DW: module checksum updated:5ab04ea00be44c0040695a4ed6243c90 #> → DW: module checksum updated:960db107cfe9db93578f79f0ae6283e2 #> → DW: module checksum updated:f0b5d122dcb04f207cba233253b61c4b #> → DW: module checksum updated:189ed77a84bd9fcdd7b26abff8bea34a #> → DW: module checksum updated:669ec77d50652669cd3fcfd949469b37 #> → DW: module checksum updated:dd6cafa0be3b6b195d230a11e9f07f9f #> → DW: module checksum updated:5c2022c376ca8f56b839347156559890 #> → DW: module checksum updated:43640500a04674debd8e2399056c384a #> → DW: module checksum updated:f81c45ac1ef4e7b43153d8c8eaf7aed6 #> → DW: module checksum updated:207cde891d98e20c4afbb7fb5fb0aba2 #> → DW: module checksum updated:0a673e81c01cbbf33533dd65d6baf9e3 #> → DW: module checksum updated:af3f3aefd0115ed9dfdd4d6ef9d5182f #> → DW: module checksum updated:b0ccaee21e859322df0bf79d00c4b347 #> → DW: module checksum updated:2d3d6e9e38be6dea813b2d4d679e34b5 #> → DW: module checksum updated:2b60dd49b48a4e65200dc7241ad270e3 #> → DW: module checksum updated:3c92f397181a4fcdbdf2bd7dd7425e77 #> → DW: module checksum updated:92b81d7573def603649370b87c123b55 #> → DW: module checksum updated:9210264aabc0339e832b0c6bcfda32af #> → DW: module checksum updated:fe62fde1e7e738a1a35c479de9d5007b #> → DW: module checksum updated:ff3edcd4c1e58c96ea2707361916ffbc #> → DW: module checksum updated:b6cdfcef0432c5d9b1fa2bd46122ffa2 #> → DW: module checksum updated:4fa4283f1fd8fd6cf6e6e7df0669723a #> → DW: module checksum updated:cf3e139cef554b2d09dca619ee6aff41 #> → DW: module checksum updated:a9154d91a9e4b5d21f9585a6f68dd083 #> → DW: module checksum updated:4b5c6ad66658ddfa92d10ae1b0b7afa8 #> → DW: module checksum updated:591ac875a490b66a1fa7f4e7d4ba1c62 #> → DW: module checksum updated:afa3ca309cc3e6a48f542f4e8eadd54a #> → DW: module checksum updated:5c918dd4f53a4f1e56115abb09c4f332 #> → DW: module checksum updated:159ddf8c8cd26b178dfda5434bbecfa1 #> → DW: module checksum updated:8bb3c97e700998f2f73353189bd07831 #> → DW: module checksum updated:a1eceffec3ff7d9f9961683b3d07088b #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → NCA:   dest:   file.path(\"config\",\"report.docx\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → NCA:   dest:   file.path(\"config\",\"report.pptx\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → NCA:   dest:   file.path(\"config\",\"report.yaml\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → NCA:   dest:   file.path(\"config\",\"report.docx\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → NCA:   dest:   file.path(\"config\",\"report.pptx\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → NCA:   dest:   file.path(\"config\",\"report.yaml\") #> → NCA: State initialized #> → NCA: State initialized #> → NCA: loading analysis scenario: sd_iv #> → NCA: NCA_add_int: append #> → NCA: NCA_add_int: append #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> → NCA: module checksum updated:407ad51863f4a51ce0734ff797180f17                                                                                 # Extracting the session and input variables                                    session      = sess_res$session                                                 input        = sess_res$input                                                   react_state  = list()                                                                                                                                           # We also need configuration files                                              FM_yaml_file  = system.file(package = \"formods\",  \"templates\", \"formods.yaml\")  MOD_yaml_file = system.file(package = \"ruminate\", \"templates\", \"NCA.yaml\")                                                                                      # Getting the current module state                                              state = NCA_fetch_state(id             = id,                                                           input           = input,                                                        session         = session,                                                      FM_yaml_file    = FM_yaml_file,                                                 MOD_yaml_file   = MOD_yaml_file,                                                id_ASM          = id_ASM,                                                       id_UD           = id_UD,                                                        id_DW           = id_DW,                                                        react_state     = react_state)                                                                                                           # Pulls out the active analysis                                                 current_ana = NCA_fetch_current_ana(state)  # This will get the dataset associated with this analysis ds = NCA_fetch_ana_ds(state, current_ana)  # After making changes you can update those in the state state = NCA_set_current_ana(state, current_ana)  # You can use this to check the current analysis current_ana = NCA_process_current_ana(state) #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion  # This will pull out the code for the module fc_res = NCA_fetch_code(state)  # This will use patterns defined for the site to detect # columns. In this example we are detecting the id column: id_col = NCA_find_col(   patterns = state[[\"MC\"]][[\"detect_col\"]][[\"id\"]],   dscols   = names(ds$DS)) #> Warning: Unknown or uninitialised column: `DS`.  # This creates a new analysis state = NCA_new_ana(state)"},{"path":"/reference/NCA_init_state.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize NCA Module State — NCA_init_state","title":"Initialize NCA Module State — NCA_init_state","text":"Creates list initialized module state","code":""},{"path":"/reference/NCA_init_state.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize NCA Module State — NCA_init_state","text":"","code":"NCA_init_state(FM_yaml_file, MOD_yaml_file, id, id_UD, id_DW, session)"},{"path":"/reference/NCA_init_state.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize NCA Module State — NCA_init_state","text":"FM_yaml_file App configuration file FM main section. MOD_yaml_file Module configuration file MC main section. id ID string module. id_UD ID string upload data module used handle uploads name list element react_state data set stored. id_DW ID string data wrangling module process uploaded data session Shiny session variable (app) list (outside app)","code":""},{"path":"/reference/NCA_init_state.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize NCA Module State — NCA_init_state","text":"list containing empty NCA state","code":""},{"path":"/reference/NCA_load_scenario.html","id":null,"dir":"Reference","previous_headings":"","what":"Loads Pre-Defined Scenario — NCA_load_scenario","title":"Loads Pre-Defined Scenario — NCA_load_scenario","text":"Loads pre-defined analysis scneario NCA YAML config file.","code":""},{"path":"/reference/NCA_load_scenario.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Loads Pre-Defined Scenario — NCA_load_scenario","text":"","code":"NCA_load_scenario(state, ana_scenario)"},{"path":"/reference/NCA_load_scenario.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Loads Pre-Defined Scenario — NCA_load_scenario","text":"state NCA state NCA_fetch_state() ana_scenario Short name analysis scenario load config file.","code":""},{"path":"/reference/NCA_load_scenario.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Loads Pre-Defined Scenario — NCA_load_scenario","text":"NCA state object scenario loaded relevant notifications set.","code":""},{"path":"/reference/NCA_mkactive_ana.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetch PKNCA Results Object — NCA_mkactive_ana","title":"Fetch PKNCA Results Object — NCA_mkactive_ana","text":"Fetches PKNCA output specified analysis","code":""},{"path":"/reference/NCA_mkactive_ana.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetch PKNCA Results Object — NCA_mkactive_ana","text":"","code":"NCA_mkactive_ana(state, ana_id)"},{"path":"/reference/NCA_mkactive_ana.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetch PKNCA Results Object — NCA_mkactive_ana","text":"state NCA state NCA_fetch_state() ana_id Analysis ID make active.","code":""},{"path":"/reference/NCA_mkactive_ana.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetch PKNCA Results Object — NCA_mkactive_ana","text":"State analysis ID made active. JMH add example script ","code":""},{"path":"/reference/NCA_mkactive_ana.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fetch PKNCA Results Object — NCA_mkactive_ana","text":"","code":"library(ruminate) # Module IDs                                                                    id     = \"NCA\"                                                                  id_UD  = \"UD\"                                                                   id_DW  = \"DW\"                                                                   id_ASM = \"ASM\"                                                                  # We need session and input variables to be define                               sess_res = NCA_test_mksession(session=list(),                                        id     = id,                                                                    id_UD  = id_UD,                                                                 id_DW  = id_DW,                                                                 id_ASM = id_ASM,       full_session=FALSE) #> → UD: including file #> → UD:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → UD:   dest:   file.path(\"config\",\"report.docx\") #> → UD: including file #> → UD:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → UD:   dest:   file.path(\"config\",\"report.pptx\") #> → UD: including file #> → UD:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → UD:   dest:   file.path(\"config\",\"report.yaml\") #> → UD: State initialized #> → UD: module checksum updated:897d952fecbc804999396a96f9df4b20 #> → DW: including file #> → DW:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → DW:   dest:   file.path(\"config\",\"report.docx\") #> → DW: including file #> → DW:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → DW:   dest:   file.path(\"config\",\"report.pptx\") #> → DW: including file #> → DW:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → DW:   dest:   file.path(\"config\",\"report.yaml\") #> → DW: State initialized #> → DW: module checksum updated:5b0f0b05ee3ac7336a74c564bb6efdad #> → DW: module checksum updated:65801ab4b3c645aabf7edf91fc2f0d2c #> → DW: module checksum updated:7fb2dd3b16b1780c4c24f64d658dd7c7 #> → DW: module checksum updated:5ab04ea00be44c0040695a4ed6243c90 #> → DW: module checksum updated:960db107cfe9db93578f79f0ae6283e2 #> → DW: module checksum updated:f0b5d122dcb04f207cba233253b61c4b #> → DW: module checksum updated:189ed77a84bd9fcdd7b26abff8bea34a #> → DW: module checksum updated:669ec77d50652669cd3fcfd949469b37 #> → DW: module checksum updated:dd6cafa0be3b6b195d230a11e9f07f9f #> → DW: module checksum updated:5c2022c376ca8f56b839347156559890 #> → DW: module checksum updated:43640500a04674debd8e2399056c384a #> → DW: module checksum updated:f81c45ac1ef4e7b43153d8c8eaf7aed6 #> → DW: module checksum updated:207cde891d98e20c4afbb7fb5fb0aba2 #> → DW: module checksum updated:0a673e81c01cbbf33533dd65d6baf9e3 #> → DW: module checksum updated:af3f3aefd0115ed9dfdd4d6ef9d5182f #> → DW: module checksum updated:b0ccaee21e859322df0bf79d00c4b347 #> → DW: module checksum updated:2d3d6e9e38be6dea813b2d4d679e34b5 #> → DW: module checksum updated:2b60dd49b48a4e65200dc7241ad270e3 #> → DW: module checksum updated:3c92f397181a4fcdbdf2bd7dd7425e77 #> → DW: module checksum updated:92b81d7573def603649370b87c123b55 #> → DW: module checksum updated:9210264aabc0339e832b0c6bcfda32af #> → DW: module checksum updated:fe62fde1e7e738a1a35c479de9d5007b #> → DW: module checksum updated:ff3edcd4c1e58c96ea2707361916ffbc #> → DW: module checksum updated:b6cdfcef0432c5d9b1fa2bd46122ffa2 #> → DW: module checksum updated:4fa4283f1fd8fd6cf6e6e7df0669723a #> → DW: module checksum updated:cf3e139cef554b2d09dca619ee6aff41 #> → DW: module checksum updated:a9154d91a9e4b5d21f9585a6f68dd083 #> → DW: module checksum updated:4b5c6ad66658ddfa92d10ae1b0b7afa8 #> → DW: module checksum updated:591ac875a490b66a1fa7f4e7d4ba1c62 #> → DW: module checksum updated:afa3ca309cc3e6a48f542f4e8eadd54a #> → DW: module checksum updated:5c918dd4f53a4f1e56115abb09c4f332 #> → DW: module checksum updated:159ddf8c8cd26b178dfda5434bbecfa1 #> → DW: module checksum updated:8bb3c97e700998f2f73353189bd07831 #> → DW: module checksum updated:a1eceffec3ff7d9f9961683b3d07088b #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → NCA:   dest:   file.path(\"config\",\"report.docx\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → NCA:   dest:   file.path(\"config\",\"report.pptx\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → NCA:   dest:   file.path(\"config\",\"report.yaml\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → NCA:   dest:   file.path(\"config\",\"report.docx\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → NCA:   dest:   file.path(\"config\",\"report.pptx\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → NCA:   dest:   file.path(\"config\",\"report.yaml\") #> → NCA: State initialized #> → NCA: State initialized #> → NCA: loading analysis scenario: sd_iv #> → NCA: NCA_add_int: append #> → NCA: NCA_add_int: append #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> → NCA: module checksum updated:978be9216ae0d5aba7d56db8ffae0067                                                                                 # Extracting the session and input variables                                    session      = sess_res$session                                                 input        = sess_res$input                                                   react_state  = list()                                                                                                                                           # We also need configuration files                                              FM_yaml_file  = system.file(package = \"formods\",  \"templates\", \"formods.yaml\")  MOD_yaml_file = system.file(package = \"ruminate\", \"templates\", \"NCA.yaml\")                                                                                      # Getting the current module state                                              state = NCA_fetch_state(id             = id,                                                           input           = input,                                                        session         = session,                                                      FM_yaml_file    = FM_yaml_file,                                                 MOD_yaml_file   = MOD_yaml_file,                                                id_ASM          = id_ASM,                                                       id_UD           = id_UD,                                                        id_DW           = id_DW,                                                        react_state     = react_state)                                                                                                           # Pulls out the active analysis                                                 current_ana = NCA_fetch_current_ana(state)  # This will get the dataset associated with this analysis ds = NCA_fetch_ana_ds(state, current_ana)  # After making changes you can update those in the state state = NCA_set_current_ana(state, current_ana)  # You can use this to check the current analysis current_ana = NCA_process_current_ana(state) #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion  # This will pull out the code for the module fc_res = NCA_fetch_code(state)  # This will use patterns defined for the site to detect # columns. In this example we are detecting the id column: id_col = NCA_find_col(   patterns = state[[\"MC\"]][[\"detect_col\"]][[\"id\"]],   dscols   = names(ds$DS)) #> Warning: Unknown or uninitialised column: `DS`.  # This creates a new analysis state = NCA_new_ana(state)"},{"path":"/reference/NCA_new_ana.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize New Analysis — NCA_new_ana","title":"Initialize New Analysis — NCA_new_ana","text":"Creates new NCA analysis NCA module","code":""},{"path":"/reference/NCA_new_ana.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize New Analysis — NCA_new_ana","text":"","code":"NCA_new_ana(state)"},{"path":"/reference/NCA_new_ana.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize New Analysis — NCA_new_ana","text":"state NCA state NCA_fetch_state()","code":""},{"path":"/reference/NCA_new_ana.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize New Analysis — NCA_new_ana","text":"NCA state object containing new empty analysis analysis set current active analyisis","code":""},{"path":"/reference/NCA_new_ana.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Initialize New Analysis — NCA_new_ana","text":"","code":"library(ruminate) # Module IDs                                                                    id     = \"NCA\"                                                                  id_UD  = \"UD\"                                                                   id_DW  = \"DW\"                                                                   id_ASM = \"ASM\"                                                                  # We need session and input variables to be define                               sess_res = NCA_test_mksession(session=list(),                                        id     = id,                                                                    id_UD  = id_UD,                                                                 id_DW  = id_DW,                                                                 id_ASM = id_ASM,       full_session=FALSE) #> → UD: including file #> → UD:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → UD:   dest:   file.path(\"config\",\"report.docx\") #> → UD: including file #> → UD:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → UD:   dest:   file.path(\"config\",\"report.pptx\") #> → UD: including file #> → UD:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → UD:   dest:   file.path(\"config\",\"report.yaml\") #> → UD: State initialized #> → UD: module checksum updated:897d952fecbc804999396a96f9df4b20 #> → DW: including file #> → DW:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → DW:   dest:   file.path(\"config\",\"report.docx\") #> → DW: including file #> → DW:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → DW:   dest:   file.path(\"config\",\"report.pptx\") #> → DW: including file #> → DW:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → DW:   dest:   file.path(\"config\",\"report.yaml\") #> → DW: State initialized #> → DW: module checksum updated:5b0f0b05ee3ac7336a74c564bb6efdad #> → DW: module checksum updated:65801ab4b3c645aabf7edf91fc2f0d2c #> → DW: module checksum updated:7fb2dd3b16b1780c4c24f64d658dd7c7 #> → DW: module checksum updated:5ab04ea00be44c0040695a4ed6243c90 #> → DW: module checksum updated:960db107cfe9db93578f79f0ae6283e2 #> → DW: module checksum updated:f0b5d122dcb04f207cba233253b61c4b #> → DW: module checksum updated:189ed77a84bd9fcdd7b26abff8bea34a #> → DW: module checksum updated:669ec77d50652669cd3fcfd949469b37 #> → DW: module checksum updated:dd6cafa0be3b6b195d230a11e9f07f9f #> → DW: module checksum updated:5c2022c376ca8f56b839347156559890 #> → DW: module checksum updated:43640500a04674debd8e2399056c384a #> → DW: module checksum updated:f81c45ac1ef4e7b43153d8c8eaf7aed6 #> → DW: module checksum updated:207cde891d98e20c4afbb7fb5fb0aba2 #> → DW: module checksum updated:0a673e81c01cbbf33533dd65d6baf9e3 #> → DW: module checksum updated:af3f3aefd0115ed9dfdd4d6ef9d5182f #> → DW: module checksum updated:b0ccaee21e859322df0bf79d00c4b347 #> → DW: module checksum updated:2d3d6e9e38be6dea813b2d4d679e34b5 #> → DW: module checksum updated:2b60dd49b48a4e65200dc7241ad270e3 #> → DW: module checksum updated:3c92f397181a4fcdbdf2bd7dd7425e77 #> → DW: module checksum updated:92b81d7573def603649370b87c123b55 #> → DW: module checksum updated:9210264aabc0339e832b0c6bcfda32af #> → DW: module checksum updated:fe62fde1e7e738a1a35c479de9d5007b #> → DW: module checksum updated:ff3edcd4c1e58c96ea2707361916ffbc #> → DW: module checksum updated:b6cdfcef0432c5d9b1fa2bd46122ffa2 #> → DW: module checksum updated:4fa4283f1fd8fd6cf6e6e7df0669723a #> → DW: module checksum updated:cf3e139cef554b2d09dca619ee6aff41 #> → DW: module checksum updated:a9154d91a9e4b5d21f9585a6f68dd083 #> → DW: module checksum updated:4b5c6ad66658ddfa92d10ae1b0b7afa8 #> → DW: module checksum updated:591ac875a490b66a1fa7f4e7d4ba1c62 #> → DW: module checksum updated:afa3ca309cc3e6a48f542f4e8eadd54a #> → DW: module checksum updated:5c918dd4f53a4f1e56115abb09c4f332 #> → DW: module checksum updated:159ddf8c8cd26b178dfda5434bbecfa1 #> → DW: module checksum updated:8bb3c97e700998f2f73353189bd07831 #> → DW: module checksum updated:a1eceffec3ff7d9f9961683b3d07088b #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → NCA:   dest:   file.path(\"config\",\"report.docx\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → NCA:   dest:   file.path(\"config\",\"report.pptx\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → NCA:   dest:   file.path(\"config\",\"report.yaml\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → NCA:   dest:   file.path(\"config\",\"report.docx\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → NCA:   dest:   file.path(\"config\",\"report.pptx\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → NCA:   dest:   file.path(\"config\",\"report.yaml\") #> → NCA: State initialized #> → NCA: State initialized #> → NCA: loading analysis scenario: sd_iv #> → NCA: NCA_add_int: append #> → NCA: NCA_add_int: append #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> → NCA: module checksum updated:304ebc0113e8479de8668706292b0753                                                                                 # Extracting the session and input variables                                    session      = sess_res$session                                                 input        = sess_res$input                                                   react_state  = list()                                                                                                                                           # We also need configuration files                                              FM_yaml_file  = system.file(package = \"formods\",  \"templates\", \"formods.yaml\")  MOD_yaml_file = system.file(package = \"ruminate\", \"templates\", \"NCA.yaml\")                                                                                      # Getting the current module state                                              state = NCA_fetch_state(id             = id,                                                           input           = input,                                                        session         = session,                                                      FM_yaml_file    = FM_yaml_file,                                                 MOD_yaml_file   = MOD_yaml_file,                                                id_ASM          = id_ASM,                                                       id_UD           = id_UD,                                                        id_DW           = id_DW,                                                        react_state     = react_state)                                                                                                           # Pulls out the active analysis                                                 current_ana = NCA_fetch_current_ana(state)  # This will get the dataset associated with this analysis ds = NCA_fetch_ana_ds(state, current_ana)  # After making changes you can update those in the state state = NCA_set_current_ana(state, current_ana)  # You can use this to check the current analysis current_ana = NCA_process_current_ana(state) #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion  # This will pull out the code for the module fc_res = NCA_fetch_code(state)  # This will use patterns defined for the site to detect # columns. In this example we are detecting the id column: id_col = NCA_find_col(   patterns = state[[\"MC\"]][[\"detect_col\"]][[\"id\"]],   dscols   = names(ds$DS)) #> Warning: Unknown or uninitialised column: `DS`.  # This creates a new analysis state = NCA_new_ana(state)"},{"path":"/reference/NCA_process_current_ana.html","id":null,"dir":"Reference","previous_headings":"","what":"Processes Current Analysis to be Run — NCA_process_current_ana","title":"Processes Current Analysis to be Run — NCA_process_current_ana","text":"Takes current analysis checks different aspects issues make sure good go.","code":""},{"path":"/reference/NCA_process_current_ana.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Processes Current Analysis to be Run — NCA_process_current_ana","text":"","code":"NCA_process_current_ana(state)"},{"path":"/reference/NCA_process_current_ana.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Processes Current Analysis to be Run — NCA_process_current_ana","text":"state NCA state NCA_fetch_state()","code":""},{"path":"/reference/NCA_process_current_ana.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Processes Current Analysis to be Run — NCA_process_current_ana","text":"Current analysis list isgood msgs set","code":""},{"path":"/reference/NCA_process_current_ana.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Processes Current Analysis to be Run — NCA_process_current_ana","text":"","code":"library(ruminate) # Module IDs                                                                    id     = \"NCA\"                                                                  id_UD  = \"UD\"                                                                   id_DW  = \"DW\"                                                                   id_ASM = \"ASM\"                                                                  # We need session and input variables to be define                               sess_res = NCA_test_mksession(session=list(),                                        id     = id,                                                                    id_UD  = id_UD,                                                                 id_DW  = id_DW,                                                                 id_ASM = id_ASM,       full_session=FALSE) #> → UD: including file #> → UD:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → UD:   dest:   file.path(\"config\",\"report.docx\") #> → UD: including file #> → UD:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → UD:   dest:   file.path(\"config\",\"report.pptx\") #> → UD: including file #> → UD:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → UD:   dest:   file.path(\"config\",\"report.yaml\") #> → UD: State initialized #> → UD: module checksum updated:897d952fecbc804999396a96f9df4b20 #> → DW: including file #> → DW:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → DW:   dest:   file.path(\"config\",\"report.docx\") #> → DW: including file #> → DW:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → DW:   dest:   file.path(\"config\",\"report.pptx\") #> → DW: including file #> → DW:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → DW:   dest:   file.path(\"config\",\"report.yaml\") #> → DW: State initialized #> → DW: module checksum updated:5b0f0b05ee3ac7336a74c564bb6efdad #> → DW: module checksum updated:65801ab4b3c645aabf7edf91fc2f0d2c #> → DW: module checksum updated:7fb2dd3b16b1780c4c24f64d658dd7c7 #> → DW: module checksum updated:5ab04ea00be44c0040695a4ed6243c90 #> → DW: module checksum updated:960db107cfe9db93578f79f0ae6283e2 #> → DW: module checksum updated:f0b5d122dcb04f207cba233253b61c4b #> → DW: module checksum updated:189ed77a84bd9fcdd7b26abff8bea34a #> → DW: module checksum updated:669ec77d50652669cd3fcfd949469b37 #> → DW: module checksum updated:dd6cafa0be3b6b195d230a11e9f07f9f #> → DW: module checksum updated:5c2022c376ca8f56b839347156559890 #> → DW: module checksum updated:43640500a04674debd8e2399056c384a #> → DW: module checksum updated:f81c45ac1ef4e7b43153d8c8eaf7aed6 #> → DW: module checksum updated:207cde891d98e20c4afbb7fb5fb0aba2 #> → DW: module checksum updated:0a673e81c01cbbf33533dd65d6baf9e3 #> → DW: module checksum updated:af3f3aefd0115ed9dfdd4d6ef9d5182f #> → DW: module checksum updated:b0ccaee21e859322df0bf79d00c4b347 #> → DW: module checksum updated:2d3d6e9e38be6dea813b2d4d679e34b5 #> → DW: module checksum updated:2b60dd49b48a4e65200dc7241ad270e3 #> → DW: module checksum updated:3c92f397181a4fcdbdf2bd7dd7425e77 #> → DW: module checksum updated:92b81d7573def603649370b87c123b55 #> → DW: module checksum updated:9210264aabc0339e832b0c6bcfda32af #> → DW: module checksum updated:fe62fde1e7e738a1a35c479de9d5007b #> → DW: module checksum updated:ff3edcd4c1e58c96ea2707361916ffbc #> → DW: module checksum updated:b6cdfcef0432c5d9b1fa2bd46122ffa2 #> → DW: module checksum updated:4fa4283f1fd8fd6cf6e6e7df0669723a #> → DW: module checksum updated:cf3e139cef554b2d09dca619ee6aff41 #> → DW: module checksum updated:a9154d91a9e4b5d21f9585a6f68dd083 #> → DW: module checksum updated:4b5c6ad66658ddfa92d10ae1b0b7afa8 #> → DW: module checksum updated:591ac875a490b66a1fa7f4e7d4ba1c62 #> → DW: module checksum updated:afa3ca309cc3e6a48f542f4e8eadd54a #> → DW: module checksum updated:5c918dd4f53a4f1e56115abb09c4f332 #> → DW: module checksum updated:159ddf8c8cd26b178dfda5434bbecfa1 #> → DW: module checksum updated:8bb3c97e700998f2f73353189bd07831 #> → DW: module checksum updated:a1eceffec3ff7d9f9961683b3d07088b #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → NCA:   dest:   file.path(\"config\",\"report.docx\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → NCA:   dest:   file.path(\"config\",\"report.pptx\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → NCA:   dest:   file.path(\"config\",\"report.yaml\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → NCA:   dest:   file.path(\"config\",\"report.docx\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → NCA:   dest:   file.path(\"config\",\"report.pptx\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → NCA:   dest:   file.path(\"config\",\"report.yaml\") #> → NCA: State initialized #> → NCA: State initialized #> → NCA: loading analysis scenario: sd_iv #> → NCA: NCA_add_int: append #> → NCA: NCA_add_int: append #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> → NCA: module checksum updated:29ab43fa05fe9cced37ac06ed1040822                                                                                 # Extracting the session and input variables                                    session      = sess_res$session                                                 input        = sess_res$input                                                   react_state  = list()                                                                                                                                           # We also need configuration files                                              FM_yaml_file  = system.file(package = \"formods\",  \"templates\", \"formods.yaml\")  MOD_yaml_file = system.file(package = \"ruminate\", \"templates\", \"NCA.yaml\")                                                                                      # Getting the current module state                                              state = NCA_fetch_state(id             = id,                                                           input           = input,                                                        session         = session,                                                      FM_yaml_file    = FM_yaml_file,                                                 MOD_yaml_file   = MOD_yaml_file,                                                id_ASM          = id_ASM,                                                       id_UD           = id_UD,                                                        id_DW           = id_DW,                                                        react_state     = react_state)                                                                                                           # Pulls out the active analysis                                                 current_ana = NCA_fetch_current_ana(state)  # This will get the dataset associated with this analysis ds = NCA_fetch_ana_ds(state, current_ana)  # After making changes you can update those in the state state = NCA_set_current_ana(state, current_ana)  # You can use this to check the current analysis current_ana = NCA_process_current_ana(state) #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion  # This will pull out the code for the module fc_res = NCA_fetch_code(state)  # This will use patterns defined for the site to detect # columns. In this example we are detecting the id column: id_col = NCA_find_col(   patterns = state[[\"MC\"]][[\"detect_col\"]][[\"id\"]],   dscols   = names(ds$DS)) #> Warning: Unknown or uninitialised column: `DS`.  # This creates a new analysis state = NCA_new_ana(state)"},{"path":"/reference/NCA_set_current_ana.html","id":null,"dir":"Reference","previous_headings":"","what":"Sets Current Analysis — NCA_set_current_ana","title":"Sets Current Analysis — NCA_set_current_ana","text":"Takes NCA state analysis list sets figure list value active figure","code":""},{"path":"/reference/NCA_set_current_ana.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sets Current Analysis — NCA_set_current_ana","text":"","code":"NCA_set_current_ana(state, ana)"},{"path":"/reference/NCA_set_current_ana.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sets Current Analysis — NCA_set_current_ana","text":"state NCA state NCA_fetch_state() ana Analysis list NCA_fetch_current_ana","code":""},{"path":"/reference/NCA_set_current_ana.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sets Current Analysis — NCA_set_current_ana","text":"State current analysis updated","code":""},{"path":"/reference/NCA_set_current_ana.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sets Current Analysis — NCA_set_current_ana","text":"","code":"library(ruminate) # Module IDs                                                                    id     = \"NCA\"                                                                  id_UD  = \"UD\"                                                                   id_DW  = \"DW\"                                                                   id_ASM = \"ASM\"                                                                  # We need session and input variables to be define                               sess_res = NCA_test_mksession(session=list(),                                        id     = id,                                                                    id_UD  = id_UD,                                                                 id_DW  = id_DW,                                                                 id_ASM = id_ASM,       full_session=FALSE) #> → UD: including file #> → UD:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → UD:   dest:   file.path(\"config\",\"report.docx\") #> → UD: including file #> → UD:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → UD:   dest:   file.path(\"config\",\"report.pptx\") #> → UD: including file #> → UD:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → UD:   dest:   file.path(\"config\",\"report.yaml\") #> → UD: State initialized #> → UD: module checksum updated:897d952fecbc804999396a96f9df4b20 #> → DW: including file #> → DW:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → DW:   dest:   file.path(\"config\",\"report.docx\") #> → DW: including file #> → DW:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → DW:   dest:   file.path(\"config\",\"report.pptx\") #> → DW: including file #> → DW:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → DW:   dest:   file.path(\"config\",\"report.yaml\") #> → DW: State initialized #> → DW: module checksum updated:5b0f0b05ee3ac7336a74c564bb6efdad #> → DW: module checksum updated:65801ab4b3c645aabf7edf91fc2f0d2c #> → DW: module checksum updated:7fb2dd3b16b1780c4c24f64d658dd7c7 #> → DW: module checksum updated:5ab04ea00be44c0040695a4ed6243c90 #> → DW: module checksum updated:960db107cfe9db93578f79f0ae6283e2 #> → DW: module checksum updated:f0b5d122dcb04f207cba233253b61c4b #> → DW: module checksum updated:189ed77a84bd9fcdd7b26abff8bea34a #> → DW: module checksum updated:669ec77d50652669cd3fcfd949469b37 #> → DW: module checksum updated:dd6cafa0be3b6b195d230a11e9f07f9f #> → DW: module checksum updated:5c2022c376ca8f56b839347156559890 #> → DW: module checksum updated:43640500a04674debd8e2399056c384a #> → DW: module checksum updated:f81c45ac1ef4e7b43153d8c8eaf7aed6 #> → DW: module checksum updated:207cde891d98e20c4afbb7fb5fb0aba2 #> → DW: module checksum updated:0a673e81c01cbbf33533dd65d6baf9e3 #> → DW: module checksum updated:af3f3aefd0115ed9dfdd4d6ef9d5182f #> → DW: module checksum updated:b0ccaee21e859322df0bf79d00c4b347 #> → DW: module checksum updated:2d3d6e9e38be6dea813b2d4d679e34b5 #> → DW: module checksum updated:2b60dd49b48a4e65200dc7241ad270e3 #> → DW: module checksum updated:3c92f397181a4fcdbdf2bd7dd7425e77 #> → DW: module checksum updated:92b81d7573def603649370b87c123b55 #> → DW: module checksum updated:9210264aabc0339e832b0c6bcfda32af #> → DW: module checksum updated:fe62fde1e7e738a1a35c479de9d5007b #> → DW: module checksum updated:ff3edcd4c1e58c96ea2707361916ffbc #> → DW: module checksum updated:b6cdfcef0432c5d9b1fa2bd46122ffa2 #> → DW: module checksum updated:4fa4283f1fd8fd6cf6e6e7df0669723a #> → DW: module checksum updated:cf3e139cef554b2d09dca619ee6aff41 #> → DW: module checksum updated:a9154d91a9e4b5d21f9585a6f68dd083 #> → DW: module checksum updated:4b5c6ad66658ddfa92d10ae1b0b7afa8 #> → DW: module checksum updated:591ac875a490b66a1fa7f4e7d4ba1c62 #> → DW: module checksum updated:afa3ca309cc3e6a48f542f4e8eadd54a #> → DW: module checksum updated:5c918dd4f53a4f1e56115abb09c4f332 #> → DW: module checksum updated:159ddf8c8cd26b178dfda5434bbecfa1 #> → DW: module checksum updated:8bb3c97e700998f2f73353189bd07831 #> → DW: module checksum updated:a1eceffec3ff7d9f9961683b3d07088b #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → NCA:   dest:   file.path(\"config\",\"report.docx\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → NCA:   dest:   file.path(\"config\",\"report.pptx\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → NCA:   dest:   file.path(\"config\",\"report.yaml\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → NCA:   dest:   file.path(\"config\",\"report.docx\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → NCA:   dest:   file.path(\"config\",\"report.pptx\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → NCA:   dest:   file.path(\"config\",\"report.yaml\") #> → NCA: State initialized #> → NCA: State initialized #> → NCA: loading analysis scenario: sd_iv #> → NCA: NCA_add_int: append #> → NCA: NCA_add_int: append #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> → NCA: module checksum updated:39113c1887bb044891dcb7b92eb793a6                                                                                 # Extracting the session and input variables                                    session      = sess_res$session                                                 input        = sess_res$input                                                   react_state  = list()                                                                                                                                           # We also need configuration files                                              FM_yaml_file  = system.file(package = \"formods\",  \"templates\", \"formods.yaml\")  MOD_yaml_file = system.file(package = \"ruminate\", \"templates\", \"NCA.yaml\")                                                                                      # Getting the current module state                                              state = NCA_fetch_state(id             = id,                                                           input           = input,                                                        session         = session,                                                      FM_yaml_file    = FM_yaml_file,                                                 MOD_yaml_file   = MOD_yaml_file,                                                id_ASM          = id_ASM,                                                       id_UD           = id_UD,                                                        id_DW           = id_DW,                                                        react_state     = react_state)                                                                                                           # Pulls out the active analysis                                                 current_ana = NCA_fetch_current_ana(state)  # This will get the dataset associated with this analysis ds = NCA_fetch_ana_ds(state, current_ana)  # After making changes you can update those in the state state = NCA_set_current_ana(state, current_ana)  # You can use this to check the current analysis current_ana = NCA_process_current_ana(state) #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion  # This will pull out the code for the module fc_res = NCA_fetch_code(state)  # This will use patterns defined for the site to detect # columns. In this example we are detecting the id column: id_col = NCA_find_col(   patterns = state[[\"MC\"]][[\"detect_col\"]][[\"id\"]],   dscols   = names(ds$DS)) #> Warning: Unknown or uninitialised column: `DS`.  # This creates a new analysis state = NCA_new_ana(state)"},{"path":"/reference/NCA_test_mksession.html","id":null,"dir":"Reference","previous_headings":"","what":"Populate Session Data for Module Testing — NCA_test_mksession","title":"Populate Session Data for Module Testing — NCA_test_mksession","text":"Populates supplied session variable testing.","code":""},{"path":"/reference/NCA_test_mksession.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Populate Session Data for Module Testing — NCA_test_mksession","text":"","code":"NCA_test_mksession(   session,   id = \"NCA\",   id_UD = \"UD\",   id_DW = \"DW\",   id_ASM = \"ASM\",   full_session = TRUE )"},{"path":"/reference/NCA_test_mksession.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Populate Session Data for Module Testing — NCA_test_mksession","text":"session Shiny session variable (app) list (outside app) id ID string corresponds ID used call modules UI elements id_UD ID string corresponds ID used call UD modules UI elements id_DW ID string corresponds ID used call DW modules UI elements id_ASM ID string corresponds ID used call ASM modules UI elements full_session Boolean indicate full test session created (default TRUE).","code":""},{"path":"/reference/NCA_test_mksession.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Populate Session Data for Module Testing — NCA_test_mksession","text":"list following elements isgood: Boolean indicating exit status function. session: value Shiny session variable (app) list (outside app) initialization. input: value shiny input end session initialization. state: App state. rsc: react_state components.","code":""},{"path":"/reference/NCA_test_mksession.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Populate Session Data for Module Testing — NCA_test_mksession","text":"","code":"sess_res = NCA_test_mksession(session=list(), full_session=FALSE) #> → UD: including file #> → UD:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → UD:   dest:   file.path(\"config\",\"report.docx\") #> → UD: including file #> → UD:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → UD:   dest:   file.path(\"config\",\"report.pptx\") #> → UD: including file #> → UD:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → UD:   dest:   file.path(\"config\",\"report.yaml\") #> → UD: State initialized #> → UD: module checksum updated:897d952fecbc804999396a96f9df4b20 #> → DW: including file #> → DW:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → DW:   dest:   file.path(\"config\",\"report.docx\") #> → DW: including file #> → DW:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → DW:   dest:   file.path(\"config\",\"report.pptx\") #> → DW: including file #> → DW:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → DW:   dest:   file.path(\"config\",\"report.yaml\") #> → DW: State initialized #> → DW: module checksum updated:5b0f0b05ee3ac7336a74c564bb6efdad #> → DW: module checksum updated:65801ab4b3c645aabf7edf91fc2f0d2c #> → DW: module checksum updated:7fb2dd3b16b1780c4c24f64d658dd7c7 #> → DW: module checksum updated:5ab04ea00be44c0040695a4ed6243c90 #> → DW: module checksum updated:960db107cfe9db93578f79f0ae6283e2 #> → DW: module checksum updated:f0b5d122dcb04f207cba233253b61c4b #> → DW: module checksum updated:189ed77a84bd9fcdd7b26abff8bea34a #> → DW: module checksum updated:669ec77d50652669cd3fcfd949469b37 #> → DW: module checksum updated:dd6cafa0be3b6b195d230a11e9f07f9f #> → DW: module checksum updated:5c2022c376ca8f56b839347156559890 #> → DW: module checksum updated:43640500a04674debd8e2399056c384a #> → DW: module checksum updated:f81c45ac1ef4e7b43153d8c8eaf7aed6 #> → DW: module checksum updated:207cde891d98e20c4afbb7fb5fb0aba2 #> → DW: module checksum updated:0a673e81c01cbbf33533dd65d6baf9e3 #> → DW: module checksum updated:af3f3aefd0115ed9dfdd4d6ef9d5182f #> → DW: module checksum updated:b0ccaee21e859322df0bf79d00c4b347 #> → DW: module checksum updated:2d3d6e9e38be6dea813b2d4d679e34b5 #> → DW: module checksum updated:2b60dd49b48a4e65200dc7241ad270e3 #> → DW: module checksum updated:3c92f397181a4fcdbdf2bd7dd7425e77 #> → DW: module checksum updated:92b81d7573def603649370b87c123b55 #> → DW: module checksum updated:9210264aabc0339e832b0c6bcfda32af #> → DW: module checksum updated:fe62fde1e7e738a1a35c479de9d5007b #> → DW: module checksum updated:ff3edcd4c1e58c96ea2707361916ffbc #> → DW: module checksum updated:b6cdfcef0432c5d9b1fa2bd46122ffa2 #> → DW: module checksum updated:4fa4283f1fd8fd6cf6e6e7df0669723a #> → DW: module checksum updated:cf3e139cef554b2d09dca619ee6aff41 #> → DW: module checksum updated:a9154d91a9e4b5d21f9585a6f68dd083 #> → DW: module checksum updated:4b5c6ad66658ddfa92d10ae1b0b7afa8 #> → DW: module checksum updated:591ac875a490b66a1fa7f4e7d4ba1c62 #> → DW: module checksum updated:afa3ca309cc3e6a48f542f4e8eadd54a #> → DW: module checksum updated:5c918dd4f53a4f1e56115abb09c4f332 #> → DW: module checksum updated:159ddf8c8cd26b178dfda5434bbecfa1 #> → DW: module checksum updated:8bb3c97e700998f2f73353189bd07831 #> → DW: module checksum updated:a1eceffec3ff7d9f9961683b3d07088b #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → NCA:   dest:   file.path(\"config\",\"report.docx\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → NCA:   dest:   file.path(\"config\",\"report.pptx\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → NCA:   dest:   file.path(\"config\",\"report.yaml\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → NCA:   dest:   file.path(\"config\",\"report.docx\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → NCA:   dest:   file.path(\"config\",\"report.pptx\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → NCA:   dest:   file.path(\"config\",\"report.yaml\") #> → NCA: State initialized #> → NCA: State initialized #> → NCA: loading analysis scenario: sd_iv #> → NCA: NCA_add_int: append #> → NCA: NCA_add_int: append #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> → NCA: module checksum updated:361a783ad81bd56643934582612f2ad3"},{"path":"/reference/apply_route_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Applies Route Mapping to Dataset — apply_route_map","title":"Applies Route Mapping to Dataset — apply_route_map","text":"Used convert nonstandard dose route values (.e. \"IV\") standard values (\"intravascular\").","code":""},{"path":"/reference/apply_route_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Applies Route Mapping to Dataset — apply_route_map","text":"","code":"apply_route_map(route_map = list(), route_col = NULL, DS = NULL)"},{"path":"/reference/apply_route_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Applies Route Mapping to Dataset — apply_route_map","text":"route_map List names corresponding route replacement vector regular expressions match. route_col Column name route data. DS Dataframe containing dataset.","code":""},{"path":"/reference/apply_route_map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Applies Route Mapping to Dataset — apply_route_map","text":"Dataset route mapping applied.","code":""},{"path":"/reference/apply_route_map.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Applies Route Mapping to Dataset — apply_route_map","text":"","code":"if(system.file(package=\"readxl\") !=\"\"){ library(readxl) #loading a dataset data_file =  system.file(package=\"formods\",\"test_data\",\"TEST_DATA.xlsx\") myDS = readxl::read_excel(path=data_file, sheet=\"DATA\")   route_map = list(    intravascular = c(\"^(?i)iv$\"),    extravascular = c(\"^(?i)sc$\", \"^(?i)oral\")  )  utils::head(myDS[[\"ROUTE\"]])  myDS = apply_route_map(route_map = route_map,                        route_col = \"ROUTE\",                        DS        = myDS)  utils::head(myDS[[\"ROUTE\"]]) } #> [1] \"intravascular\" \"intravascular\" \"intravascular\" \"intravascular\" #> [5] \"intravascular\" \"intravascular\""},{"path":"/reference/build_span.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct Table Span From Components — build_span","title":"Construct Table Span From Components — build_span","text":"Takes large table, common rows, header information constructs table subset components using supplied ranges rows columns.","code":""},{"path":"/reference/build_span.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct Table Span From Components — build_span","text":"","code":"build_span(   table_body = NULL,   row_common = NULL,   table_body_head = NULL,   row_common_head = NULL,   header_format = \"text\",   obnd = NULL,   row_sel = NULL,   col_sel = NULL,   table_alignment = \"center\",   inner_border = officer::fp_border(color = \"black\", width = 0.3),   outer_border = officer::fp_border(color = \"black\", width = 2),   set_header_inner_border_v = TRUE,   set_header_inner_border_h = TRUE,   set_header_outer_border = TRUE,   set_body_inner_border_v = TRUE,   set_body_inner_border_h = FALSE,   set_body_outer_border = TRUE,   notes_detect = NULL )"},{"path":"/reference/build_span.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct Table Span From Components — build_span","text":"table_body Data frame body large table. row_common Data frame common rows. table_body_head Data frame matrix headers table body. row_common_head Data frame matrix headers common rows. header_format Format header either \"text\" (default) \"md\" markdown. obnd Optional onbrand object used format markdown. default NULL value use default formatting. row_sel Indices rows build table . col_sel Indices columns build table . table_alignment Character string specifying alignment #'table (body headers). Can \"center\" (default), \"left\", \"right\", \"justify\" inner_border Border object inner border lines defined using officer::fp_border() outer_border Border object outer border lines defined using officer::fp_border() set_header_inner_border_v Boolean value enable disable inner vertical borders headers set_header_inner_border_h Boolean value enable disable inner horizontal borders headers set_header_outer_border Boolean value enable disable outer border headers set_body_inner_border_v Boolean value enable disable inner vertical borders body set_body_inner_border_h Boolean value enable disable inner horizontal borders body set_body_outer_border Boolean value enable disable outer border borders body notes_detect Vector strings detect output tables (example c(\"NC\", \"BLQ\")).","code":""},{"path":"/reference/build_span.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct Table Span From Components — build_span","text":"list following elements df:     Data frame built table. ft:     data frame flextable object. notes:  Note placeholders found table.","code":""},{"path":"/reference/build_span.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Construct Table Span From Components — build_span","text":"way data frames relate mapped . dimensions different data frames identified (nrow x ncol)","code":"#                            col_sel #                      |<--------------->| # #|--------------------------------------------| --- #|                 |   .                 .    |  ^ #|                 |   .                 .    |  | #| row_common_head |   . table_body_head .    |  | m #|      m x n      |   .      m x c      .    |  | #|                 |   .                 .    |  v #|--------------------------------------------| --- #|                 |   .                 .    |  ^ #|                 |   .                 .    |  | #|    row_common   |   .   table_body    .    |  | #|      r x n      |   .     r x c       .    |  | #|                 |   .                 .    |  | #|.................|..........................|  |     - #|                 |   ./  /  /  /  /  / .    |  |     ^ #|                 |   .  /  /  /  /  /  .    |  | r   | #|                 |   . /  /  /  /  /  /.    |  |     | row_sel #|                 |   ./  /  /  /  /  / .    |  |     | #|                 |   .  /  /  /  /  /  .    |  |     v #|.................|...../../../../../../.... |  |     - #|                 |   .                 .    |  | #|                 |   .                 .    |  v #|--------------------------------------------| --- # #|<--------------->|<------------------------>| #        n                    c"},{"path":"/reference/build_span.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct Table Span From Components — build_span","text":"","code":"library(formods) library(readxl) library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union library(tidyr)  # First we need to create some data.  # This will read in a test dataset: DS = readxl::read_excel(  path  = system.file(package=\"formods\",                       \"test_data\",                       \"TEST_DATA.xlsx\"),  sheet = \"DATA\")  # This will filter the dataset down and modify the formatting DS = dplyr::filter(DS, EVID == 0)                          |>   dplyr::filter(ID <= 30)                                  |>   dplyr::select(ID, TIME, DV, CMT)                         |>   dplyr::mutate(CMT  = ifelse(.data[[\"CMT\"]] == \"C_ng_ml\",                               \"Test Article\",                               .data[[\"CMT\"]]))              |>   dplyr::select(ID, TIME, DV, CMT)                         |>   dplyr::mutate(CMT = ifelse(.data[[\"CMT\"]] == \"BM_ng_ml\",                              \"Biomarker\",                              .data[[\"CMT\"]]))               |>   dplyr::rename(Analyte = \"CMT\")                           |>   dplyr::mutate(DV = ifelse(.data[[\"DV\"]] == 0, \"BQL\", .data[[\"DV\"]]))  # This represents the large table we want to split up into smaller tables  wide_df = tidyr::pivot_wider(DS,   values_from = \"DV\",   names_from  = \"ID\")               |>   dplyr::arrange(Analyte, TIME)     |>   dplyr::mutate(TIME = as.character(.data[[\"TIME\"]]))      # The first two columns represent the rows # that are common across the tables: row_common = wide_df[,1:2]  # The remaining columns represent the body of the table: table_body = wide_df[,3:ncol(wide_df)]  # Next we create matrices that contain the header  # information for each component above: row_common_head = matrix(   data  = c(\"Time\", \"Analyte\",             \"(hr)\", \"(ng/ml)\"),   ncol  = 2,   byrow = TRUE)  table_body_head = matrix(   data  = c(rep(\"Subject ID\", times=ncol(table_body)),              names(table_body)),   ncol  = ncol(table_body),   byrow = TRUE)   # This builds all of the tables: span_res = span_table(table_body      = table_body,                       row_common      = row_common,                       table_body_head = table_body_head,                       row_common_head = row_common_head,                       notes_detect    = c(\"BQL\"))  # This will show you the first one: span_res$tables[[\"Table 1\"]]$ft #> a flextable object. #> col_keys: `TIME`, `Analyte`, `1`, `2`, `3`, `4`, `5`, `6`  #> header has 2 row(s)  #> body has 20 row(s)  #> original dataset sample:  #>   TIME   Analyte    1    2     3    4    5     6 #> 1    0 Biomarker 1250 1030   831 1170 1140   868 #> 2 0.25 Biomarker 1255 1032 832.2 1172 1145 869.4 #> 3  0.5 Biomarker 1259 1034 833.4 1174 1149 870.9 #> 4    1 Biomarker 1269 1037 835.8 1178 1158 873.7 #> 5    2 Biomarker 1287 1045 840.5 1186 1176 879.4  # This will build a single table with the rows and  # column ranges specified bs_res =   build_span(table_body      = table_body,                       row_common      = row_common,                       table_body_head = table_body_head,                       row_common_head = row_common_head,                       col_sel         = c(1:10),                       row_sel         = c(1:10),                       notes_detect    = c(\"BQL\"))  # This will show you the result: bs_res$ft #> a flextable object. #> col_keys: `TIME`, `Analyte`, `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`  #> header has 2 row(s)  #> body has 10 row(s)  #> original dataset sample:  #>   TIME   Analyte    1    2     3    4    5     6   7    8    9    10 #> 1    0 Biomarker 1250 1030   831 1170 1140   868 643 1050 1130   744 #> 2 0.25 Biomarker 1255 1032 832.2 1172 1145 869.4 644 1051 1134 745.9 #> 3  0.5 Biomarker 1259 1034 833.4 1174 1149 870.9 645 1052 1138 747.8 #> 4    1 Biomarker 1269 1037 835.8 1178 1158 873.7 647 1055 1146 751.7 #> 5    2 Biomarker 1287 1045 840.5 1186 1176 879.4 651 1059 1162 759.2"},{"path":"/reference/dose_records_builder.html","id":null,"dir":"Reference","previous_headings":"","what":"Builds Dose Records Dataframe — dose_records_builder","title":"Builds Dose Records Dataframe — dose_records_builder","text":"Takes information columns dataset constructs dosing records.","code":""},{"path":"/reference/dose_records_builder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Builds Dose Records Dataframe — dose_records_builder","text":"","code":"dose_records_builder(   NCA_DS = NULL,   dose_from = NULL,   col_id = NULL,   col_time = NULL,   col_ntime = NULL,   col_route = NULL,   col_dose = NULL,   col_cycle = NULL,   col_dur = NULL,   col_evid = NULL,   col_analyte = NULL,   col_group = NULL )"},{"path":"/reference/dose_records_builder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Builds Dose Records Dataframe — dose_records_builder","text":"NCA_DS Dataset containing dosing records. dose_from Method dose extraction either \"cols\" \"rows\". col_id Name column subject ID. col_time Name column time since first dose. col_ntime Name column time since last dose (required dose_from=\"cols\"). col_route Name column route information. col_dose Name column last dose given. col_cycle Name column dose cycle (required dose_from=\"cols\"). col_dur Name column dose duration. col_evid Name column event ID (required dose_from=\"rows\"). col_analyte Name column analyte (optional). col_group Names columns grouping information (optionl).","code":""},{"path":"/reference/dose_records_builder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Builds Dose Records Dataframe — dose_records_builder","text":"list containing following elements isgood:           Return status function. msgs:             Messages passed back user. dose_rec:","code":""},{"path":"/reference/dose_records_builder.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Builds Dose Records Dataframe — dose_records_builder","text":"","code":"if(system.file(package=\"readxl\") !=\"\"){ library(dplyr) library(readxl) library(stringr)  # Example data file: data_file =  system.file(package=\"formods\",\"test_data\",\"TEST_DATA.xlsx\")  # Dataset formatted to extract dosing from columns DS_cols = readxl::read_excel(path=data_file, sheet=\"DATA\")        |>  dplyr::filter(EVID == 0)                                |>  dplyr::filter(DOSE %in% c(3))                           |>  dplyr::filter(str_detect(string=Cohort, \"^MD\"))         |>  dplyr::filter(CMT == \"C_ng_ml\")  drb_res = dose_records_builder(  NCA_DS     = DS_cols,  dose_from  = \"cols\",  col_id     = \"ID\",  col_time   = \"TIME_DY\",  col_ntime  = \"NTIME_DY\",  col_route  = \"ROUTE\",  col_cycle  = \"DOSE_NUM\",  col_dose   = \"DOSE\",  col_group  = \"Cohort\")  utils::head(drb_res$dose_rec)  # Dataset formatted to extract dosing from rows (records) DS_rows = readxl::read_excel(path=data_file, sheet=\"DATA\")        |>  dplyr::filter(DOSE %in% c(3))                                   |>  dplyr::filter(str_detect(string=Cohort, \"^MD\"))                 |>  dplyr::filter(CMT %in% c(\"Ac\", \"C_ng_ml\"))  drb_res = dose_records_builder(  NCA_DS     = DS_rows,  dose_from  = \"rows\",  col_id     = \"ID\",  col_time   = \"TIME_DY\",  col_ntime  = \"NTIME_DY\",  col_route  = \"ROUTE\",  col_dose   = \"AMT\",  col_evid   = \"EVID\",  col_group  = \"Cohort\")  utils::head(drb_res$dose_rec) } #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union #> # A tibble: 0 × 5 #> # ℹ 5 variables: ID <dbl>, TIME_DY <dbl>, AMT <dbl>, ROUTE <chr>, Cohort <chr>"},{"path":"/reference/ft_apply_md.html","id":null,"dir":"Reference","previous_headings":"","what":"Render Markdown in flextable Object — ft_apply_md","title":"Render Markdown in flextable Object — ft_apply_md","text":"Takes flextable object renders markdown specified part.","code":""},{"path":"/reference/ft_apply_md.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render Markdown in flextable Object — ft_apply_md","text":"","code":"ft_apply_md(ft, obnd = NULL, part = \"body\")"},{"path":"/reference/ft_apply_md.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render Markdown in flextable Object — ft_apply_md","text":"ft Flextable object. obnd Optional onbrand object used format markdown. default NULL value use default formatting. part Part table can one \"\", \"body\" (default), \"header\", \"footer\"","code":""},{"path":"/reference/ft_apply_md.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Render Markdown in flextable Object — ft_apply_md","text":"flextable markdown applied","code":""},{"path":"/reference/mk_figure_ind_obs.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates Figures of Individual Observations from PKNCA Result — mk_figure_ind_obs","title":"Creates Figures of Individual Observations from PKNCA Result — mk_figure_ind_obs","text":"Takes output PKNCA creates ggplot figures faceted subject id highlighting certain NCA aspects (e.g. points used half-life)","code":""},{"path":"/reference/mk_figure_ind_obs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates Figures of Individual Observations from PKNCA Result — mk_figure_ind_obs","text":"","code":"mk_figure_ind_obs(   nca_res,   OBS_LAB = \"Concentration ===CONCUNITS===\",   TIME_LAB = \"Time ===TIMEUNITS===\",   OBS_STRING = \"Observation\",   BLQ_STRING = \"BLQ\",   NA_STRING = \"Missing\",   log_scale = TRUE,   scales = \"fixed\",   nfrows = 4,   nfcols = 3 )"},{"path":"/reference/mk_figure_ind_obs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates Figures of Individual Observations from PKNCA Result — mk_figure_ind_obs","text":"nca_res Output PKNCA. OBS_LAB Label observation axis optional ===CONCUNITS=== placeholder units. TIME_LAB Label time axis optional ===TIMEUNITS=== placeholder units. OBS_STRING Label observation data. BLQ_STRING Label BLQ data. NA_STRING Label missing data. log_scale Boolean variable control y-scale (TRUE: Log 10, FALSE: linear). scales String determine scales used faceting. Can either \"fixed\", \"free\", \"free_x\", \"free_y\". nfrows Number facet rows per page. nfcols Number facet cols per page.","code":""},{"path":"/reference/mk_figure_ind_obs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates Figures of Individual Observations from PKNCA Result — mk_figure_ind_obs","text":"List containing element figures list figure pages (\"Figure 1\", \"Figure 2\", etc.). also list containing two elements: gg:    ggplot object page. notes: Placeholder future notes, NULL now.","code":""},{"path":"/reference/mk_figure_ind_obs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates Figures of Individual Observations from PKNCA Result — mk_figure_ind_obs","text":"","code":"id     = \"NCA\" id_UD  = \"UD\" id_DW  = \"DW\" id_ASM = \"ASM\"  # We need a state variable to be define sess_res = NCA_test_mksession(session=list(),      id     = id,      id_UD  = id_UD,      id_DW  = id_DW,      id_ASM = id_ASM,      full_session=FALSE) #> → UD: including file #> → UD:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → UD:   dest:   file.path(\"config\",\"report.docx\") #> → UD: including file #> → UD:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → UD:   dest:   file.path(\"config\",\"report.pptx\") #> → UD: including file #> → UD:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → UD:   dest:   file.path(\"config\",\"report.yaml\") #> → UD: State initialized #> → UD: module checksum updated:897d952fecbc804999396a96f9df4b20 #> → DW: including file #> → DW:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → DW:   dest:   file.path(\"config\",\"report.docx\") #> → DW: including file #> → DW:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → DW:   dest:   file.path(\"config\",\"report.pptx\") #> → DW: including file #> → DW:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → DW:   dest:   file.path(\"config\",\"report.yaml\") #> → DW: State initialized #> → DW: module checksum updated:5b0f0b05ee3ac7336a74c564bb6efdad #> → DW: module checksum updated:65801ab4b3c645aabf7edf91fc2f0d2c #> → DW: module checksum updated:7fb2dd3b16b1780c4c24f64d658dd7c7 #> → DW: module checksum updated:5ab04ea00be44c0040695a4ed6243c90 #> → DW: module checksum updated:960db107cfe9db93578f79f0ae6283e2 #> → DW: module checksum updated:f0b5d122dcb04f207cba233253b61c4b #> → DW: module checksum updated:189ed77a84bd9fcdd7b26abff8bea34a #> → DW: module checksum updated:669ec77d50652669cd3fcfd949469b37 #> → DW: module checksum updated:dd6cafa0be3b6b195d230a11e9f07f9f #> → DW: module checksum updated:5c2022c376ca8f56b839347156559890 #> → DW: module checksum updated:43640500a04674debd8e2399056c384a #> → DW: module checksum updated:f81c45ac1ef4e7b43153d8c8eaf7aed6 #> → DW: module checksum updated:207cde891d98e20c4afbb7fb5fb0aba2 #> → DW: module checksum updated:0a673e81c01cbbf33533dd65d6baf9e3 #> → DW: module checksum updated:af3f3aefd0115ed9dfdd4d6ef9d5182f #> → DW: module checksum updated:b0ccaee21e859322df0bf79d00c4b347 #> → DW: module checksum updated:2d3d6e9e38be6dea813b2d4d679e34b5 #> → DW: module checksum updated:2b60dd49b48a4e65200dc7241ad270e3 #> → DW: module checksum updated:3c92f397181a4fcdbdf2bd7dd7425e77 #> → DW: module checksum updated:92b81d7573def603649370b87c123b55 #> → DW: module checksum updated:9210264aabc0339e832b0c6bcfda32af #> → DW: module checksum updated:fe62fde1e7e738a1a35c479de9d5007b #> → DW: module checksum updated:ff3edcd4c1e58c96ea2707361916ffbc #> → DW: module checksum updated:b6cdfcef0432c5d9b1fa2bd46122ffa2 #> → DW: module checksum updated:4fa4283f1fd8fd6cf6e6e7df0669723a #> → DW: module checksum updated:cf3e139cef554b2d09dca619ee6aff41 #> → DW: module checksum updated:a9154d91a9e4b5d21f9585a6f68dd083 #> → DW: module checksum updated:4b5c6ad66658ddfa92d10ae1b0b7afa8 #> → DW: module checksum updated:591ac875a490b66a1fa7f4e7d4ba1c62 #> → DW: module checksum updated:afa3ca309cc3e6a48f542f4e8eadd54a #> → DW: module checksum updated:5c918dd4f53a4f1e56115abb09c4f332 #> → DW: module checksum updated:159ddf8c8cd26b178dfda5434bbecfa1 #> → DW: module checksum updated:8bb3c97e700998f2f73353189bd07831 #> → DW: module checksum updated:a1eceffec3ff7d9f9961683b3d07088b #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → NCA:   dest:   file.path(\"config\",\"report.docx\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → NCA:   dest:   file.path(\"config\",\"report.pptx\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → NCA:   dest:   file.path(\"config\",\"report.yaml\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → NCA:   dest:   file.path(\"config\",\"report.docx\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → NCA:   dest:   file.path(\"config\",\"report.pptx\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → NCA:   dest:   file.path(\"config\",\"report.yaml\") #> → NCA: State initialized #> → NCA: State initialized #> → NCA: loading analysis scenario: sd_iv #> → NCA: NCA_add_int: append #> → NCA: NCA_add_int: append #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> → NCA: module checksum updated:9373a4689802b677b6a102822905965f  state = sess_res$state  # Pulls out the active analysis current_ana = NCA_fetch_current_ana(state)  # This is the raw PKNCA output pknca_res = NCA_fetch_ana_pknca(state, current_ana)  # Building the figure mk_res = mk_figure_ind_obs(nca_res = pknca_res) mk_res$figures$Figure_1$gg"},{"path":"/reference/mk_rx_obj.html","id":null,"dir":"Reference","previous_headings":"","what":"Makes an rxode2 Object — mk_rx_obj","title":"Makes an rxode2 Object — mk_rx_obj","text":"Creates rxode2 object model (either rxode2 function NONMEM file)","code":""},{"path":"/reference/mk_rx_obj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Makes an rxode2 Object — mk_rx_obj","text":"","code":"mk_rx_obj(type, model)"},{"path":"/reference/mk_rx_obj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Makes an rxode2 Object — mk_rx_obj","text":"type Type supplied model can \"rxode2\", \"NONMEM\" model List containing relevant information model. depend model types. rxode2: supplied model rxode2 format. fcn_def: Character string containing function definition. fcn_obj: Name funciton object created fcn_def. NONMEM: supplied model NONMEM format (either control model_file: Character string containing NONMEM model file.","code":""},{"path":"/reference/mk_rx_obj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Makes an rxode2 Object — mk_rx_obj","text":"Results FM_tc() running model. include field isgood boolean variable indicating success failure. See documentation FM_tc() format returned evaluation results failure address . successful capture field contain following: fcn_obj: function name. rx_obj: built rxode2 object.","code":""},{"path":"/reference/mk_rx_obj.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Makes an rxode2 Object — mk_rx_obj","text":"","code":"fcn_def = ' my_func = function ()    {        description <- \"One compartment PK model with linear clearance\"        ini({            lka <- 0.45            label(\"Absorption rate (Ka)\")            lcl <- 1            label(\"Clearance (CL)\")            lvc <- 3.45            label(\"Central volume of distribution (V)\")            propSd <- c(0, 0.5)            label(\"Proportional residual error (fraction)\")        })        model({            ka <- exp(lka)            cl <- exp(lcl)            vc <- exp(lvc)            cp <- linCmt()            cp ~ prop(propSd)        })     }' fcn_obj = \"my_func\" model = list(fcn_def = fcn_def,              fcn_obj = fcn_obj)   rx_res = mk_rx_obj(\"rxode2\", model)  # function object rx_res[[\"capture\"]][[\"fcn_obj\"]] #> NULL  # rxode2 object rx_res[[\"capture\"]][[\"rx_obj\"]] #> NULL"},{"path":"/reference/mk_table_ind_obs.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates Tables of Individual Observations from PKNCA Result — mk_table_ind_obs","title":"Creates Tables of Individual Observations from PKNCA Result — mk_table_ind_obs","text":"Takes output PKNCA creates tabular view individual observation data. can spread several tables (pages) necessary.","code":""},{"path":"/reference/mk_table_ind_obs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates Tables of Individual Observations from PKNCA Result — mk_table_ind_obs","text":"","code":"mk_table_ind_obs(   nca_res,   obnd = NULL,   not_sampled = \"NS\",   blq = \"BLQ\",   digits = 3,   text_format = \"text\",   max_height = 7,   max_width = 6.5,   max_row = NULL,   max_col = 9,   notes_detect = NULL,   rows_by = \"time\" )"},{"path":"/reference/mk_table_ind_obs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates Tables of Individual Observations from PKNCA Result — mk_table_ind_obs","text":"nca_res Output PKNCA. obnd onbrand reporting object. not_sampled Character string use missing data pivoting. blq Character string use indicate data level quantification (value 0 dataset). digits Number significant figures report (set NULL disable rounding) text_format Either \"md\" markdown \"text\" (default) plain text. max_height Maximum height final table inches (value NULL use 100 inches). max_width Maximum width final table inches (value NULL use 100 inches). max_row Maximum number rows page. Spillover hang side page.. max_col Maximum number columns page. Spillover wrapped multiple pages. notes_detect Vector strings detect output tables (example c(\"NC\", \"BLQ\")). rows_by Can either \"time\" \"id\". \"time\", column time separate column subject ID. rows_by set \"id\" column ID column individual time.","code":""},{"path":"/reference/mk_table_ind_obs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates Tables of Individual Observations from PKNCA Result — mk_table_ind_obs","text":"List containing following elements isgood:      Boolean indicating exit status function. one_table:   Dataframe entire table first lines containing header. one_body:    Dataframe entire table (data ). one_header:  Dataframe entire header (row body, data). tables:      Named list tables. list element output msgs:        Vector text messages describing errors found. format build_span.","code":""},{"path":"/reference/mk_table_ind_obs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates Tables of Individual Observations from PKNCA Result — mk_table_ind_obs","text":"Time Concentration (ng/mL) ID (day) 1 2 3 0 BLQ BLQ BLQ 1 690 750 670 2 588 577 576 3 506 508 501 4 438 476 441 7 303 425 320 21 123 274 139 28 95.5 220 104 35 75.8 177 77.8 42 60.6 142 58.6","code":"id     = \"NCA\" id_UD  = \"UD\" id_DW  = \"DW\" id_ASM = \"ASM\"  # We need a state variable to be define sess_res = NCA_test_mksession(session=list(),      id     = id,      id_UD  = id_UD,      id_DW  = id_DW,      id_ASM = id_ASM,      full_session=FALSE) #> → UD: including file #> → UD:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → UD:   dest:   file.path(\"config\",\"report.docx\") #> → UD: including file #> → UD:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → UD:   dest:   file.path(\"config\",\"report.pptx\") #> → UD: including file #> → UD:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → UD:   dest:   file.path(\"config\",\"report.yaml\") #> → UD: State initialized #> → UD: module checksum updated:897d952fecbc804999396a96f9df4b20 #> → DW: including file #> → DW:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → DW:   dest:   file.path(\"config\",\"report.docx\") #> → DW: including file #> → DW:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → DW:   dest:   file.path(\"config\",\"report.pptx\") #> → DW: including file #> → DW:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → DW:   dest:   file.path(\"config\",\"report.yaml\") #> → DW: State initialized #> → DW: module checksum updated:5b0f0b05ee3ac7336a74c564bb6efdad #> → DW: module checksum updated:65801ab4b3c645aabf7edf91fc2f0d2c #> → DW: module checksum updated:7fb2dd3b16b1780c4c24f64d658dd7c7 #> → DW: module checksum updated:5ab04ea00be44c0040695a4ed6243c90 #> → DW: module checksum updated:960db107cfe9db93578f79f0ae6283e2 #> → DW: module checksum updated:f0b5d122dcb04f207cba233253b61c4b #> → DW: module checksum updated:189ed77a84bd9fcdd7b26abff8bea34a #> → DW: module checksum updated:669ec77d50652669cd3fcfd949469b37 #> → DW: module checksum updated:dd6cafa0be3b6b195d230a11e9f07f9f #> → DW: module checksum updated:5c2022c376ca8f56b839347156559890 #> → DW: module checksum updated:43640500a04674debd8e2399056c384a #> → DW: module checksum updated:f81c45ac1ef4e7b43153d8c8eaf7aed6 #> → DW: module checksum updated:207cde891d98e20c4afbb7fb5fb0aba2 #> → DW: module checksum updated:0a673e81c01cbbf33533dd65d6baf9e3 #> → DW: module checksum updated:af3f3aefd0115ed9dfdd4d6ef9d5182f #> → DW: module checksum updated:b0ccaee21e859322df0bf79d00c4b347 #> → DW: module checksum updated:2d3d6e9e38be6dea813b2d4d679e34b5 #> → DW: module checksum updated:2b60dd49b48a4e65200dc7241ad270e3 #> → DW: module checksum updated:3c92f397181a4fcdbdf2bd7dd7425e77 #> → DW: module checksum updated:92b81d7573def603649370b87c123b55 #> → DW: module checksum updated:9210264aabc0339e832b0c6bcfda32af #> → DW: module checksum updated:fe62fde1e7e738a1a35c479de9d5007b #> → DW: module checksum updated:ff3edcd4c1e58c96ea2707361916ffbc #> → DW: module checksum updated:b6cdfcef0432c5d9b1fa2bd46122ffa2 #> → DW: module checksum updated:4fa4283f1fd8fd6cf6e6e7df0669723a #> → DW: module checksum updated:cf3e139cef554b2d09dca619ee6aff41 #> → DW: module checksum updated:a9154d91a9e4b5d21f9585a6f68dd083 #> → DW: module checksum updated:4b5c6ad66658ddfa92d10ae1b0b7afa8 #> → DW: module checksum updated:591ac875a490b66a1fa7f4e7d4ba1c62 #> → DW: module checksum updated:afa3ca309cc3e6a48f542f4e8eadd54a #> → DW: module checksum updated:5c918dd4f53a4f1e56115abb09c4f332 #> → DW: module checksum updated:159ddf8c8cd26b178dfda5434bbecfa1 #> → DW: module checksum updated:8bb3c97e700998f2f73353189bd07831 #> → DW: module checksum updated:a1eceffec3ff7d9f9961683b3d07088b #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → NCA:   dest:   file.path(\"config\",\"report.docx\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → NCA:   dest:   file.path(\"config\",\"report.pptx\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → NCA:   dest:   file.path(\"config\",\"report.yaml\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → NCA:   dest:   file.path(\"config\",\"report.docx\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → NCA:   dest:   file.path(\"config\",\"report.pptx\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → NCA:   dest:   file.path(\"config\",\"report.yaml\") #> → NCA: State initialized #> → NCA: State initialized #> → NCA: loading analysis scenario: sd_iv #> → NCA: NCA_add_int: append #> → NCA: NCA_add_int: append #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> → NCA: module checksum updated:780da7b530f877b23064d8148d613716  state = sess_res$state  # Pulls out the active analysis current_ana = NCA_fetch_current_ana(state)  # This is the raw PKNCA output pknca_res = NCA_fetch_ana_pknca(state, current_ana)  # Building the figure mk_res = mk_table_ind_obs(nca_res = pknca_res) mk_res$tables[[\"Table 1\"]]$ft .cl-0003f540{}.cl-0000e224{font-family:'Helvetica';font-size:11pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-00021d4c{margin:0;text-align:center;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-00022526{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 0.3pt solid rgba(0, 0, 0, 1.00);border-top: 2pt solid rgba(0, 0, 0, 1.00);border-left: 2pt solid rgba(0, 0, 0, 1.00);border-right: 0.3pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-00022530{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 0.3pt solid rgba(0, 0, 0, 1.00);border-top: 2pt solid rgba(0, 0, 0, 1.00);border-left: 0.3pt solid rgba(0, 0, 0, 1.00);border-right: 2pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-00022531{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 0.3pt solid rgba(0, 0, 0, 1.00);border-top: 2pt solid rgba(0, 0, 0, 1.00);border-left: 0.3pt solid rgba(0, 0, 0, 1.00);border-right: 0.3pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-0002253a{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(0, 0, 0, 1.00);border-top: 0.3pt solid rgba(0, 0, 0, 1.00);border-left: 2pt solid rgba(0, 0, 0, 1.00);border-right: 0.3pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-0002253b{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(0, 0, 0, 1.00);border-top: 0.3pt solid rgba(0, 0, 0, 1.00);border-left: 0.3pt solid rgba(0, 0, 0, 1.00);border-right: 0.3pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-00022544{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(0, 0, 0, 1.00);border-top: 0.3pt solid rgba(0, 0, 0, 1.00);border-left: 0.3pt solid rgba(0, 0, 0, 1.00);border-right: 2pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-00022545{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 2pt solid rgba(0, 0, 0, 1.00);border-right: 0.3pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-0002254e{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0.3pt solid rgba(0, 0, 0, 1.00);border-right: 0.3pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-0002254f{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0.3pt solid rgba(0, 0, 0, 1.00);border-right: 2pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-00022558{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 2pt solid rgba(0, 0, 0, 1.00);border-right: 0.3pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-00022559{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0.3pt solid rgba(0, 0, 0, 1.00);border-right: 0.3pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-0002255a{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0.3pt solid rgba(0, 0, 0, 1.00);border-right: 2pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}TimeConcentration (ng/mL) by ID(day)1230BLQBLQBLQ16907506702588577576350650850144384764417303425320211232741392895.52201043575.817777.84260.614258.6"},{"path":"/reference/mk_table_nca_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Tabular Output from PKNCA Results — mk_table_nca_params","title":"Create Tabular Output from PKNCA Results — mk_table_nca_params","text":"Create paginated tables PKNCA use reports Shiny apps.","code":""},{"path":"/reference/mk_table_nca_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Tabular Output from PKNCA Results — mk_table_nca_params","text":"","code":"mk_table_nca_params(   nca_res,   type = \"individual\",   grouping = \"interval\",   not_calc = \"NC\",   obnd = NULL,   nps = NULL,   mult_str = \"*\",   infinity = \"inf\",   digits = NULL,   text_format = \"text\",   notes_detect = NULL,   max_height = 7,   max_width = 6.5,   max_row = NULL,   max_col = NULL )"},{"path":"/reference/mk_table_nca_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Tabular Output from PKNCA Results — mk_table_nca_params","text":"nca_res Output PKNCA. type Type table generate. Can either \"individual\" \"summary\"]. grouping group columns tables. Can either \"interval\" \"parameter\"]. not_calc Text string replace NA values indicated values calculated. obnd onbrand reporting object. nps NCA parameter summary table following columns. parameter:      PKNCA Paramter name. text:           Name used text output. md:             Name used markdown output. latex:          Name used latex output. description:    Verbose textual description parameter. mult_str Text string replace * values units. infinity Text string replace infinity time intervals column headers. digits Number significant figures report (set NULL disable rounding) text_format Either \"md\" markdown \"text\" (default) plain text. notes_detect Vector strings detect output tables (example c(\"NC\", \"BLQ\")). max_height Maximum height final table inches (value NULL use 100 inches). max_width Maximum width final table inches (value NULL use 100 inches). max_row Maximum number rows page. Spillover hang side page.. max_col Maximum number columns page. Spillover wrapped multiple pages.","code":""},{"path":"/reference/mk_table_nca_params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Tabular Output from PKNCA Results — mk_table_nca_params","text":"list containing following elements raw_nca:     Raw PKNCA output. isgood:      Boolean indicating exit status function. one_table:   Dataframe entire table first lines containing header. one_body:    Dataframe entire table (data ). one_header:  Dataframe entire header (row body, data). tables:      Named list tables. list element output msgs:        Vector text messages describing errors found. format build_span.","code":""},{"path":"/reference/mk_table_nca_params.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Tabular Output from PKNCA Results — mk_table_nca_params","text":"ID AUClast Cmax AUCinf,obs  day*ng/mL ng/mL day*ng/mL [0,21] [0,inf] 1 5,900 690 9,590 2 8,240 750 17,000 3 6,140 670 9,520","code":"id     = \"NCA\" id_UD  = \"UD\" id_DW  = \"DW\" id_ASM = \"ASM\"  # We need a state variable to be define sess_res = NCA_test_mksession(session=list(),      id     = id,      id_UD  = id_UD,      id_DW  = id_DW,      id_ASM = id_ASM,      full_session=FALSE) #> → UD: including file #> → UD:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → UD:   dest:   file.path(\"config\",\"report.docx\") #> → UD: including file #> → UD:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → UD:   dest:   file.path(\"config\",\"report.pptx\") #> → UD: including file #> → UD:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → UD:   dest:   file.path(\"config\",\"report.yaml\") #> → UD: State initialized #> → UD: module checksum updated:897d952fecbc804999396a96f9df4b20 #> → DW: including file #> → DW:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → DW:   dest:   file.path(\"config\",\"report.docx\") #> → DW: including file #> → DW:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → DW:   dest:   file.path(\"config\",\"report.pptx\") #> → DW: including file #> → DW:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → DW:   dest:   file.path(\"config\",\"report.yaml\") #> → DW: State initialized #> → DW: module checksum updated:5b0f0b05ee3ac7336a74c564bb6efdad #> → DW: module checksum updated:65801ab4b3c645aabf7edf91fc2f0d2c #> → DW: module checksum updated:7fb2dd3b16b1780c4c24f64d658dd7c7 #> → DW: module checksum updated:5ab04ea00be44c0040695a4ed6243c90 #> → DW: module checksum updated:960db107cfe9db93578f79f0ae6283e2 #> → DW: module checksum updated:f0b5d122dcb04f207cba233253b61c4b #> → DW: module checksum updated:189ed77a84bd9fcdd7b26abff8bea34a #> → DW: module checksum updated:669ec77d50652669cd3fcfd949469b37 #> → DW: module checksum updated:dd6cafa0be3b6b195d230a11e9f07f9f #> → DW: module checksum updated:5c2022c376ca8f56b839347156559890 #> → DW: module checksum updated:43640500a04674debd8e2399056c384a #> → DW: module checksum updated:f81c45ac1ef4e7b43153d8c8eaf7aed6 #> → DW: module checksum updated:207cde891d98e20c4afbb7fb5fb0aba2 #> → DW: module checksum updated:0a673e81c01cbbf33533dd65d6baf9e3 #> → DW: module checksum updated:af3f3aefd0115ed9dfdd4d6ef9d5182f #> → DW: module checksum updated:b0ccaee21e859322df0bf79d00c4b347 #> → DW: module checksum updated:2d3d6e9e38be6dea813b2d4d679e34b5 #> → DW: module checksum updated:2b60dd49b48a4e65200dc7241ad270e3 #> → DW: module checksum updated:3c92f397181a4fcdbdf2bd7dd7425e77 #> → DW: module checksum updated:92b81d7573def603649370b87c123b55 #> → DW: module checksum updated:9210264aabc0339e832b0c6bcfda32af #> → DW: module checksum updated:fe62fde1e7e738a1a35c479de9d5007b #> → DW: module checksum updated:ff3edcd4c1e58c96ea2707361916ffbc #> → DW: module checksum updated:b6cdfcef0432c5d9b1fa2bd46122ffa2 #> → DW: module checksum updated:4fa4283f1fd8fd6cf6e6e7df0669723a #> → DW: module checksum updated:cf3e139cef554b2d09dca619ee6aff41 #> → DW: module checksum updated:a9154d91a9e4b5d21f9585a6f68dd083 #> → DW: module checksum updated:4b5c6ad66658ddfa92d10ae1b0b7afa8 #> → DW: module checksum updated:591ac875a490b66a1fa7f4e7d4ba1c62 #> → DW: module checksum updated:afa3ca309cc3e6a48f542f4e8eadd54a #> → DW: module checksum updated:5c918dd4f53a4f1e56115abb09c4f332 #> → DW: module checksum updated:159ddf8c8cd26b178dfda5434bbecfa1 #> → DW: module checksum updated:8bb3c97e700998f2f73353189bd07831 #> → DW: module checksum updated:a1eceffec3ff7d9f9961683b3d07088b #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → NCA:   dest:   file.path(\"config\",\"report.docx\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → NCA:   dest:   file.path(\"config\",\"report.pptx\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → NCA:   dest:   file.path(\"config\",\"report.yaml\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → NCA:   dest:   file.path(\"config\",\"report.docx\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → NCA:   dest:   file.path(\"config\",\"report.pptx\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → NCA:   dest:   file.path(\"config\",\"report.yaml\") #> → NCA: State initialized #> → NCA: State initialized #> → NCA: loading analysis scenario: sd_iv #> → NCA: NCA_add_int: append #> → NCA: NCA_add_int: append #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> → NCA: module checksum updated:6b6bfc876c85a30c2b9a4f186281fe21  state = sess_res$state  # Pulls out the active analysis current_ana = NCA_fetch_current_ana(state)  # This is the raw PKNCA output pknca_res = NCA_fetch_ana_pknca(state, current_ana)  # Parameter reporting details from the ruminate configuration nps  = state[[\"NCA\"]][[\"nca_parameters\"]][[\"summary\"]]  # Building the figure mk_res = mk_table_nca_params(nca_res = pknca_res, nps=nps, digits=3) mk_res$tables[[\"Table 1\"]]$ft .cl-01570c16{}.cl-0153f2f6{font-family:'Helvetica';font-size:11pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-01553f1c{margin:0;text-align:center;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-0155470a{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 0.3pt solid rgba(0, 0, 0, 1.00);border-top: 2pt solid rgba(0, 0, 0, 1.00);border-left: 2pt solid rgba(0, 0, 0, 1.00);border-right: 0.3pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-0155470b{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 0.3pt solid rgba(0, 0, 0, 1.00);border-top: 2pt solid rgba(0, 0, 0, 1.00);border-left: 0.3pt solid rgba(0, 0, 0, 1.00);border-right: 0.3pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-0155470c{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 0.3pt solid rgba(0, 0, 0, 1.00);border-top: 2pt solid rgba(0, 0, 0, 1.00);border-left: 0.3pt solid rgba(0, 0, 0, 1.00);border-right: 2pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-01554714{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(0, 0, 0, 1.00);border-top: 0.3pt solid rgba(0, 0, 0, 1.00);border-left: 2pt solid rgba(0, 0, 0, 1.00);border-right: 0.3pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-01554715{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 0.3pt solid rgba(0, 0, 0, 1.00);border-top: 0.3pt solid rgba(0, 0, 0, 1.00);border-left: 0.3pt solid rgba(0, 0, 0, 1.00);border-right: 0.3pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-0155471e{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 0.3pt solid rgba(0, 0, 0, 1.00);border-top: 0.3pt solid rgba(0, 0, 0, 1.00);border-left: 0.3pt solid rgba(0, 0, 0, 1.00);border-right: 2pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-0155471f{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(0, 0, 0, 1.00);border-top: 0.3pt solid rgba(0, 0, 0, 1.00);border-left: 0.3pt solid rgba(0, 0, 0, 1.00);border-right: 0.3pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-01554728{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(0, 0, 0, 1.00);border-top: 0.3pt solid rgba(0, 0, 0, 1.00);border-left: 0.3pt solid rgba(0, 0, 0, 1.00);border-right: 2pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-01554729{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 2pt solid rgba(0, 0, 0, 1.00);border-right: 0.3pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-0155472a{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0.3pt solid rgba(0, 0, 0, 1.00);border-right: 0.3pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-01554732{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0.3pt solid rgba(0, 0, 0, 1.00);border-right: 2pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-01554733{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 2pt solid rgba(0, 0, 0, 1.00);border-right: 0.3pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-01554734{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0.3pt solid rgba(0, 0, 0, 1.00);border-right: 0.3pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-0155473c{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0.3pt solid rgba(0, 0, 0, 1.00);border-right: 2pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}IDAUClastCmaxAUCinf,obsday*ng/mLng/mLday*ng/mL[0,21][0,inf]15,9006909,59028,24075017,00036,1406709,520"},{"path":"/reference/nca_builder.html","id":null,"dir":"Reference","previous_headings":"","what":"Builds NCA Code from ui Elements — nca_builder","title":"Builds NCA Code from ui Elements — nca_builder","text":"Takes current analysis state object creates code run analysis","code":""},{"path":"/reference/nca_builder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Builds NCA Code from ui Elements — nca_builder","text":"","code":"nca_builder(state)"},{"path":"/reference/nca_builder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Builds NCA Code from ui Elements — nca_builder","text":"state NCA state NCA_fetch_state() JMH update return list ","code":""},{"path":"/reference/nca_builder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Builds NCA Code from ui Elements — nca_builder","text":"NCA state NCA current analysis built.","code":""},{"path":"/reference/nca_builder.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Builds NCA Code from ui Elements — nca_builder","text":"","code":"# Module IDs id     = \"NCA\" id_UD  = \"UD\" id_DW  = \"DW\" id_ASM = \"ASM\"  # We need a module variables to be defined sess_res = NCA_test_mksession(session=list(),      id     = id,      id_UD  = id_UD,      id_DW  = id_DW,      id_ASM = id_ASM,      full_session=FALSE) #> → UD: including file #> → UD:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → UD:   dest:   file.path(\"config\",\"report.docx\") #> → UD: including file #> → UD:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → UD:   dest:   file.path(\"config\",\"report.pptx\") #> → UD: including file #> → UD:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → UD:   dest:   file.path(\"config\",\"report.yaml\") #> → UD: State initialized #> → UD: module checksum updated:897d952fecbc804999396a96f9df4b20 #> → DW: including file #> → DW:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → DW:   dest:   file.path(\"config\",\"report.docx\") #> → DW: including file #> → DW:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → DW:   dest:   file.path(\"config\",\"report.pptx\") #> → DW: including file #> → DW:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → DW:   dest:   file.path(\"config\",\"report.yaml\") #> → DW: State initialized #> → DW: module checksum updated:5b0f0b05ee3ac7336a74c564bb6efdad #> → DW: module checksum updated:65801ab4b3c645aabf7edf91fc2f0d2c #> → DW: module checksum updated:7fb2dd3b16b1780c4c24f64d658dd7c7 #> → DW: module checksum updated:5ab04ea00be44c0040695a4ed6243c90 #> → DW: module checksum updated:960db107cfe9db93578f79f0ae6283e2 #> → DW: module checksum updated:f0b5d122dcb04f207cba233253b61c4b #> → DW: module checksum updated:189ed77a84bd9fcdd7b26abff8bea34a #> → DW: module checksum updated:669ec77d50652669cd3fcfd949469b37 #> → DW: module checksum updated:dd6cafa0be3b6b195d230a11e9f07f9f #> → DW: module checksum updated:5c2022c376ca8f56b839347156559890 #> → DW: module checksum updated:43640500a04674debd8e2399056c384a #> → DW: module checksum updated:f81c45ac1ef4e7b43153d8c8eaf7aed6 #> → DW: module checksum updated:207cde891d98e20c4afbb7fb5fb0aba2 #> → DW: module checksum updated:0a673e81c01cbbf33533dd65d6baf9e3 #> → DW: module checksum updated:af3f3aefd0115ed9dfdd4d6ef9d5182f #> → DW: module checksum updated:b0ccaee21e859322df0bf79d00c4b347 #> → DW: module checksum updated:2d3d6e9e38be6dea813b2d4d679e34b5 #> → DW: module checksum updated:2b60dd49b48a4e65200dc7241ad270e3 #> → DW: module checksum updated:3c92f397181a4fcdbdf2bd7dd7425e77 #> → DW: module checksum updated:92b81d7573def603649370b87c123b55 #> → DW: module checksum updated:9210264aabc0339e832b0c6bcfda32af #> → DW: module checksum updated:fe62fde1e7e738a1a35c479de9d5007b #> → DW: module checksum updated:ff3edcd4c1e58c96ea2707361916ffbc #> → DW: module checksum updated:b6cdfcef0432c5d9b1fa2bd46122ffa2 #> → DW: module checksum updated:4fa4283f1fd8fd6cf6e6e7df0669723a #> → DW: module checksum updated:cf3e139cef554b2d09dca619ee6aff41 #> → DW: module checksum updated:a9154d91a9e4b5d21f9585a6f68dd083 #> → DW: module checksum updated:4b5c6ad66658ddfa92d10ae1b0b7afa8 #> → DW: module checksum updated:591ac875a490b66a1fa7f4e7d4ba1c62 #> → DW: module checksum updated:afa3ca309cc3e6a48f542f4e8eadd54a #> → DW: module checksum updated:5c918dd4f53a4f1e56115abb09c4f332 #> → DW: module checksum updated:159ddf8c8cd26b178dfda5434bbecfa1 #> → DW: module checksum updated:8bb3c97e700998f2f73353189bd07831 #> → DW: module checksum updated:a1eceffec3ff7d9f9961683b3d07088b #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → NCA:   dest:   file.path(\"config\",\"report.docx\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → NCA:   dest:   file.path(\"config\",\"report.pptx\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → NCA:   dest:   file.path(\"config\",\"report.yaml\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → NCA:   dest:   file.path(\"config\",\"report.docx\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → NCA:   dest:   file.path(\"config\",\"report.pptx\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → NCA:   dest:   file.path(\"config\",\"report.yaml\") #> → NCA: State initialized #> → NCA: State initialized #> → NCA: loading analysis scenario: sd_iv #> → NCA: NCA_add_int: append #> → NCA: NCA_add_int: append #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> → NCA: module checksum updated:e51b9783447fc4e9328b21388291eb69  state = sess_res$state  state = nca_builder(state) #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion"},{"path":"/reference/ruminate.html","id":null,"dir":"Reference","previous_headings":"","what":"ruminate: Shiny app and module to facilitate pharamacometrics analysis — ruminate","title":"ruminate: Shiny app and module to facilitate pharamacometrics analysis — ruminate","text":"done creating Shiny interface different tools data transformation (dplyr tidyr), plotting (ggplot2), noncompartmental analysis (PKNCA). results can reported Excel, Word PowerPoint. state app can saved loaded later date. saved, script generated reproduce different actions Shiny interface. Runs pharmacometrics ruminate app.","code":""},{"path":"/reference/ruminate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ruminate: Shiny app and module to facilitate pharamacometrics analysis — ruminate","text":"","code":"ruminate(   host = \"127.0.0.1\",   port = 3838,   development = FALSE,   server_opts = list(shiny.maxRequestSize = 30 * 1024^2),   mksession = FALSE )"},{"path":"/reference/ruminate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ruminate: Shiny app and module to facilitate pharamacometrics analysis — ruminate","text":"host Hostname server (\"127.0.0.1\") port Port number app (3838) development Boolean variable indicating server_opts List options (names) vlues (value) e.g. list(shiny.maxRequestSize = 30 * 1024^2). mksession Boolean value, TRUE load test session data app testing also load development modules (FALSE).","code":""},{"path":"/reference/ruminate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ruminate: Shiny app and module to facilitate pharamacometrics analysis — ruminate","text":"Nothing returned, function just runs built-ruminate app.","code":""},{"path":[]},{"path":"/reference/ruminate.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ruminate: Shiny app and module to facilitate pharamacometrics analysis — ruminate","text":"Maintainer: John Harrold john.m.harrold@gmail.com (ORCID)","code":""},{"path":"/reference/ruminate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ruminate: Shiny app and module to facilitate pharamacometrics analysis — ruminate","text":"","code":"if (interactive()) { ruminate() }"},{"path":"/reference/run_nca_components.html","id":null,"dir":"Reference","previous_headings":"","what":"Runs NCA for the Current Analysis — run_nca_components","title":"Runs NCA for the Current Analysis — run_nca_components","text":"Takes current state runs current analysis state.","code":""},{"path":"/reference/run_nca_components.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Runs NCA for the Current Analysis — run_nca_components","text":"","code":"run_nca_components(   state,   components = c(\"nca\", \"fg_ind_obs\", \"tb_ind_obs\", \"tb_ind_params\") )"},{"path":"/reference/run_nca_components.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Runs NCA for the Current Analysis — run_nca_components","text":"state NCA state NCA_fetch_state() components List components run. default run following. just need regenerate figure based current nca results can just specify component. valid components: nca:               Run NCA analysis fg_ind_obs:        Build figure(s) indiviudal observations. tb_ind_obs:        Build table(s) indiviudal observations. tb_ind_params:     Build table(s) indiviudal parameters.","code":""},{"path":"/reference/run_nca_components.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Runs NCA for the Current Analysis — run_nca_components","text":"List following components: isgood:    Return status function. msgs:      Error messages issues encountered. nca_res:   PKNCA results run successful.","code":""},{"path":"/reference/run_nca_components.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Runs NCA for the Current Analysis — run_nca_components","text":"","code":"# We need a state object to use below sess_res = NCA_test_mksession(session=list(), full_session=FALSE) #> → UD: including file #> → UD:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → UD:   dest:   file.path(\"config\",\"report.docx\") #> → UD: including file #> → UD:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → UD:   dest:   file.path(\"config\",\"report.pptx\") #> → UD: including file #> → UD:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → UD:   dest:   file.path(\"config\",\"report.yaml\") #> → UD: State initialized #> → UD: module checksum updated:897d952fecbc804999396a96f9df4b20 #> → DW: including file #> → DW:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → DW:   dest:   file.path(\"config\",\"report.docx\") #> → DW: including file #> → DW:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → DW:   dest:   file.path(\"config\",\"report.pptx\") #> → DW: including file #> → DW:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → DW:   dest:   file.path(\"config\",\"report.yaml\") #> → DW: State initialized #> → DW: module checksum updated:5b0f0b05ee3ac7336a74c564bb6efdad #> → DW: module checksum updated:65801ab4b3c645aabf7edf91fc2f0d2c #> → DW: module checksum updated:7fb2dd3b16b1780c4c24f64d658dd7c7 #> → DW: module checksum updated:5ab04ea00be44c0040695a4ed6243c90 #> → DW: module checksum updated:960db107cfe9db93578f79f0ae6283e2 #> → DW: module checksum updated:f0b5d122dcb04f207cba233253b61c4b #> → DW: module checksum updated:189ed77a84bd9fcdd7b26abff8bea34a #> → DW: module checksum updated:669ec77d50652669cd3fcfd949469b37 #> → DW: module checksum updated:dd6cafa0be3b6b195d230a11e9f07f9f #> → DW: module checksum updated:5c2022c376ca8f56b839347156559890 #> → DW: module checksum updated:43640500a04674debd8e2399056c384a #> → DW: module checksum updated:f81c45ac1ef4e7b43153d8c8eaf7aed6 #> → DW: module checksum updated:207cde891d98e20c4afbb7fb5fb0aba2 #> → DW: module checksum updated:0a673e81c01cbbf33533dd65d6baf9e3 #> → DW: module checksum updated:af3f3aefd0115ed9dfdd4d6ef9d5182f #> → DW: module checksum updated:b0ccaee21e859322df0bf79d00c4b347 #> → DW: module checksum updated:2d3d6e9e38be6dea813b2d4d679e34b5 #> → DW: module checksum updated:2b60dd49b48a4e65200dc7241ad270e3 #> → DW: module checksum updated:3c92f397181a4fcdbdf2bd7dd7425e77 #> → DW: module checksum updated:92b81d7573def603649370b87c123b55 #> → DW: module checksum updated:9210264aabc0339e832b0c6bcfda32af #> → DW: module checksum updated:fe62fde1e7e738a1a35c479de9d5007b #> → DW: module checksum updated:ff3edcd4c1e58c96ea2707361916ffbc #> → DW: module checksum updated:b6cdfcef0432c5d9b1fa2bd46122ffa2 #> → DW: module checksum updated:4fa4283f1fd8fd6cf6e6e7df0669723a #> → DW: module checksum updated:cf3e139cef554b2d09dca619ee6aff41 #> → DW: module checksum updated:a9154d91a9e4b5d21f9585a6f68dd083 #> → DW: module checksum updated:4b5c6ad66658ddfa92d10ae1b0b7afa8 #> → DW: module checksum updated:591ac875a490b66a1fa7f4e7d4ba1c62 #> → DW: module checksum updated:afa3ca309cc3e6a48f542f4e8eadd54a #> → DW: module checksum updated:5c918dd4f53a4f1e56115abb09c4f332 #> → DW: module checksum updated:159ddf8c8cd26b178dfda5434bbecfa1 #> → DW: module checksum updated:8bb3c97e700998f2f73353189bd07831 #> → DW: module checksum updated:a1eceffec3ff7d9f9961683b3d07088b #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → NCA:   dest:   file.path(\"config\",\"report.docx\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → NCA:   dest:   file.path(\"config\",\"report.pptx\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → NCA:   dest:   file.path(\"config\",\"report.yaml\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.docx\") #> → NCA:   dest:   file.path(\"config\",\"report.docx\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.pptx\") #> → NCA:   dest:   file.path(\"config\",\"report.pptx\") #> → NCA: including file #> → NCA:   source: file.path(system.file(package=\"onbrand\"), \"templates\", \"report.yaml\") #> → NCA:   dest:   file.path(\"config\",\"report.yaml\") #> → NCA: State initialized #> → NCA: State initialized #> → NCA: loading analysis scenario: sd_iv #> → NCA: NCA_add_int: append #> → NCA: NCA_add_int: append #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> → NCA: module checksum updated:683dd40c5b6c011eb3eb65e7a985ac87 state = sess_res$state  state = run_nca_components(state, components=\"tb_ind_params\") #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> → NCA: module checksum updated:683dd40c5b6c011eb3eb65e7a985ac87"},{"path":"/reference/span_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Spread Large Table Over Smaller Tables — span_table","title":"Spread Large Table Over Smaller Tables — span_table","text":"Takes large table spreads smaller tables paginate . preserve common row  information left separate columns according maximum specifications. final tables widths less equal max_col max_width, heights less equal max_row max_height.","code":""},{"path":"/reference/span_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spread Large Table Over Smaller Tables — span_table","text":"","code":"span_table(   table_body = NULL,   row_common = NULL,   table_body_head = NULL,   row_common_head = NULL,   header_format = \"text\",   obnd = NULL,   max_row = 20,   max_col = 10,   max_height = 7,   max_width = 6.5,   table_alignment = \"center\",   inner_border = officer::fp_border(color = \"black\", width = 0.3),   outer_border = officer::fp_border(color = \"black\", width = 2),   set_header_inner_border_v = TRUE,   set_header_inner_border_h = TRUE,   set_header_outer_border = TRUE,   set_body_inner_border_v = TRUE,   set_body_inner_border_h = FALSE,   set_body_outer_border = TRUE,   notes_detect = NULL )"},{"path":"/reference/span_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spread Large Table Over Smaller Tables — span_table","text":"table_body Data frame body large table. row_common Data frame common rows. table_body_head Data frame matrix headers table body. row_common_head Data frame matrix headers common rows. header_format Format header either \"text\" (default) \"md\" markdown. obnd Optional onbrand object used format markdown. default NULL value use default formatting. max_row Maximum number rows output tables (value NULL set max_row number rows table). max_col Maximum number columns output tables (value NULL set max_col number columns table). max_height Maximum height final table inches (value NULL use 100 inches). max_width Maximum width final table inches (value NULL use 100 inches). table_alignment Character string specifying alignment #'table (body headers). Can \"center\" (default), \"left\", \"right\", \"justify\" inner_border Border object inner border lines defined using officer::fp_border() outer_border Border object outer border lines defined using officer::fp_border() set_header_inner_border_v Boolean value enable disable inner vertical borders headers set_header_inner_border_h Boolean value enable disable inner horizontal borders headers set_header_outer_border Boolean value enable disable outer border headers set_body_inner_border_v Boolean value enable disable inner vertical borders body set_body_inner_border_h Boolean value enable disable inner horizontal borders body set_body_outer_border Boolean value enable disable outer border borders body notes_detect Vector strings detect output tables (example c(\"NC\", \"BLQ\")).","code":""},{"path":"/reference/span_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Spread Large Table Over Smaller Tables — span_table","text":"list following elements isgood:    Boolean indicating exit status function. one_body:  Full table headers. one_table: Full table headers. msgs:      Vector text messages describing errors found. tables:    Named list tables. list element output. format build_span().","code":""},{"path":"/reference/span_table.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Spread Large Table Over Smaller Tables — span_table","text":"way data frames relate mapped . dimensions different data frames identified (nrow x ncol)","code":"#|-------------------------------------| --- #|                 |                   |  ^ #|                 |                   |  | #| row_common_head |  table_body_head  |  | m #|      m x n      |       m x c       |  | #|                 |                   |  v #|-------------------------------------| --- #|                 |                   |  ^ #|                 |                   |  | #|    row_common   |    table_body     |  | r #|      r x n      |      r x c        |  | #|                 |                   |  | #|                 |                   |  v #|-------------------------------------| --- # #|<--------------->|<----------------->| #        n                   c"},{"path":[]},{"path":"/reference/span_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Spread Large Table Over Smaller Tables — span_table","text":"","code":"library(formods) library(readxl) library(dplyr) library(tidyr)  # First we need to create some data.  # This will read in a test dataset: DS = readxl::read_excel(  path  = system.file(package=\"formods\",                       \"test_data\",                       \"TEST_DATA.xlsx\"),  sheet = \"DATA\")  # This will filter the dataset down and modify the formatting DS = dplyr::filter(DS, EVID == 0)                          |>   dplyr::filter(ID <= 30)                                  |>   dplyr::select(ID, TIME, DV, CMT)                         |>   dplyr::mutate(CMT  = ifelse(.data[[\"CMT\"]] == \"C_ng_ml\",                               \"Test Article\",                               .data[[\"CMT\"]]))              |>   dplyr::select(ID, TIME, DV, CMT)                         |>   dplyr::mutate(CMT = ifelse(.data[[\"CMT\"]] == \"BM_ng_ml\",                              \"Biomarker\",                              .data[[\"CMT\"]]))               |>   dplyr::rename(Analyte = \"CMT\")                           |>   dplyr::mutate(DV = ifelse(.data[[\"DV\"]] == 0, \"BQL\", .data[[\"DV\"]]))  # This represents the large table we want to split up into smaller tables  wide_df = tidyr::pivot_wider(DS,   values_from = \"DV\",   names_from  = \"ID\")               |>   dplyr::arrange(Analyte, TIME)     |>   dplyr::mutate(TIME = as.character(.data[[\"TIME\"]]))      # The first two columns represent the rows # that are common across the tables: row_common = wide_df[,1:2]  # The remaining columns represent the body of the table: table_body = wide_df[,3:ncol(wide_df)]  # Next we create matrices that contain the header  # information for each component above: row_common_head = matrix(   data  = c(\"Time\", \"Analyte\",             \"(hr)\", \"(ng/ml)\"),   ncol  = 2,   byrow = TRUE)  table_body_head = matrix(   data  = c(rep(\"Subject ID\", times=ncol(table_body)),              names(table_body)),   ncol  = ncol(table_body),   byrow = TRUE)   # This builds all of the tables: span_res = span_table(table_body      = table_body,                       row_common      = row_common,                       table_body_head = table_body_head,                       row_common_head = row_common_head,                       notes_detect    = c(\"BQL\"))  # This will show you the first one: span_res$tables[[\"Table 1\"]]$ft #> a flextable object. #> col_keys: `TIME`, `Analyte`, `1`, `2`, `3`, `4`, `5`, `6`  #> header has 2 row(s)  #> body has 20 row(s)  #> original dataset sample:  #>   TIME   Analyte    1    2     3    4    5     6 #> 1    0 Biomarker 1250 1030   831 1170 1140   868 #> 2 0.25 Biomarker 1255 1032 832.2 1172 1145 869.4 #> 3  0.5 Biomarker 1259 1034 833.4 1174 1149 870.9 #> 4    1 Biomarker 1269 1037 835.8 1178 1158 873.7 #> 5    2 Biomarker 1287 1045 840.5 1186 1176 879.4  # This will build a single table with the rows and  # column ranges specified bs_res =   build_span(table_body      = table_body,                       row_common      = row_common,                       table_body_head = table_body_head,                       row_common_head = row_common_head,                       col_sel         = c(1:10),                       row_sel         = c(1:10),                       notes_detect    = c(\"BQL\"))  # This will show you the result: bs_res$ft #> a flextable object. #> col_keys: `TIME`, `Analyte`, `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`  #> header has 2 row(s)  #> body has 10 row(s)  #> original dataset sample:  #>   TIME   Analyte    1    2     3    4    5     6   7    8    9    10 #> 1    0 Biomarker 1250 1030   831 1170 1140   868 643 1050 1130   744 #> 2 0.25 Biomarker 1255 1032 832.2 1172 1145 869.4 644 1051 1134 745.9 #> 3  0.5 Biomarker 1259 1034 833.4 1174 1149 870.9 645 1052 1138 747.8 #> 4    1 Biomarker 1269 1037 835.8 1178 1158 873.7 647 1055 1146 751.7 #> 5    2 Biomarker 1287 1045 840.5 1186 1176 879.4 651 1059 1162 759.2"},{"path":"/news/index.html","id":"ruminate-021-development-version","dir":"Changelog","previous_headings":"","what":"ruminate 0.2.1 (development version)","title":"ruminate 0.2.1 (development version)","text":"CRAN release: 2023-12-11 Fixed use suggests conditional.","code":""},{"path":"/news/index.html","id":"ruminate-020","dir":"Changelog","previous_headings":"","what":"ruminate 0.2.0","title":"ruminate 0.2.0","text":"CRAN release: 2023-12-02 Support rxode2 NONMEM models Fixed bug NCA module column details didn’t update properly switching analyses. Fixed bug detecting dosing rows left dosing records data frame subsequent NCA. Fixed bug parameter(s) added interval resulting [[numeric]] reported values. Now time interval added subsequent additions update parameters interval. Fixed stand-alone code generation copy clipboard.","code":""},{"path":"/news/index.html","id":"ruminate-011","dir":"Changelog","previous_headings":"","what":"ruminate 0.1.1","title":"ruminate 0.1.1","text":"CRAN release: 2023-08-29 Initial release","code":""}]
